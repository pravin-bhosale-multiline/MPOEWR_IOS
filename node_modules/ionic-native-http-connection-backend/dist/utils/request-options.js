var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { bodyToObject } from './http-params';
import { collectionToObject } from './collection-to-object';
import { detectSerializer } from './data-serializer';
import { detectResponseType } from './response-type';
var DATA_REQUEST_METHODS = ['post', 'put', 'patch'];
export var getRequestOptions = function (req) { return (__assign({ method: req.method.toLowerCase(), headers: collectionToObject(req.headers), serializer: detectSerializer(req), responseType: detectResponseType(req.responseType) }, (!DATA_REQUEST_METHODS.includes(req.method.toLowerCase())
    ? null
    : getRequestData(req)))); };
export var getRequestData = function (req) {
    if ((req.headers.get('content-type') || '')
        .toLowerCase()
        .indexOf('text/') === 0) {
        return {
            data: req.body,
        };
    }
    return {
        data: bodyToObject(req.body),
    };
};
//# sourceMappingURL=request-options.js.map