{"version":3,"sources":["./src/app/selectorsinglequestionframwork/selectorsingle.page.html","./src/app/arvisitschedule/arvisitschedule.service.ts","./src/app/selectorsinglequestionframwork/selectorsingle-routing.module.ts","./src/app/selectorsinglequestionframwork/selectorsingle.module.ts","./src/app/selectorsinglequestionframwork/selectorsingle.page.scss","./src/app/selectorsinglequestionframwork/selectorsingle.page.ts"],"names":[],"mappings":"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","file":"selectorsinglequestionframwork-selectorsingle-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Selection</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"section\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n  <ion-item>\\n    <ion-label  color=\\\"primary\\\" position=\\\"stacked\\\" >{{txtCaption}}</ion-label>\\n    <ionic-selectable #id1 [(ngModel)]=\\\"selecteddata\\\" itemValueField=\\\"name\\\" itemTextField=\\\"name\\\" [items]=\\\"filterdata\\\"\\n      [canSearch]=\\\"true\\\" [hasInfiniteScroll]=\\\"true\\\" (onSearch)=\\\"onSearchChange($event)\\\" (onClose)=\\\"onSubmitSingleSelection()\\\"\\n      (onInfiniteScroll)=\\\"doInfinite($event)\\\" [isMultiple]=\\\"ismultiselect\\\">\\n    </ionic-selectable>\\n  </ion-item>\\n  <ion-button size=\\\"small\\\" shape=\\\"round\\\" fill=\\\"outline\\\" (click)=\\\"onSubmitSingleSelection()\\\">\\n    Submit\\n  </ion-button>\\n  \\n</ion-content>\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\nimport { LoginauthService } from '../login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArvisitscheduleService {\n\n  constructor(public http: HttpClient,public loginauth: LoginauthService,private genericHTTP: GenericHttpClientService) { }\nvisitplanforchecklist;\nselectedorg:any;\nselectedinspection:any;\nsectionQuestionJson;\n   getArVisitPlan(body){\n  \n \n    //console.log(\"Body: \",body);\n      let login = this.loginauth.user;//\"P2admin\";\n      let password = this.loginauth.pass;//\"Pass2020\";\n      const auth=btoa(login+\":\"+password);\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Accept':'application/json',\n        'Authorization':'Basic '+auth\n    \n          })\n        };\n        \n       return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTgetRequest'\n       ,body, httpOptions);\n    \n      }\n      saveArVisitPlan(body){\n  \n \n     //   console.log(\"Body: \",body);\n          let login = this.loginauth.user;//\"P2admin\";\n          let password = this.loginauth.pass;//\"Pass2020\";\n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n              'Content-Type':'application/json',\n              'Accept':'application/json',\n            'Authorization':'Basic '+auth\n        \n              })\n            };\n            \n           return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTSaveARVisitPlan'\n           ,body, httpOptions);\n        \n          }\n    saveArVisitUnplannedPlan(body){\n\n\n      //   console.log(\"Body: \",body);\n            let login = this.loginauth.user;//\"P2admin\";\n            let password = this.loginauth.pass;//\"Pass2020\";\n            const auth=btoa(login+\":\"+password);\n            const httpOptions = {\n              headers: new HttpHeaders({\n                'Content-Type':'application/json',\n                'Accept':'application/json',\n              'Authorization':'Basic '+auth\n          \n                })\n              };\n              \n            return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTSaveUnplannedARVisitPlan'\n            ,body, httpOptions);\n          \n            }\n          getRequest(body){\n            let login = this.loginauth.user;//\"P2admin\";\n            let password = this.loginauth.pass;//\"Pass2020\";\n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n              'Content-Type':'application/json',\n              'Accept':'application/json',\n            'Authorization':'Basic '+auth\n        \n              })\n            };\n            \n           return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.qcinspection.MQCIgetRequest'\n           ,body, httpOptions);\n        \n        \n          }\n          onSaveSectionQuestion(body){\n            let login = this.loginauth.user;//\"P2admin\";\n            let password = this.loginauth.pass;//\"Pass2020\";\n            \n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n             'Authorization':'Basic '+auth\n        \n              })\n            };\n            \n           \n            var  specificHeader = { 'Authorization':'Basic '+auth}\n        \n           return this.genericHTTP.postformdata(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTonSaveChecklistTrx'\n           ,body, specificHeader, httpOptions);\n        \n          }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SelectorsinglePage } from './selectorsingle.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectorsinglePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SelectorsinglePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { IonicModule } from '@ionic/angular';\n\nimport { SelectorsinglePageRoutingModule } from './selectorsingle-routing.module';\n\nimport { SelectorsinglePage } from './selectorsingle.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SelectorsinglePageRoutingModule,\n    \n    IonicSelectableModule\n  ],\n  declarations: [SelectorsinglePage]\n})\nexport class SelectorsinglePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGVjdG9yc2luZ2xlcXVlc3Rpb25mcmFtd29yay9zZWxlY3RvcnNpbmdsZS5wYWdlLnNjc3MifQ== */\"","import { FormGroup, FormBuilder } from '@angular/forms';\nimport { ArvisitscheduleService as ChecklistService } from './../arvisitschedule/arvisitschedule.service';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { Data, SelectorsingleserviceService  } from '../selectorsingle/selectorsingleservice.service';\n\n\n@Component({\n  selector: 'app-selectorsingle',\n  templateUrl: './selectorsingle.page.html',\n  styleUrls: ['./selectorsingle.page.scss'],\n})\nexport class SelectorsinglePage implements OnInit {\n  selecteddata;\n  data:Data[];\n  filterdata:Data[];\n  txtCaption:string;\n  pagerow: number;\n  totalrow: number;\n  ismultiselect:boolean;\n  question: any;\n  \n  myForm: FormGroup;\n  constructor(private singleselservc:SelectorsingleserviceService,\n    private route: ActivatedRoute\n    ,private router: Router,private checklistservice:ChecklistService) { \n      \n    }\n    @ViewChild(\"id1\", { static: false }) id1: IonicSelectableComponent;\n  ngOnInit() {\n    this.txtCaption='Select Value'\n    this.route.params.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.question= this.router.getCurrentNavigation().extras.state.question;\n        \n      if(this.question.type==='MSL'){\n        this.ismultiselect=true;\n      }else{\n        this.ismultiselect=false;\n      }\n      this.singleselservc.json['action']= 'getselctordata';\n      this.singleselservc.json['queid']= this.question.questionid;\n      this.singleselservc.json['orgid']= '0';\n      this.singleselservc.json['text']='';\n      this.singleselservc.json['offset']=0;\n      this.singleselservc.json['quemaster']=this.checklistservice.selectedinspection;\n      this.singleselservc.pageOffset=0;\n            \n      this.checklistservice.getRequest(this.singleselservc.json).subscribe(data => {\n       \n        var response = data;\n        this.filterdata = response.data;\n        this.pagerow=this.getpagenofromlist(data['data']);\n        this.totalrow = response.totalRows;\n        this.id1.open();\n        console.log(\"filterdata\", this.filterdata);\n       // \n  \n      });\n    }\n    });\n  \n  }\n  onSubmitSingleSelection(){\n    if(this.ismultiselect){\n      let strmultivaluedata='';\n      for(let value of this.selecteddata){\n        strmultivaluedata=strmultivaluedata+'\\''+value.name+'\\','\n      }\n      strmultivaluedata='('+strmultivaluedata.substring(0,strmultivaluedata.length-1)+')';\n      this.question.ans=strmultivaluedata;\n     // console.log(strmultivaluedata);\n      \n    }else{\n      //let que = this.getQueDetFromQueID(this.question.questionid)\n      this.question.ans=this.selecteddata.name;\n    }\n    console.log(this.checklistservice.selectedinspection);\n    let navigationExtras: NavigationExtras = {\n      state: {\n        question:this.question\n        \n      }\n    };\n    this.router.navigate(['section'],navigationExtras);\n    \n  }\n  getQueDetFromQueID(key){\n  \n    for(let section of this.checklistservice.selectedinspection.sections){\n      //  console.log('section',section);\n      \n      for(let que of section.questions){\n        if(key===que.questionid){\n          return que;\n        }\n      }\n    }\n  \n  }\n  onSearchChange(event: {\n    component: IonicSelectableComponent,\n    text: string\n  }) {\n    let text = event.text.trim().toLowerCase(); \n    this.singleselservc.json['offset']=0;\n    this.singleselservc.json['quemaster']=this.checklistservice.selectedinspection;\n    this.singleselservc.json['action']= 'getselctordata';\n        this.singleselservc.json['queid']= this.question.questionid;\n        this.singleselservc.json['orgid']= '0';\n    // Reset items back to all of the items\n   //this.filterdata = this.data;\n  \n    // if the value is an empty string don't filter the items\n    if (text && text.trim() !== '') {\n      if(text.length>2){\n       \n        this.singleselservc.json['text']=text;\n        this.checklistservice.getRequest(this.singleselservc.json).subscribe(data => {\n          var response = data;\n          this.filterdata = response.data;\n          this.pagerow=this.getpagenofromlist(data['data']);\n          this.totalrow = response.totalRows;\n          console.log(\"searchdata\", this.filterdata);\n         // \n    \n        });\n  \n      }\n      \n    }else{\n      this.singleselservc.json['text']=text;\n      this.checklistservice.getRequest(this.singleselservc.json).subscribe(data => {\n        var response = data;\n        this.filterdata = response.data;\n        this.pagerow=this.getpagenofromlist(data['data']);\n        this.totalrow = response.totalRows;\n        console.log(\"searchdata\", this.filterdata);\n       // \n  \n      });\n    }\n\n  }\n  getpagenofromlist=function(jolist){\n    let pagerow=0;\n    for (let item of jolist) {\n      pagerow=pagerow+1;\n    }\n    return pagerow;\n  }\n  public async doInfinite(event: {\n    component: IonicSelectableComponent,\n    text: string\n  }) {\n    try {\n      //Set this initial 0 at top \n    \n    \n     let text = (event.text || '').trim().toLowerCase();\n     if(this.pagerow===20 && this.totalrow>20){\n        this.singleselservc.pageOffset = this.singleselservc.pageOffset + 20;\n        this.singleselservc.json['offset']=this.singleselservc.pageOffset;\n        this.singleselservc.json['quemaster']=this.checklistservice.selectedinspection;\n        this.singleselservc.json['action']= 'getselctordata';\n        this.singleselservc.json['queid']= this.question.questionid;\n        this.singleselservc.json['orgid']= '0';\n        if (text) {\n          this.singleselservc.json['text']=text;\n        }\n        let tempData = await (await this.checklistservice.getRequest(this.singleselservc.json)).toPromise();\n      \n        if (!!tempData) {\n          // This is your page varible where you bind data\n          this.data = this.data.concat(tempData['data']);\n          this.pagerow=this.getpagenofromlist(tempData['data']);\n        this.filterdata=this.filterdata.concat(tempData['data']);\n        this.totalrow = tempData['totalRows'];\n        event.component.endInfiniteScroll();\n       \n      \n        }\n            // console.log(this.filterjoblist.length+'  '+this.totalrow);\n       \n     }\n   \n     \n     if(this.filterdata.length===this.totalrow){\n      event.component.disableInfiniteScroll();\n      return;\n      \n    }\n      \n    } catch (error) {\n      \n    }\n    \n  \n  \n  \n  }\n}\n"],"sourceRoot":""}