{"version":3,"sources":["./src/app/arvisitschedule/unplannedvisit/unplannedvisit.page.html","./src/app/arvisitschedule/arvisitschedule.service.ts","./src/app/arvisitschedule/unplannedvisit/unplannedvisit.module.ts","./src/app/arvisitschedule/unplannedvisit/unplannedvisit.page.scss","./src/app/arvisitschedule/unplannedvisit/unplannedvisit.page.ts"],"names":[],"mappings":"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","file":"arvisitschedule-unplannedvisit-unplannedvisit-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Unplanned Visit\\n    </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"formplan\\\" (ngSubmit)=\\\"onSaveVisit(formplan.value)\\\">\\n  \\n    <ion-grid >\\n      <ion-row>\\n        <ion-col>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n              <ion-label position=\\\"stacked\\\">Plan Selection<span style=\\\"color:red!important\\\">*</span></ion-label>\\n              <ion-select formControlName=\\\"plansch\\\" interface=\\\"popover\\\" multiple=\\\"false\\\"\\n                placeholder=\\\"Select Plan\\\">\\n                <ion-select-option *ngFor=\\\"let sch of arschlist\\\" [value]=\\\"sch\\\">{{sch.schname}}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            </ion-col>\\n          </ion-row>\\n         \\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">Customer Name<span style=\\\"color:red!important\\\">*</span></ion-label>\\n            <ionic-selectable  placeholder=\\\"Select Plan\\\" \\n              formControlName=\\\"customer\\\"\\n              [items]=\\\"customerlist\\\"\\n              itemValueField=\\\"bpartnerid\\\" \\n              itemTextField=\\\"bpartnername\\\" \\n              [canSearch]=\\\"true\\\" \\n              (onClose)=\\\"onCloseCust($event)\\\" \\n              (onSearch)=\\\"custSearchChange($event)\\\"\\n              (onInfiniteScroll)=\\\"doInfiniteCust($event)\\\">\\n            </ionic-selectable>\\n           \\n          </ion-item>\\n         \\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n          <ion-label position=\\\"stacked\\\">Billing Address<span style=\\\"color:red!important\\\">*</span></ion-label>\\n          <ion-select formControlName=\\\"billtoaddress\\\" interface=\\\"popover\\\" multiple=\\\"false\\\"\\n            placeholder=\\\"Select Address\\\">\\n            <ion-select-option *ngFor=\\\"let billadd of billtoaddressList\\\" [value]=\\\"billadd\\\">{{billadd.bpartnerlocname}}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n          <ion-label position=\\\"stacked\\\">Visit Date<span style=\\\"color:red!important\\\">*</span></ion-label>\\n          <ion-datetime [disabled]=\\\"true\\\" [max]=\\\"currentdate\\\" [min]=\\\"currentdate\\\" displayFormat=\\\"DD-MM-YYYY\\\" formControlName=\\\"visitdate\\\"></ion-datetime>\\n        </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n          <ion-label position=\\\"stacked\\\">Target for the month<span style=\\\"color:red!important\\\">*</span></ion-label>\\n         <ion-input type=\\\"number\\\" placeholder=\\\"Target for the month\\\" formControlName=\\\"targetformonth\\\"></ion-input>\\n        </ion-item>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n  \\n\\n</ion-content>\\n<section class=\\\"full-width\\\">\\n  <ion-row>\\n    <ion-col>\\n      <ion-button expand=\\\"full\\\" type=\\\"submit\\\" color=\\\"primary\\\" text-center [disabled]=\\\"!formplan.valid \\\"\\n      (click)=\\\"onSaveVisit(formplan.value)\\\">Submit</ion-button>\\n</ion-col>\\n\\n</ion-row>\\n</section>\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\nimport { LoginauthService } from '../login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArvisitscheduleService {\n\n  constructor(public http: HttpClient,public loginauth: LoginauthService,private genericHTTP: GenericHttpClientService) { }\nvisitplanforchecklist;\nselectedorg:any;\nselectedinspection:any;\nsectionQuestionJson;\n   getArVisitPlan(body){\n  \n \n    //console.log(\"Body: \",body);\n      let login = this.loginauth.user;//\"P2admin\";\n      let password = this.loginauth.pass;//\"Pass2020\";\n      const auth=btoa(login+\":\"+password);\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Accept':'application/json',\n        'Authorization':'Basic '+auth\n    \n          })\n        };\n        \n       return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTgetRequest'\n       ,body, httpOptions);\n    \n      }\n      saveArVisitPlan(body){\n  \n \n     //   console.log(\"Body: \",body);\n          let login = this.loginauth.user;//\"P2admin\";\n          let password = this.loginauth.pass;//\"Pass2020\";\n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n              'Content-Type':'application/json',\n              'Accept':'application/json',\n            'Authorization':'Basic '+auth\n        \n              })\n            };\n            \n           return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTSaveARVisitPlan'\n           ,body, httpOptions);\n        \n          }\n    saveArVisitUnplannedPlan(body){\n\n\n      //   console.log(\"Body: \",body);\n            let login = this.loginauth.user;//\"P2admin\";\n            let password = this.loginauth.pass;//\"Pass2020\";\n            const auth=btoa(login+\":\"+password);\n            const httpOptions = {\n              headers: new HttpHeaders({\n                'Content-Type':'application/json',\n                'Accept':'application/json',\n              'Authorization':'Basic '+auth\n          \n                })\n              };\n              \n            return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTSaveUnplannedARVisitPlan'\n            ,body, httpOptions);\n          \n            }\n          getRequest(body){\n            let login = this.loginauth.user;//\"P2admin\";\n            let password = this.loginauth.pass;//\"Pass2020\";\n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n              'Content-Type':'application/json',\n              'Accept':'application/json',\n            'Authorization':'Basic '+auth\n        \n              })\n            };\n            \n           return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.qcinspection.MQCIgetRequest'\n           ,body, httpOptions);\n        \n        \n          }\n          onSaveSectionQuestion(body){\n            let login = this.loginauth.user;//\"P2admin\";\n            let password = this.loginauth.pass;//\"Pass2020\";\n            \n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n             'Authorization':'Basic '+auth\n        \n              })\n            };\n            \n           \n            var  specificHeader = { 'Authorization':'Basic '+auth}\n        \n           return this.genericHTTP.postformdata(this.loginauth.commonurl + 'ws/in.mbs.artracker.MARTonSaveChecklistTrx'\n           ,body, specificHeader, httpOptions);\n        \n          }\n}\n","import { IonicSelectableModule } from 'ionic-selectable';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnplannedvisitPage } from './unplannedvisit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnplannedvisitPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    IonicSelectableModule,\n    ReactiveFormsModule\n  ],\n  declarations: [UnplannedvisitPage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class UnplannedvisitPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FydmlzaXRzY2hlZHVsZS91bnBsYW5uZWR2aXNpdC91bnBsYW5uZWR2aXNpdC5wYWdlLnNjc3MifQ== */\"","import { Router } from '@angular/router';\nimport { Commonfun } from './../../../provider/commonfun';\nimport { ArvisitscheduleService } from './../arvisitschedule.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { IonicSelectableComponent } from 'ionic-selectable';\n\n@Component({\n  selector: 'app-unplannedvisit',\n  templateUrl: './unplannedvisit.page.html',\n  styleUrls: ['./unplannedvisit.page.scss'],\n})\nexport class UnplannedvisitPage implements OnInit {\n  formplan: FormGroup;\n  arschlist;\n  customerlist;\n  billtoaddressList;\n  validation_messages = {\n    'fromplan': [\n      { type: 'required', message: ' *Please Select Plan.' }\n    ],\n    'customer': [\n      { type: 'required', message: '*Please Select Customer.' }\n    ],\n    'billtoaddress': [\n      { type: 'required', message: 'Please Select Billing Address.' }\n    ],\n    \n  }\n  totalrowc: number;\n  currentdate;\n  \n  constructor(private fb: FormBuilder\n    ,public arvisitScheduleService:ArvisitscheduleService\n    ,public commonfun: Commonfun\n    ,public router:Router) { \n    this.formplan = this.fb.group({\n      plansch: [, Validators.required],\n      customer: [, Validators.required],\n      billtoaddress: [, Validators.required],\n      visitdate: [],\n      targetformonth:[0,Validators.required]\n    });\n    this.bindARVisitSch();\n  }\n\n  ngOnInit() {\n    this.currentdate=new Date().toISOString();\n    this.formplan.get(\"visitdate\").setValue(this.currentdate)\n\n  }\n  bindCustomerBillAddress(bpartnerid) {\n    try {\n        var body= {\n          \"action\": \"getcustomerinvoiceaddress\",\n          \"bpartnerid\":bpartnerid,\n     }\n          this.arvisitScheduleService.getArVisitPlan(body).subscribe(data => {\n          var response = data;\n          this.billtoaddressList = response.data;\n          if(this.billtoaddressList.length===1){\n            this.formplan.get(\"billtoaddress\").setValue(this.billtoaddressList[0]);\n          }\n        });\n  } catch (error) {\n    //console.log(\"bindOwnedDriverapi\",error);\n  }\n  }\n  bindARVisitSch() {\n    try {\n        var body= {\n          \"action\": \"getlistOfarvisitschedule\",\n     }\n          this.arvisitScheduleService.getArVisitPlan(body).subscribe(data => {\n          var response = data;\n          this.arschlist = response.data;\n        });\n  } catch (error) {\n    //console.log(\"bindOwnedDriverapi\",error);\n  }\n  }\n  searchc='';\n  offsetc = 0;\n  onCloseCust(event: {\n    component: IonicSelectableComponent,\n    text: any\n  }) {\n    event.component.searchText = \"\";\n    this.offsetc = 0;\n    if(this.formplan.get(\"customer\").value){\n      let bpartnerid=this.formplan.get(\"customer\").value.bpartnerid\n      this.bindCustomerBillAddress(bpartnerid)\n    }\n    \n  }\n  custSearchChange(event: { component: IonicSelectableComponent, text: any }) {\n    this.searchc = event.text;//.replace(/\\s/g,'');\n      this.offsetc = 0;\n      this.bindCustomerList(this.searchc, 0);\n  }\n  \n  bindCustomerList(searchtext,intoffset) {\n    try {\n        var body= {\n          \"action\": \"getcustomerforar\",\n          \"offset\":intoffset,\n          \"search\":searchtext    \n      }\n          this.arvisitScheduleService.getArVisitPlan(body).subscribe(data => {\n          var response = data;\n          this.customerlist = response.data;\n          this.totalrowc = response.totalRows;\n        });\n  } catch (error) {\n    //console.log(\"bindOwnedDriverapi\",error);\n  }\n  }\n  public async doInfiniteCust(event: {\n    component: IonicSelectableComponent,\n    text: string\n  }) {\n    try {\n      //Set this initial 0 at top \n  \n      let text = (event.text || '').trim().toLowerCase();\n      if (this.offsetc < this.totalrowc && this.totalrowc > 20) {\n  \n  \n        this.offsetc = this.offsetc + 20;\n        var body= {\n          \"action\": \"getcustomerforar\",\n          \"offset\":this.offsetc,\n          \"search\":text    \n      }\n        var tempData = await (await this.arvisitScheduleService.getArVisitPlan(body)).toPromise();\n  \n        if (!!tempData) {\n  \n          this.customerlist = this.customerlist.concat(tempData['data']);\n          event.component.endInfiniteScroll();\n        }\n      }\n  \n      if (this.offsetc > this.totalrowc) {\n        event.component.disableInfiniteScroll();\n        return;\n      }\n    } catch (error) {\n  \n    }\n  \n  }\n\nonSaveVisit(frmValue){\n  //console.log(frmValue);\ntry{\n  var body= {\n    \"schid\":frmValue.plansch.schid,\n    \"bpartnerlocid\":frmValue.billtoaddress.bpartnerlocid,\n    \"bpartnerid\":frmValue.customer.bpartnerid,\n    \"targetformonth\":frmValue.targetformonth,\n    \"visitdate\":frmValue.visitdate\n   }\n   this.commonfun.loadingPresent();\n   this.arvisitScheduleService.saveArVisitUnplannedPlan(body).subscribe(data => {\n   this.commonfun.loadingDismiss();\n    \n        var response = data['response'];\n    if(response.hasOwnProperty('messageType'))\n    {\n    if(response.messageType=='success')\n      this.commonfun.presentAlert(\"Message\",\"Success\",response.messageText);\n      this.router.navigateByUrl('/arvisitschedule');\n    }\n    if(response.error)\n      this.commonfun.presentAlert(\"Message\",\"Error\",response.error.message);\n\n      });\n    } catch (error) {\n    this.commonfun.loadingDismiss();\n    \n    this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    \n    }\n\n  \n}\n  \n}\n"],"sourceRoot":""}