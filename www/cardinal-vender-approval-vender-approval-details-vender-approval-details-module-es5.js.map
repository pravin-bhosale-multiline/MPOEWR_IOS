{"version":3,"sources":["./src/app/cardinal/vender-approval/vender-approval-details/vender-approval-details.page.html","./src/app/cardinal/vender-approval/vender-approval-details/vender-approval-details.module.ts","./src/app/cardinal/vender-approval/vender-approval-details/vender-approval-details.page.scss","./src/app/cardinal/vender-approval/vender-approval-details/vender-approval-details.page.ts"],"names":[],"mappings":"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","file":"cardinal-vender-approval-vender-approval-details-vender-approval-details-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Compliant Acceptance Details\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\" routerDirection=\\\"root\\\" routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-buttons>\\n    <!-- <ion-buttons (click)=\\\"refreshPage()\\\" slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\">\\n      <ion-icon name=\\\"refresh\\\"></ion-icon>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n    <!-- Detail Tab -->\\n    <mat-step [stepControl]=\\\"detailFormGroup\\\">\\n      <form [formGroup]=\\\"detailFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Details</ng-template>\\n        <!-- complaint_no -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Complaint No.</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.complaintno\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- complaint_date -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Complaint Date</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.complaintdate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Document Type -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Document Type</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.doctype[0].name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Name of Complainer -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Name of Complainer</mat-label>\\n          <input matInput formControlName=\\\"nameOfComplainerCtrl\\\" [(ngModel)]=\\\"service.nameofcomplainer\\\">\\n        </mat-form-field>\\n        <!-- Designation of Complainer -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Designation of Complainer</mat-label>\\n          <input matInput formControlName=\\\"desigOfComplainerCtrl\\\" [(ngModel)]=\\\"service.desofcomplnr[0].name\\\">\\n        </mat-form-field>\\n        <!-- Contact No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Contact No</mat-label>\\n          <input matInput formControlName=\\\"mobilenoCtrl\\\" [(ngModel)]=\\\"service.contnumber\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobileno\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('mobilenoCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Email ID -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Email ID</mat-label>\\n          <input matInput formControlName=\\\"emailIDCtrl\\\" [(ngModel)]=\\\"service.email\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('emailIDCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Event Date -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Event Date</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.eventdate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Complaint Description -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Complaint Description</mat-label>\\n          <input matInput formControlName=\\\"complaintDescriptionCtrl\\\" [(ngModel)]=\\\"service.description\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.complaintDescription\\\">\\n              <div\\n                *ngIf=\\\"detailFormGroup.get('complaintDescriptionCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperNext (click)=\\\"matDetailSettper($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Product Compliant Tab-->\\n    <mat-step [stepControl]=\\\"productCompliantFormGroup\\\" *ngIf=\\\"isProductCompliantTab\\\">\\n      <form [formGroup]=\\\"productCompliantFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Product Compliant</ng-template>\\n        <!-- Lot No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Lot No.</mat-label>\\n          <input matInput formControlName=\\\"lotNoCtrl\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperProductCompliant($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Consumables Tab  -->\\n    <mat-step [stepControl]=\\\"consumablesFormGroup\\\" *ngIf=\\\"isConsumablesTab\\\">\\n      <form [formGroup]=\\\"consumablesFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Consumables</ng-template>\\n        <!-- Lot No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Lot No.</mat-label>\\n          <input matInput formControlName=\\\"lotNoConsumablesCtrl\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperConsumables($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Equiment Tab-->\\n    <mat-step [stepControl]=\\\"equimentFormGroup\\\" *ngIf=\\\"isEquimentTab\\\">\\n      <form [formGroup]=\\\"equimentFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Equiment</ng-template>\\n        <!-- Serial No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Serial No.</mat-label>\\n          <input matInput formControlName=\\\"serialNoCtrl\\\" [(ngModel)]=\\\"service.serialno\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.serialNo\\\">\\n              <div *ngIf=\\\"equimentFormGroup.get('serialNoCtrl').hasError(validation.type) && equimentStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Contract Type -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Contract Type</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"contracttype\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Invoice No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Invoice No.</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.invoiceno\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Invoice Date -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Invoice Date</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.invoicedate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Error Code -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Error Code</mat-label>\\n            <input matInput [disabled]='true' [(ngModel)]=\\\"service.errorcode[0].code\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n        </mat-form-field>\\n        <!-- Dealer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Dealer Name</mat-label>\\n          <input matInput formControlName=\\\"dealerNameCtrl\\\" [(ngModel)]=\\\"service.dealername\\\">\\n        </mat-form-field>\\n         <!-- New Dealer Name\\n         <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Dealer Name</mat-label>\\n          <input matInput formControlName=\\\"newDealerNameCtrl\\\" [(ngModel)]=\\\"service.newdealername\\\">\\n        </mat-form-field> -->\\n        \\n        <!-- Sales Representative -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Sales Representative</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.salesrep\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Installation Date -->\\n         <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Installation Date</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.installationdate\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperEquiment($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- SKU Details Tab-->\\n    <mat-step [stepControl]=\\\"skuDetailsFormGroup\\\">\\n      <form [formGroup]=\\\"skuDetailsFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>SKU Details</ng-template>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>SKU Code</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.skucode\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- SKU Name / Description -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>SKU Name / Description</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.skuname\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Brand Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Brand Name</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.brandname\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Product to be returned -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Product to be returned</mat-label>\\n          <mat-select [disabled]='true' [(ngModel)]=\\\"productToBeReturn\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <mat-option value=\\\"Yes\\\">Yes</mat-option>\\n            <mat-option value=\\\"No\\\">No</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperSKUDetails($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Customer Detail Tab -->\\n    <mat-step [stepControl]=\\\"customerDetailFormGroup\\\">\\n      <form [formGroup]=\\\"customerDetailFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Customer Detail</ng-template>\\n        <!-- Customer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Name</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"service.custname\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Customer Address 1 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 1</mat-label>\\n          <input matInput formControlName=\\\"customerAddress1Ctrl\\\" [(ngModel)]=\\\"service.add1\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.customerAddress1\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('customerAddress1Ctrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Customer Address 2 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 2</mat-label>\\n          <input matInput formControlName=\\\"customerAddress2Ctrl\\\" [(ngModel)]=\\\"service.add2\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.customerAddress2\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('customerAddress2Ctrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Customer Address 3 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 3</mat-label>\\n          <input matInput formControlName=\\\"customerAddress3Ctrl\\\" [(ngModel)]=\\\"service.add3\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.customerAddress3\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('customerAddress3Ctrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Pin Code -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Pin Code</mat-label>\\n          <input type=\\\"number\\\" matInput formControlName=\\\"pinCodeCtrl\\\" [(ngModel)]=\\\"service.pincode\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.pinCode\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('pinCodeCtrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Area -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Area</mat-label>\\n          <input matInput [disabled]='true' formControlName=\\\"areaCtrl\\\">\\n        </mat-form-field>\\n        <!-- City -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>City</mat-label>\\n          <input matInput [disabled]='true' formControlName=\\\"cityCtrl\\\">\\n        </mat-form-field>\\n        <!-- State -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>State</mat-label>\\n          <input matInput [disabled]='true' formControlName=\\\"stateCtrl\\\">\\n        </mat-form-field>\\n        <!-- Country -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Country</mat-label>\\n          <input matInput [disabled]='true' formControlName=\\\"countryCtrl\\\">\\n        </mat-form-field>\\n        <!-- Service Engineer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Service Engineer Name</mat-label>\\n            <mat-select formControlName=\\\"serviceEngineerNameCtrl\\\" [(ngModel)]=\\\"serviceEngSelected\\\"\\n                (selectionChange)=\\\"serviceEngSelectedChange(serviceEngSelected)\\\">\\n               <mat-option *ngFor=\\\"let serviceEngObj of serviceEngList\\\" [value]=\\\"serviceEngObj\\\">\\n                  {{serviceEngObj.name}}\\n              </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n         <!--Service Engineer Contact No -->\\n         <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Contact No</mat-label>\\n          <input matInput formControlName=\\\"serviceEngMobilenoCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobileno\\\">\\n              <div *ngIf=\\\"customerDetailFormGroup.get('serviceEngMobilenoCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Date of Visit -->\\n        <div class=\\\"example-full-width bottom-border\\\">\\n          <ion-label style=\\\"color: darkgray;\\\">Date of Visit</ion-label>\\n          <section class=\\\"cus\\\">\\n           <ion-datetime  style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\"  formControlName=\\\"dateOfVisitCtrl\\\" max=\\\"2050-12-31\\\" [min]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          </ion-datetime>\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> \\n        </section>\\n        </div>\\n        <div padding-left>\\n          <ng-container *ngFor=\\\"let validation of validation_messages.dateOfVisitCtrlErrorMessage\\\">\\n            <div *ngIf=\\\"customerDetailFormGroup.get('serviceVendorRemarksCtrl').hasError(validation.type) && detailsStepValid\\\">\\n              <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Date of Visit</mat-label>\\n          <input type=\\\"date\\\" matInput formControlName=\\\"dateOfVisitCtrl\\\" [min]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.dateOfVisitCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"customerDetailFormGroup.get('serviceVendorRemarksCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field> -->\\n        <!-- Service Vendor Remarks -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Service Vendor Remarks</mat-label>\\n          <input matInput formControlName=\\\"serviceVendorRemarksCtrl\\\" [(ngModel)]=\\\"service.service_vendor_remarks\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.serviceVendorRemarksCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"customerDetailFormGroup.get('serviceVendorRemarksCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <div>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\" size-lg=\\\"3\\\" no-padding>\\n              <ion-button size=\\\"default\\\" [disabled]=\\\"!customerDetailFormGroup.controls.serviceVendorRemarksCtrl.valid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"submit($event,'Reject')\\\">Reject Complaint</ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\" size-lg=\\\"3\\\" no-padding>\\n              <ion-button size=\\\"default\\\" [disabled]=\\\"!customerDetailFormGroup.valid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"submit($event,'Accept')\\\">Accept Complaint\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n       \\n      </form>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VenderApprovalDetailsPage } from './vender-approval-details.page';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VenderApprovalDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MaterialModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [VenderApprovalDetailsPage]\n})\nexport class VenderApprovalDetailsPageModule {}\n","module.exports = \".mat-stepper-vertical {\\n  margin-top: 8px;\\n}\\n\\n.mat-form-field {\\n  margin-top: 16px;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.cus {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 100%;\\n}\\n\\nion-datetime {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9jYXJkaW5hbC92ZW5kZXItYXBwcm92YWwvdmVuZGVyLWFwcHJvdmFsLWRldGFpbHMvdmVuZGVyLWFwcHJvdmFsLWRldGFpbHMucGFnZS5zY3NzIiwic3JjL2FwcC9jYXJkaW5hbC92ZW5kZXItYXBwcm92YWwvdmVuZGVyLWFwcHJvdmFsLWRldGFpbHMvdmVuZGVyLWFwcHJvdmFsLWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBREVFO0VBQ0UsZ0JBQUE7QUNDSjs7QURFRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FEQ0U7RUFFRSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0EseUJBQUE7VUFBQSw4QkFBQTtFQUNBLFdBQUE7QUNDSjs7QURDRztFQUNDLFdBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL2NhcmRpbmFsL3ZlbmRlci1hcHByb3ZhbC92ZW5kZXItYXBwcm92YWwtZGV0YWlscy92ZW5kZXItYXBwcm92YWwtZGV0YWlscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXN0ZXBwZXItdmVydGljYWwge1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgfVxuICBcbiAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICB9XG5cbiAgLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuY3Vze1xuICBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgIH1cbiAgIGlvbi1kYXRldGltZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH0iLCIubWF0LXN0ZXBwZXItdmVydGljYWwge1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi5leGFtcGxlLWZvcm0ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY3VzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogMTAwJTtcbn1cblxuaW9uLWRhdGV0aW1lIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { VenderApprovalService } from './../vender-approval.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Validator } from 'src/provider/validator-helper';\nimport { Complain } from 'src/assets/model/complain';\nimport { CustomerServiceService } from '../../customer-service/customer-service.service';\nimport { AlertController } from '@ionic/angular';\nimport { Commonfun } from 'src/provider/commonfun';\n\n@Component({\n  selector: 'app-vender-approval-details',\n  templateUrl: './vender-approval-details.page.html',\n  styleUrls: ['./vender-approval-details.page.scss'],\n})\nexport class VenderApprovalDetailsPage implements OnInit {\n\n  readonly TAG = \"VenderApprovalDetailsPage\";\n\n  now = new Date();\n  year = this.now.getFullYear();\n  month = this.now.getMonth() + 1;\n  day = this.now.getDate();\n\n  maxDate = this.year + \"-\" + this.month + \"-\" + this.day;\n\n  isLinear = false;\n  /**\n   * \n   */\n  detailsStepValid = false; equimentStepValid = false;customerDetailStepValid = false;\n  /**\n   * \n   */\n  consumablesFormGroup: FormGroup;productCompliantFormGroup: FormGroup;detailFormGroup:FormGroup;\n  equimentFormGroup:FormGroup;skuDetailsFormGroup:FormGroup;customerDetailFormGroup:FormGroup;\n  validation_messages = {\n    'nameOfComplainer': [{ type: 'required', message: '*Please Enter Name of complainer.' }],\n    'designation_of_complainer_mss':[{ type: 'required', message: '*Please Enter designation_of_complainer.' }],\n    'mobileno': [{ type: 'required', message: '*Please Enter Contact No.' },\n    { type: 'InvalidNumber', message: '*Please Enter Valid Contact No.' }],\n    'email': [{ type: 'required', message: '*Please Enter Email.' },\n    { type: 'InvalidEmail', message: '*Please Enter Valid Email.' }],\n    'complaintDescription':[{ type: 'required', message: '*Please Enter Complaint Description' }],\n    'serialNo': [{ type: 'required', message: '*Please Enter Serial no .' }],\n    'customerAddress1': [{ type: 'required', message: '*Please Enter Customer Address1' }],\n    'customerAddress2': [{ type: 'required', message: '*Please Enter Customer Customer Address 2' }],\n    'customerAddress3': [{ type: 'required', message: '*Please Enter Customer Customer Address 3' }],\n    'pinCode': [{ type: 'required', message: '*Please Enter Pin Code' }],\n    'area': [{ type: 'required', message: '*Please Select Your Area' }],\n    'dateOfVisitCtrlErrorMessage': [{ type: 'required', message: '*Please Select Date Of Visit' }],\n    'serviceVendorRemarksCtrlErrorMessage':[{ type: 'required', message: '*Please Enter Service Vendor Remark' }],\n  };\n  service:any;\n  serviceEngSelected;contracttype;\n  serviceEngList:any;\n  productToBeReturn;contractTypeList;saveComplainResponse;\n  isProductCompliantTab = false;isConsumablesTab = false;isEquimentTab = false;\n  constructor(private formBuilder: FormBuilder,private validator: Validator,\n              private route: ActivatedRoute,private router: Router,private venderApprovalService: VenderApprovalService,\n              private customerService: CustomerServiceService,\n              private alertCtrl: AlertController,\n              private commonFunction: Commonfun) { }\n\n  async ngOnInit() {\n   \n    this.route.queryParams.subscribe(params => {\n      if (params && params.special) {\n        this.service = JSON.parse(params.special);\n       // console.log(this.TAG,JSON.parse(params.special));\n      }\n    });\n    \n    \n   \n    this.detailFormGroup = this.formBuilder.group({\n      nameOfComplainerCtrl: [{value: '', disabled: true}, Validators.required],\n      desigOfComplainerCtrl: [{value: '', disabled: true}, Validators.required],\n      mobilenoCtrl: [{value: '', disabled: true}, Validators.required,this.validator.numberValid],\n      emailIDCtrl:[{value: '', disabled: true}, Validators.required, this.validator.emailValid],\n      complaintDescriptionCtrl: [{value: '', disabled: true}, Validators.required]\n    });\n    this.productCompliantFormGroup = this.formBuilder.group({\n      lotNoCtrl:[]\n    });\n    this.consumablesFormGroup = this.formBuilder.group({\n      lotNoConsumablesCtrl:[]\n    });\n    this.equimentFormGroup = this.formBuilder.group({\n      serialNoCtrl: [{value: '', disabled: true}, Validators.required],\n      dealerNameCtrl: [{value: '', disabled: true}, Validators.required],\n      installationDateCtrl:[],\n     // newDealerNameCtrl:[]\n    });\n    this.skuDetailsFormGroup = this.formBuilder.group({\n      \n    });\n    this.customerDetailFormGroup = this.formBuilder.group({\n      customerAddress1Ctrl:[{value: '', disabled: true}, Validators.required],\n      customerAddress2Ctrl:[{value: '', disabled: true}, Validators.required],\n      customerAddress3Ctrl:[{value: '', disabled: true}, Validators.required],\n      pinCodeCtrl:[{value: '', disabled: true}, Validators.required],\n      areaCtrl:[{value: '', disabled: true}, Validators.required],\n      cityCtrl:[{value: '', disabled: true}, Validators.required],\n      stateCtrl:[{value: '', disabled: true}, Validators.required],\n      countryCtrl:[{value: '', disabled: true}, Validators.required],\n\n      serviceEngMobilenoCtrl: [, Validators.required,this.validator.numberValid],\n      serviceVendorRemarksCtrl:[, Validators.required],\n      dateOfVisitCtrl:[,Validators.required],\n      approveComplaintCtrl:[,],\n      rejectComplaintCtrl:[,],\n      serviceEngineerNameCtrl:[,],\n    });\n    this.serviceEngList = await this.venderApprovalService.getServiceEngList().toPromise();\n   // console.log(this.TAG,\"Service Eng List\",this.serviceEngList);\n    \n\n  }\n  async ionViewWillEnter(){\n    this.commonFunction.loadingPresent();\n   // console.log(\"Min Date\",this.maxDate);\n\n    if(!!this.service.newdealername){\n      this.service.dealername = this.service.newdealername;\n    }\n  /**\n   * \n   */\n   // console.log(\"serveice\",this.service);\n    if(this.service.doctype[0].name == 'Product Compliant'){\n      this.isProductCompliantTab = true;\n      this.isConsumablesTab = false;\n      this.isEquimentTab = false;\n      this.productCompliantFormGroup.controls.lotNoCtrl.patchValue(this.service.lotno);\n   } else if(this.service.doctype[0].name == 'Consumables') {\n      this.isProductCompliantTab = false;\n      this.isConsumablesTab = true;\n      this.isEquimentTab = false;\n      this.consumablesFormGroup.controls.lotNoCtrl.patchValue(this.service.lotno);\n   } else if(this.service.doctype[0].name == 'Equipment'){\n      this.isProductCompliantTab = false;\n      this.isConsumablesTab = false;\n      this.isEquimentTab = true;\n   }\n   if(this.service.producttobereturn==\"MSNR_Y\"){\n    this.productToBeReturn = 'Yes';\n   } else if(this.service.producttobereturn==\"MSNR_N\"){\n      this.productToBeReturn = 'No';\n   }\n   this.contractTypeList = await (await this.customerService.getContractTypeList()).toPromise();\n   // console.log(\"contractTypeList\",this.contractTypeList);\n   for (let i = 0; i < this.contractTypeList.length; i++) {\n   // console.log(\"contractTypeList of i=\",i);\n\n        if(this.contractTypeList[i].code == this.service.contracttype){\n          this.contracttype = this.contractTypeList[i].name;\n          }   \n    \n   }\n   this.customerDetailFormGroup.controls.areaCtrl.patchValue(this.service.area[0].name);\n   this.customerDetailFormGroup.controls.cityCtrl.patchValue(this.service.city[0].name);\n   this.customerDetailFormGroup.controls.stateCtrl.patchValue(this.service.state[0].name);\n   this.customerDetailFormGroup.controls.countryCtrl.patchValue(this.service.country[0].name);\n   this.commonFunction.loadingDismiss();\n  }\n  public refreshPage(){\n    try {\n      \n    } catch (error) {\n   //   console.error(this.TAG,error);\n    }\n  }\n  \n  public matDetailSettper(event){\n    try {\n      \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public matSettperProductCompliant(event){\n    try {\n      \n    } catch (error) {\n     // console.error(this.TAG,error);\n    }\n  }\n  public matSettperConsumables(event){\n    try {\n      \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public matSettperSKUDetails(event){\n    try {\n      \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public matSettperEquiment(event){\n    try {\n      \n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public serviceEngSelectedChange(serviceEngSelected){\n    try {\n          this.customerDetailFormGroup.controls.serviceEngMobilenoCtrl.patchValue(serviceEngSelected.phone);\n          this.customerDetailFormGroup.get('serviceEngMobilenoCtrl').disable();\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public approveServiceCheckbox(event){\n    try {\n          console.log(this.TAG,\"CheckBox Value\",event);\n          this.detailFormGroup.patchValue({rejectComplaintCtrl:false});\n\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public rejectServiceCheckbox(){\n    try {\n          \n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  async presentAlert(Header: string, SubHeader: string, Message: string) {\n    const alert = await this.alertCtrl.create({\n      header: Header,\n      subHeader: SubHeader,\n      message: Message,\n      buttons: [{\n        text: \"OK\",\n        handler: (ok) => {\n          \n          this.router.navigateByUrl('/vender-approval');\n        }\n      }]\n    });\n    alert.dismiss(() => console.log('The alert has been closed.'));\n    await alert.present();\n  }\n public reject(form){\n   try {\n        //  console.log(\"Submiited from\",form);\n   } catch (error) {\n    // console.log(error);\n   }\n }\n \n  public async submit(event,status){\n    try {\n          \n         let approveVenderComplain:Complain = new Complain();\n           if(status=='Accept')\n           {\n             approveVenderComplain.Appect='true';\n             approveVenderComplain.reject=''\n           }\n           else\n           {\n            approveVenderComplain.Appect='';\n            approveVenderComplain.reject='true'\n           }\n           approveVenderComplain.complaint_no = this.service.complaintno;\n           approveVenderComplain.complaintid = this.service.complaintid;\n           approveVenderComplain.complaint_date = this.service.complaintdate;\n           approveVenderComplain.doctype = this.service.doctype[0].id;\n           approveVenderComplain.nameofcomplainer = this.service.nameofcomplainer\n           approveVenderComplain.desofcomplnr = this.service.desofcomplnr[0].id\n           approveVenderComplain.contnumber = this.service.contnumber;\n           approveVenderComplain.email = this.service.email;\n           approveVenderComplain.eventdate = this.service.eventdate;\n           approveVenderComplain.business = this.service.business;\n           approveVenderComplain.description = this.service.description\n           approveVenderComplain.lotno = this.service.lotno;\n           approveVenderComplain.serialno = this.service.srnoequipment;\n           approveVenderComplain.srnoequipment = this.service.srnoequipment;\n           approveVenderComplain.contracttype  = this.service.contracttype;\n           approveVenderComplain.invoiceno = this.service.invoiceno;\n           approveVenderComplain.invoicedate=this.service.invoicedate;\n           approveVenderComplain.errorcode= \"\";\n          // approveVenderComplain.dealername = this.service.dealername;\n          // approveVenderComplain.newdealername = this.service.newdealername;\n          // approveVenderComplain.salesrepresentative = this.service.salesrepresentative;\n           approveVenderComplain.installationdate = this.service.installationdate;\n           \n           approveVenderComplain.skucode = this.service.skucode;\n           approveVenderComplain.skuname = this.service.skuname;\n           approveVenderComplain.brandname = this.service.brandname;\n           approveVenderComplain.producttobereturn = this.service.producttobereturn;\n\n           approveVenderComplain.custname = this.service.custname;\n           approveVenderComplain.add1 = this.service.add1;\n           approveVenderComplain.add2 = this.service.add2;\n           approveVenderComplain.add3 = this.service.add3;\n           approveVenderComplain.pincode = this.service.pincode;\n          \n           approveVenderComplain.area = this.service.area[0].id;\n           approveVenderComplain.city = this.service.city[0].id;\n           approveVenderComplain.state = this.service.state[0].id;\n           approveVenderComplain.country = this.service.country[0].id;\n           approveVenderComplain.serviceengname = this.customerDetailFormGroup.get('serviceEngineerNameCtrl').value ? this.customerDetailFormGroup.get('serviceEngineerNameCtrl').value.id : '';\n           approveVenderComplain.serviceengcontact = this.customerDetailFormGroup.get('serviceEngMobilenoCtrl').value ? this.customerDetailFormGroup.get('serviceEngMobilenoCtrl').value : '';\n           approveVenderComplain.visitdate = this.customerDetailFormGroup.get('dateOfVisitCtrl').value ? this.customerDetailFormGroup.get('dateOfVisitCtrl').value : '';\n           approveVenderComplain.servicevendorremark = this.customerDetailFormGroup.get('serviceVendorRemarksCtrl').value ? this.customerDetailFormGroup.get('serviceVendorRemarksCtrl').value : '';\n           //approveVenderComplain.assigntoservvendor = \"true\";\n           approveVenderComplain.appcomplaint = \"true\";\n\n          // console.log(this.TAG,\"Final Vender Approval Form\",approveVenderComplain);\n           this.saveComplainResponse =  await this.customerService.saveComplain(approveVenderComplain).toPromise();\n          // console.log(this.TAG,\"Response From Save Complain\",this.saveComplainResponse);\n           if(this.saveComplainResponse){\n              this.presentAlert(\"Compliant Acceptance Details\",\"\",this.saveComplainResponse.msg);\n           } else {\n              this.presentAlert(\"Compliant Acceptance Details\",\"\",\"Something went wrong please try again\"+this.saveComplainResponse.msg);\n           }\n    } catch (error) {\n    //  console.error(this.TAG,error);\n      this.presentAlert(\"Compliant Acceptance Details\",\"\",error.error);\n    }\n  }\n\n}\n"],"sourceRoot":""}