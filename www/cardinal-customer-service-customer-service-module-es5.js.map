{"version":3,"sources":["./src/app/cardinal/customer-service/customer-service.page.html","./src/app/cardinal/customer-service/customer-service.module.ts","./src/app/cardinal/customer-service/customer-service.page.scss","./src/app/cardinal/customer-service/customer-service.page.ts"],"names":[],"mappings":"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","file":"cardinal-customer-service-customer-service-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Customer Service\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\" routerDirection=\\\"root\\\" routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-buttons (click)=\\\"RefreshPage()\\\" slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\">\\n      <ion-icon name=\\\"refresh\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n      <form [formGroup]=\\\"firstFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Details</ng-template>\\n        <!--Complaint Date -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Complaint Date</mat-label>\\n          <input type=\\\"text\\\" matInput formControlName=\\\"complaintDateCtrl\\\">\\n        </mat-form-field>\\n        <!-- Document Type -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Document Type</mat-label>\\n          <mat-select [(ngModel)]=\\\"docTypeSelected\\\" formControlName=\\\"documentTypeCtrl\\\"\\n            (selectionChange)=\\\"docTypeSelectedChange(docTypeSelected.name)\\\">\\n            <mat-option *ngFor=\\\"let doc of docTypeList\\\" [value]=\\\"doc\\\">\\n              {{doc.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.documentType\\\">\\n              <div *ngIf=\\\"firstFormGroup.get('name').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Name of Complainer -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Name of Complainer</mat-label>\\n          <input matInput formControlName=\\\"name\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.name\\\">\\n              <div *ngIf=\\\"firstFormGroup.get('name').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Designation of Complainer -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Designation of Complainer</mat-label>\\n          <mat-select [(ngModel)]=\\\"designationOfComplainerSelected\\\" formControlName=\\\"designationOfComplainerCtrl\\\"\\n            (selectionChange)=\\\"designationOfComplainerChange(designationOfComplainerSelected)\\\">\\n            <mat-option *ngFor=\\\"let designationObject of designationOfComplainerList\\\" [value]=\\\"designationObject\\\">\\n              {{designationObject.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.designation\\\">\\n              <div\\n                *ngIf=\\\"firstFormGroup.get('designationOfComplainerCtrl').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Contact No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Contact No.</mat-label>\\n          <input type=\\\"number\\\" matInput formControlName=\\\"mobileno\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobileno\\\">\\n              <div *ngIf=\\\"firstFormGroup.get('mobileno').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Email ID -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Email ID</mat-label>\\n          <input type=\\\"email\\\" matInput formControlName=\\\"email\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div *ngIf=\\\"firstFormGroup.get('email').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Event Date -->\\n        <div class=\\\"example-full-width bottom-border\\\">\\n          <ion-label style=\\\"color: darkgray;\\\">Event Date</ion-label>\\n          <section class=\\\"cus\\\">\\n           <ion-datetime  style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\" [(ngModel)]=\\\"today\\\" formControlName=\\\"eventDateCtrl\\\" [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          </ion-datetime>\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> \\n        </section>\\n        </div>\\n        <!-- Complaint Description -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Complaint Description</mat-label>\\n          <textarea matInput formControlName=\\\"complaintDescriptionCtrl\\\"></textarea>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.complaintDescriptionCtrl\\\">\\n              <div *ngIf=\\\"firstFormGroup.get('complaintDescriptionCtrl').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperNext (click)=\\\"matSettper($event,firstFormGroup)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"productCompliantFormGroup\\\" label=\\\"Product Compliant\\\" *ngIf=\\\"isProductCompliant\\\"\\n      [optional]=\\\"isOptional\\\">\\n      <form [formGroup]=\\\"productCompliantFormGroup\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Lot No.</mat-label>\\n          <input matInput formControlName=\\\"lotNoProductCompliantCtrl\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperProductCom($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"consumablesFormGroup\\\" label=\\\"Consumables\\\" *ngIf=\\\"isConsumables\\\">\\n      <form [formGroup]=\\\"consumablesFormGroup\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Lot No.</mat-label>\\n          <input matInput formControlName=\\\"lotNoConsumablesCtrl\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperConsumables($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"equipmentFormGroup\\\" label=\\\"Equiment Detail\\\" *ngIf=\\\"isEquipment\\\">\\n      <form [formGroup]=\\\"equipmentFormGroup\\\">\\n        <!-- Serial No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Serial No.</mat-label>\\n          <input matInput formControlName=\\\"serialNo\\\" (change)='onCheckInstallationBase()'>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.serialNo\\\">\\n              <div *ngIf=\\\"equipmentFormGroup.get('serialNo').hasError(validation.type) && secondStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Sr. No. of Equipment -->\\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Sr. No. of Equipment</mat-label>\\n          <input matInput formControlName=\\\"SrNoEquipmentCtrl\\\">\\n        </mat-form-field> -->\\n        <!-- Contract Type -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Contract Type</mat-label>\\n          <mat-select [(ngModel)]=\\\"contractTypeSelected\\\" formControlName=\\\"contractType\\\"\\n            (selectionChange)=\\\"contractTypeSelectedChange(contractTypeSelected)\\\">\\n            <mat-option *ngFor=\\\"let contract of contractTypeList\\\" [value]=\\\"contract\\\">\\n              {{contract.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.contractType\\\">\\n              <div *ngIf=\\\"equipmentFormGroup.get('contractType').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Invoice No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Invoice No.</mat-label>\\n          <input matInput formControlName=\\\"invoiceNoCtrl\\\">\\n        </mat-form-field>\\n        <!-- Invoice Date -->\\n        <div class=\\\"example-full-width bottom-border\\\">\\n          <ion-label style=\\\"color: darkgray;\\\">Invoice Date</ion-label>\\n          <section class=\\\"cus\\\">\\n           <ion-datetime  style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\"  formControlName=\\\"invoiceDateCtrl\\\" [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          </ion-datetime>\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> \\n        </section>\\n        </div>\\n        \\n        \\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Invoice Date</mat-label>\\n          <input matInput type=\\\"date\\\" [disabled]='true' formControlName=\\\"invoiceDateCtrl\\\" matInput [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n        </mat-form-field> -->\\n        <!-- Error Code -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Error Code</mat-label>\\n          <mat-select [(ngModel)]=\\\"errorCodeSelected\\\" formControlName=\\\"errorCode\\\"\\n            (selectionChange)=\\\"errorCodeSelectedSelectedChange(errorCodeSelected)\\\">\\n            <mat-option *ngFor=\\\"let errorCode of errorCodeList\\\" [value]=\\\"errorCode\\\">\\n              {{errorCode.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.errorCodeCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"equipmentFormGroup.get('errorCode').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Dealer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Dealer Name</mat-label>\\n          <input matInput formControlName=\\\"dealerNameCtrl\\\">\\n        </mat-form-field>\\n        <!-- Installation Date -->\\n        <div class=\\\"example-full-width bottom-border\\\">\\n          <ion-label style=\\\"color: darkgray;\\\">Installation Date</ion-label>\\n          <section class=\\\"cus\\\">\\n           <ion-datetime  style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\"  formControlName=\\\"installationDateCtrl\\\" [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          </ion-datetime>\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> \\n        </section>\\n        </div>\\n\\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Installation Date</mat-label>\\n          <input type=\\\"date\\\" matInput formControlName=\\\"installationDateCtrl\\\" matInput\\n            [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n        </mat-form-field> -->\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperSecond($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"thirdFormGroup\\\" label=\\\"SKU Detail\\\">\\n      <form [formGroup]=\\\"thirdFormGroup\\\">\\n        <!-- SKU Code -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">SKU Code</mat-label>\\n          <input matInput formControlName=\\\"SKUCode\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.SKUCode\\\">\\n              <div *ngIf=\\\"thirdFormGroup.get('SKUCode').hasError(validation.type) && thirdStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- SKU Name / Description -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>SKU Name / Description</mat-label>\\n          <input matInput formControlName=\\\"skuName\\\">\\n        </mat-form-field>\\n        <!-- Brand Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Brand Name</mat-label>\\n          <input matInput formControlName=\\\"brandName\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.brandName\\\">\\n              <div *ngIf=\\\"thirdFormGroup.get('brandName').hasError(validation.type) && thirdStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Product to be returned -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Product to be returned</mat-label>\\n          <mat-select [(ngModel)]=\\\"ProductReturnedSelected\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n            (selectionChange)=\\\"ProductReturnedSelectedChange(ProductReturnedSelected)\\\">\\n            <mat-option value=\\\"Y\\\">Yes</mat-option>\\n            <mat-option value=\\\"N\\\">No</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperThird($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Customer Detail Tab -->\\n    <mat-step [stepControl]=\\\"fourthFormGroup\\\" label=\\\"Customer Detail\\\">\\n      <form [formGroup]=\\\"fourthFormGroup\\\">\\n        <!-- Customer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Customer Name</mat-label>\\n          <input matInput formControlName=\\\"customerName\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.customerName\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('customerName').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Customer Address 1 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Customer Address 1</mat-label>\\n          <input matInput formControlName=\\\"customerAddress1\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.customerAddress1\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('customerAddress1').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Customer Address 2 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 2</mat-label>\\n          <input matInput formControlName=\\\"customerAddress2\\\">\\n        </mat-form-field>\\n        <!-- Customer Address 3 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 3</mat-label>\\n          <input matInput formControlName=\\\"customerAddress3\\\">\\n        </mat-form-field>\\n        <!-- Pin Code -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Pin Code</mat-label>\\n          <input type=\\\"number\\\" matInput formControlName=\\\"pinCodeCtrl\\\" (change)='onChangePinCode()'>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.pinCode\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('pinCodeCtrl').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Area -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Area</mat-label>\\n          <mat-select formControlName=\\\"area\\\" (selectionChange)=\\\"onAreaSelectedChange()\\\" [(ngModel)]=\\\"areaSelected\\\">\\n            <mat-option *ngFor=\\\"let area of areaList\\\" [value]=\\\"area\\\">\\n              {{area.area}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.area\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('area').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- City -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">City</mat-label>\\n          <input matInput formControlName=\\\"city\\\" [(ngModel)]=\\\"city\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.city\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('city').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- State -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">State</mat-label>\\n          <input matInput formControlName=\\\"state\\\" [(ngModel)]=\\\"state\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.state\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('state').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Country -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Country</mat-label>\\n          <input matInput formControlName=\\\"country\\\" [(ngModel)]=\\\"country\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.country\\\">\\n              <div *ngIf=\\\"fourthFormGroup.get('country').hasError(validation.type) && fourthStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n        </div>\\n        <div>\\n          <ion-row>\\n            <ion-col no-padding>\\n              <ion-button size=\\\"default\\\" [disabled]=\\\"!fourthFormGroup.valid && fourthFormGroup.disabled === false\\\"\\n                class=\\\"submit-btn\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"submit()\\\">Assign to COP\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </form>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerServicePage } from './customer-service.page';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerServicePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MaterialModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n   \n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerServicePage]\n})\nexport class CustomerServicePageModule {}\n","module.exports = \".mat-stepper-vertical {\\n  margin-top: 8px;\\n}\\n\\n.mat-form-field {\\n  margin-top: 16px;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.cus {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 100%;\\n}\\n\\nion-datetime {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9jYXJkaW5hbC9jdXN0b21lci1zZXJ2aWNlL2N1c3RvbWVyLXNlcnZpY2UucGFnZS5zY3NzIiwic3JjL2FwcC9jYXJkaW5hbC9jdXN0b21lci1zZXJ2aWNlL2N1c3RvbWVyLXNlcnZpY2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBREVFO0VBQ0UsZ0JBQUE7QUNDSjs7QURFRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUM7RUFFQyxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0EseUJBQUE7VUFBQSw4QkFBQTtFQUNBLFdBQUE7QUNBRjs7QURFQztFQUNDLFdBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NhcmRpbmFsL2N1c3RvbWVyLXNlcnZpY2UvY3VzdG9tZXItc2VydmljZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXN0ZXBwZXItdmVydGljYWwge1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgfVxuICBcbiAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICB9XG5cbiAgLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gLmN1c3tcbiAgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHdpZHRoOiAxMDAlO1xuIH1cbiBpb24tZGF0ZXRpbWUge1xuICB3aWR0aDogMTAwJTtcbn0iLCIubWF0LXN0ZXBwZXItdmVydGljYWwge1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG59XG5cbi5leGFtcGxlLWZvcm0ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY3VzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogMTAwJTtcbn1cblxuaW9uLWRhdGV0aW1lIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { Complain } from './../../../assets/model/complain';\nimport { CustomerServiceService } from './customer-service.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { Validator } from '../../../provider/validator-helper'\nimport { Area, NewcustomerService, Pincode } from 'src/app/newcustomer/newcustomer.service';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { MatStepper } from '@angular/material';\n\n\n@Component({\n  selector: 'app-customer-service',\n  templateUrl: './customer-service.page.html',\n  styleUrls: ['./customer-service.page.scss'],\n})\n\nexport class CustomerServicePage implements OnInit {\n  @ViewChild(\"stepper\", { static: false }) stepper: MatStepper;\n\n  /**\n   * This variable will hold the page name for logging purpose.\n   */\n  readonly TAG = \"CustomerServicePage\";\n  /**  \n   * If this variable is set to true then stepper will check the validation on form control.It will now allow to navigate next page or stepper.  \n   */\n  isLinear = true;\n  /**\n   * \n   */\n  firstFormGroup: FormGroup; equipmentFormGroup: FormGroup; thirdFormGroup: FormGroup; fourthFormGroup: FormGroup;consumablesFormGroup: FormGroup;productCompliantFormGroup: FormGroup;\n  /**\n   * \n   */\n  docTypeSelected;errorCodeSelected;ProductReturnedSelected;areaSelected;designationOfComplainerSelected;contractTypeSelected;\n  /**\n   * \n   */\n  isProductCompliant = false;\n  /**\n   * \n   */\n  isEquipment = false;\n\n  isConsumables = false;\n\n  isOptional = false;\n\n  now = new Date();\n  year = this.now.getFullYear();\n  month = this.now.getMonth() + 1;\n  day = this.now.getDate();\n  /**\n   * \n   */\n  maxDate = this.year + \"-\" + this.month + \"-\" + this.day;\n  today= this.year+\"-\"+(\"0\" + this.month).slice(-2)+ \"-\" + (\"0\" + this.day).slice(-2);\n  /**\n   * \n   */\n  firstStepValid = false; secondStepValid = false; thirdStepValid = false; fourthStepValid = false; consumableStepValid = false;serialNoCheckResponse;\n  /**\n   * \n   */\n  validation_messages = {\n    'mobileno': [{ type: 'required', message: '*Please Enter Contact No.' },\n    { type: 'InvalidNumber', message: '*Please Enter Valid Contact No.' }],\n    'email': [{ type: 'required', message: '*Please Enter Email.' },\n    { type: 'InvalidEmail', message: '*Please Enter Valid Email.' }],\n    'designation': [{ type: 'required', message: '*Please Designation.' }],\n    'name': [{ type: 'required', message: '*Please Enter Name.' }],\n    'document_type': [{ type: 'required', message: '*Please Select Document Type.' }],\n    'eventdate': [{ type: 'required', message: '*Please Select Event Date.' }],\n    'serialNo': [{ type: 'required', message: '*Please Enter Serial no .' }],\n    'contractType': [{ type: 'required', message: '*Please Enter Contract Type .' }],\n    'SKUCode': [{ type: 'required', message: '*Please Enter SKU Code' }],\n    'brandName': [{ type: 'required', message: '*Please Enter Brand Name' }],\n    'customerName': [{ type: 'required', message: '*Please Enter Customer Name' }],\n    'customerAddress1': [{ type: 'required', message: '*Please Enter Customer Address1' }],\n    'customerAddress2': [{ type: 'required', message: '*Please Enter Customer Customer Address 2' }],\n    'customerAddress3': [{ type: 'required', message: '*Please Enter Customer Customer Address 3' }],\n    'pinCode': [{ type: 'required', message: '*Please Enter Pin Code' }],\n    'area': [{ type: 'required', message: '*Please Select Your Area' }],\n    'city': [{ type: 'required', message: '*Please Enter City' }],\n    'state': [{ type: 'required', message: '*Please Enter State' }],\n    'country': [{ type: 'required', message: '*Please Enter Country' }],\n    'documentType': [{ type: 'required', message: '*Please Select Document Type.'}],\n    'complaintDescriptionCtrl': [{ type: 'required', message: '*Please Enter Complaint Description.'}],\n    'errorCodeCtrlErrorMessage':[{ type: 'required', message: '*Please Select Error Code.'}],\n  }\n  \n  docTypeList:any;designationOfComplainerList:any;\n  /**\n   * \n   */\n  pinCodeList: Pincode[];\n  /**\n   * \n   */\n  inValidPinCode: string;\n  /**\n   * \n   */\n  areaList: Area[];\n  /**\n   * \n   */\n  errorCodeList;\n  /**\n   * \n   */\n  contractTypeList;\n  selectedArea: Area;\n  city;state;country;district;\n  test = true;\n  ;\n  constructor(private _formBuilder: FormBuilder, private val: Validator,\n              private customerService: CustomerServiceService,public newcustomerservice: NewcustomerService,\n              private commonFunction: Commonfun,private alertCtrl: AlertController,private router: Router) { }\n  \n  async ngOnInit() {\n\n    this.firstFormGroup = this._formBuilder.group({\n      complaintDateCtrl:[,],\n      documentTypeCtrl:[,Validators.required],\n      mobileno: [, Validators.required, this.val.numberValid],\n      email: [, Validators.required, this.val.emailValid],\n      designationOfComplainerCtrl: [, Validators.required],\n      name: ['', Validators.required],\n      btnDetail: [,],\n      eventDateCtrl:[],\n      complaintDescriptionCtrl:[,Validators.required]\n    });\n    this.equipmentFormGroup = this._formBuilder.group({\n      serialNo: ['', Validators.required],\n      contractType: ['', Validators.required],\n      SrNoEquipmentCtrl: [,],\n      invoiceNoCtrl:[,],\n      invoiceDateCtrl:[,],\n      dealerNameCtrl:[,],\n      installationDateCtrl:[,],\n      errorCode:[,Validators.required]\n    });\n    this.thirdFormGroup = this._formBuilder.group({\n      SKUCode: ['', Validators.required],\n      brandName: ['', Validators.required],\n      skuName:[,]\n    });\n    this.fourthFormGroup = this._formBuilder.group({\n      customerName: ['', Validators.required],\n      customerAddress1: ['', Validators.required],\n      customerAddress2: [,],\n      customerAddress3: [,],\n      pinCodeCtrl: ['', Validators.required],\n      area: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      country: ['', Validators.required]\n    });\n    this.consumablesFormGroup = this._formBuilder.group({\n      lotNoConsumablesCtrl:[,]\n    });\n    this.productCompliantFormGroup = this._formBuilder.group({\n      lotNoProductCompliantCtrl:[]\n    });\n\n    let temp =  await (await this.customerService.getDocumentList()).toPromise();\n    // console.log(this.TAG,\"API DATA TEST\",temp);\n    this.errorCodeList = await (await this.customerService.getErrorCodeList()).toPromise();\n  //  console.log(this.TAG,\"Error Code List From Server\",this.errorCodeList);\n    this.designationOfComplainerList = await (await this.customerService.getDesignationOfComplainerList()).toPromise();\n    this.docTypeList = temp.response.data;\n    this.contractTypeList = await (await this.customerService.getContractTypeList()).toPromise();\n    //console.log(this.TAG,'Contract Type List From Server',this.contractTypeList);\n    //console.log(this.TAG,'Document Type From Server',this.docTypeList);\n //   console.log(this.TAG,\"Today Date\",this.maxDate);\n   // this.firstFormGroup.controls.complaintDateCtrl.patchValue(this.day + \"-\" + this.month + \"-\" +this.year);\n   this.firstFormGroup.controls['eventDateCtrl'].setValue(this.today);\n   this.fourthFormGroup.get('country').disable();\n   this.fourthFormGroup.get('state').disable();\n   this.fourthFormGroup.get('city').disable();\n\n\n\n  }\n  ionViewWillEnter() {\n    this.stepper.selectedIndex = 0;\n    this.firstFormGroup.get('complaintDateCtrl').disable();\n    this.firstFormGroup.controls.complaintDateCtrl.patchValue(this.day + \"-\" + this.month + \"-\" +this.year);\n \n  }\n  public docTypeSelectedChange(docTypeSelected) {\n    try {\n      //console.log(\"Document Type Selected\", docTypeSelected);\n      if (docTypeSelected == \"Product Compliant\") {\n        this.isProductCompliant = true;\n        this.isEquipment = false;\n        this.isConsumables = false;\n        this.thirdFormGroup.enable();\n      } else if (docTypeSelected == \"Equipment\") {\n        this.isEquipment = true;\n        this.isProductCompliant = false;\n        this.isConsumables = false;\n      } else if(docTypeSelected == \"Consumables\"){\n        this.isConsumables = true;\n        this.isProductCompliant = false;\n        this.isEquipment = false;\n        this.thirdFormGroup.enable();\n      }\n\n    } catch (error) {\n    //  console.log(this.TAG, error);\n    }\n\n  }\n  public errorCodeSelectedSelectedChange(errorCodeSelected){\n    try {\n          //console.log(this.TAG,errorCodeSelected);\n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public ProductReturnedSelectedChange(data){\n    try {\n          \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public contractTypeSelectedChange(data){\n    try {\n\n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public designationOfComplainerChange(data){\n    try {\n\n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public onAreaSelectedChange(){\n    try {\n          \n          this.selectedArea = this.fourthFormGroup.controls['area'].value\n      //    console.log(this.TAG,'Pravin Area Is',this.selectedArea);\n        \n          if(this.selectedArea!=null)\n          this.city = this.selectedArea.cttv$_identifier;\n    } catch (error) {\n   //  console.log(this.TAG,error);\n    }\n  }\n  public RefreshPage() {\n    try {\n          //this.firstFormGroup.controls.complaintDateCtrl.patchValue(this.maxDate);\n          this.firstFormGroup.reset();\n          this.firstStepValid = false\n          this.equipmentFormGroup.reset();\n          this.secondStepValid = false\n          this.thirdFormGroup.reset();\n          this.thirdStepValid =false\n          this.fourthFormGroup.reset();\n          this.fourthStepValid = false\n          this.consumablesFormGroup.reset();\n          this.productCompliantFormGroup.reset();\n          this.ionViewWillEnter();\n    } catch (error) {\n   //   console.log(this.TAG, error);\n    }\n  }\n  public matSettper(event,form) {\n    try {\n   //   console.log(this.TAG, \"matSettper Click event\", event,form);\n      this.firstStepValid = true;\n    } catch (error) {\n    //  console.error(this.TAG, error);\n    }\n\n  }\n  public matSettperSecond(evnet) {\n    try {\n      this.secondStepValid = true;\n    } catch (error) {\n    //  console.error(this.TAG, error);\n    }\n\n  }\n  public matSettperThird(evnet) {\n    try {\n      this.thirdStepValid = true;\n    } catch (error) {\n      console.error(this.TAG, error);\n    }\n\n  }\n  public matSettperProductCom(event){\n    try {\n      \n    } catch (error) {\n   //   console.error(this.TAG,error);\n    }\n  }\n  public matSettperConsumables(event){\n    try {\n      \n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public async onCheckInstallationBase(){\n    try {\n          this.commonFunction.loadingPresent();\n          this.serialNoCheckResponse = \"\";\n          let serialNo = this.equipmentFormGroup.get('serialNo').value ? this.equipmentFormGroup.get('serialNo').value : '';\n          this.serialNoCheckResponse =  await (await this.customerService.checkSerialNumber(serialNo,\"2020-12-31\")).toPromise();\n         \n       //  console.log(this.TAG,\"Installation Base Data\",this.serialNoCheckResponse);\n          \n         \n         if(Object.keys(this.serialNoCheckResponse).length != 0){\n           \n           \n            if(!!this.serialNoCheckResponse.contracttype){\n              \n             for (let i = 0; i < this.contractTypeList.length; i++) {\n                    if(this.contractTypeList[i].code == this.serialNoCheckResponse.contracttype){\n                      this.contractTypeSelected = this.contractTypeList[i];\n                      }   \n                \n              }\n              this.equipmentFormGroup.get('contractType').disable();\n            }\n            if(!!this.serialNoCheckResponse.invoiceno){\n              this.equipmentFormGroup.controls[\"invoiceNoCtrl\"].setValue(this.serialNoCheckResponse.invoiceno);\n              this.equipmentFormGroup.get('invoiceNoCtrl').disable();\n            } else {\n              this.equipmentFormGroup.controls[\"invoiceNoCtrl\"].setValue(\"\");\n            }\n\n            if(!!this.serialNoCheckResponse.invoicedate){\n              this.serialNoCheckResponse.invoicedate = this.serialNoCheckResponse.invoicedate.split(' ')[0];\n              this.equipmentFormGroup.controls[\"invoiceDateCtrl\"].setValue(this.serialNoCheckResponse.invoicedate);\n              this.equipmentFormGroup.get('invoiceDateCtrl').disable();\n            } else{\n              this.equipmentFormGroup.controls[\"invoiceDateCtrl\"].setValue(\"\");\n            }\n\n            if(!!this.serialNoCheckResponse.dealername){\n              this.equipmentFormGroup.controls[\"dealerNameCtrl\"].setValue(this.serialNoCheckResponse.dealername);\n              this.equipmentFormGroup.get('dealerNameCtrl').disable();\n            } else {\n              this.equipmentFormGroup.controls[\"dealerNameCtrl\"].setValue(\"\");\n            }\n            if(!!this.serialNoCheckResponse.installationdate){\n              this.serialNoCheckResponse.installationdate = this.serialNoCheckResponse.installationdate.split(' ')[0];\n              this.equipmentFormGroup.controls[\"installationDateCtrl\"].setValue(this.serialNoCheckResponse.installationdate);\n              this.equipmentFormGroup.get('installationDateCtrl').disable();\n            } else {\n              this.equipmentFormGroup.controls[\"installationDateCtrl\"].setValue(\"\");\n            }\n            if(!!this.serialNoCheckResponse.sku){\n              this.thirdFormGroup.controls[\"SKUCode\"].setValue(this.serialNoCheckResponse.sku);\n              this.thirdFormGroup.get('SKUCode').disable();\n            } else {\n              this.thirdFormGroup.controls[\"SKUCode\"].setValue(\"\");\n            }\n            if(!!this.serialNoCheckResponse.sku){\n              this.thirdFormGroup.controls[\"skuName\"].setValue(this.serialNoCheckResponse.skuname);\n              this.thirdFormGroup.get('skuName').disable();\n            } else {\n              this.thirdFormGroup.controls[\"skuName\"].setValue(\"\");\n            }\n            if(!!this.serialNoCheckResponse.brand){\n              this.thirdFormGroup.controls[\"brandName\"].setValue(this.serialNoCheckResponse.brand);\n              this.thirdFormGroup.get('brandName').disable();\n            } else {\n              this.thirdFormGroup.controls[\"brandName\"].setValue(\"\");\n            }\n\n            // if(!!this.serialNoCheckResponse.custname){\n            //   this.fourthFormGroup.controls[\"customerName\"].setValue(this.serialNoCheckResponse.custname);\n            //   this.fourthFormGroup.get('customerName').disable();\n            // }\n\n            // if(!!this.serialNoCheckResponse.add1){\n            //   this.fourthFormGroup.controls[\"customerAddress1\"].setValue(this.serialNoCheckResponse.add1);\n            //   this.fourthFormGroup.get('customerAddress1').disable();\n            // }\n            \n            // if(!!this.serialNoCheckResponse.add2){\n            //   this.fourthFormGroup.controls[\"customerAddress2\"].setValue(this.serialNoCheckResponse.add2);\n            //   this.fourthFormGroup.get('customerAddress2').disable();\n            // }\n\n            // if(!!this.serialNoCheckResponse.add3){\n            //   this.fourthFormGroup.controls[\"customerAddress3\"].setValue(this.serialNoCheckResponse.add3);\n            //   this.fourthFormGroup.get('customerAddress3').disable();\n            // }\n            \n            // if(Object.keys(this.serialNoCheckResponse.pincode).length != 0){\n              \n            //   this.fourthFormGroup.controls[\"pinCodeCtrl\"].setValue(this.serialNoCheckResponse.pincode);\n            //   if(Object.keys(this.serialNoCheckResponse.area).length != 0){\n            //     this.fourthFormGroup.get('pinCodeCtrl').disable();\n            //   }\n              \n            // }\n\n            // if(Object.keys(this.serialNoCheckResponse.area).length != 0){\n            //  let areaDummyObject = [{\"id\":this.serialNoCheckResponse.area[0].id,\"mmst_cttv_id\":this.serialNoCheckResponse.area[0].id, \"cttv\":this.serialNoCheckResponse.area[0].id, \"_identifier\":this.serialNoCheckResponse.area[0].id, \"area\":this.serialNoCheckResponse.area[0].name, \"cttv$_identifier\":this.serialNoCheckResponse.area[0].id}]\n            //  this.areaList = areaDummyObject;\n            //  this.areaSelected = areaDummyObject[0];\n            //  this.fourthFormGroup.get('area').disable();\n            // }\n            // if(Object.keys(this.serialNoCheckResponse.city).length != 0){\n              \n            //   this.fourthFormGroup.controls[\"city\"].setValue(this.serialNoCheckResponse.city[0].name);\n            //  // this.fourthFormGroup.get('city').disable();\n            // }\n            // if(Object.keys(this.serialNoCheckResponse.state).length != 0){\n              \n            //   this.fourthFormGroup.controls[\"state\"].setValue(this.serialNoCheckResponse.state[0].name);\n            //  // this.fourthFormGroup.get('state').disable();\n            // }\n            // if(Object.keys(this.serialNoCheckResponse.country).length != 0){\n              \n            //   this.fourthFormGroup.controls[\"country\"].setValue(this.serialNoCheckResponse.country[0].name);\n            //   //this.fourthFormGroup.get('country').disable();\n            // }\n            \n          } else {\n              this.equipmentFormGroup.reset();\n              this.equipmentFormGroup.enable();\n              this.equipmentFormGroup.controls[\"serialNo\"].setValue(serialNo);\n              this.thirdFormGroup.reset();\n              this.thirdFormGroup.enable();\n              this.fourthFormGroup.reset();\n              this.fourthFormGroup.enable();\n          }\n\n          this.commonFunction.loadingDismiss();\n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public onChangePinCode(id: string=''){\n    try {\n          this.newcustomerservice.getPincode(this.fourthFormGroup.controls[\"pinCodeCtrl\"].value).subscribe(data => {\n            const response = data['response'];\n         //   console.log(this.TAG,\"Response From Pin Code\",response);\n            this.pinCodeList = response.data;\n            if (this.pinCodeList.length > 0) {\n              this.inValidPinCode = '';\n              this.newcustomerservice.getarea(this.pinCodeList[0].id).subscribe(data => {\n                const response = data['response'];\n                console.log(this.TAG,\"AREA LIST\",response.data);\n                this.areaList = response.data;\n                \n                this.state = this.pinCodeList[0].region$_identifier;\n                this.country = this.pinCodeList[0].country$_identifier;\n                this.district = this.pinCodeList[0].district$_identifier;\n                if (id != '' || id==undefined) {\n                  this.selectedArea = this.areaList.find(item => item.id === id);\n                  setTimeout( () => {\n                    this.fourthFormGroup.controls[\"area\"].setValue(this.selectedArea);\n                  },1500);\n                }\n                \n              })\n            }\n          });\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public async checkSerialNo(){\n   let serialNumberTemp =  this.equipmentFormGroup.get('serialNo').value ? this.equipmentFormGroup.get('serialNo').value : '';\n   if(!!serialNumberTemp){\n    let equipmentData = await this.customerService.getSerialNumberFromBase(serialNumberTemp).toPromise();\n    if(equipmentData){\n      this.equipmentFormGroup.controls.SrNoEquipmentCtrl.setValue(equipmentData.srnoequipment);\n      this.equipmentFormGroup.get('SrNoEquipmentCtrl').disable();\n      this.equipmentFormGroup.controls.invoiceNoCtrl.setValue(equipmentData.invoiceno);\n      this.equipmentFormGroup.controls.invoiceDateCtrl.setValue(equipmentData.invoicedate);\n      this.equipmentFormGroup.controls.dealerNameCtrl.setValue(equipmentData.dealername);\n      this.equipmentFormGroup.controls.installationDateCtrl.setValue(equipmentData.installationdate);\n\n      this.thirdFormGroup.controls.SKUCode.setValue(equipmentData.skucode);\n      this.thirdFormGroup.controls.skuName.setValue(equipmentData.skuname);\n      this.thirdFormGroup.controls.brandName.setValue(equipmentData.brandname);\n\n\n     \n      \n    }\n   }\n\n  }\n  async presentAlert(Header: string, SubHeader: string, Message: string) {\n    const alert = await this.alertCtrl.create({\n      header: Header,\n      subHeader: SubHeader,\n      message: Message,\n      buttons: [{\n        text: \"OK\",\n        handler: (ok) => {\n          this.firstFormGroup.reset('', {emitEvent: false});\n          this.firstStepValid = false\n          this.equipmentFormGroup.reset('', {emitEvent: false});\n          this.secondStepValid = false\n          this.thirdFormGroup.reset('', {emitEvent: false});\n          this.ProductReturnedSelected ='';\n          this.thirdStepValid =false\n          this.fourthFormGroup.reset('', {emitEvent: false});\n          this.fourthStepValid = false\n          this.consumablesFormGroup.reset('', {emitEvent: false});\n          this.productCompliantFormGroup.reset();\n          this.firstFormGroup.markAsPristine();\n          this.firstFormGroup.markAsUntouched();\n          this.router.navigateByUrl('/home');\n        }\n      }]\n    });\n    alert.dismiss(() => console.log('The alert has been closed.'));\n    await alert.present();\n  }\n  public testForm(form){\n   // console.log(\"Form Test\",form);\n  }\n  public async submit() {\n    try {\n          this.commonFunction.loadingPresent();\n          this.fourthStepValid = true;\n\n          let complain:Complain = new Complain();\n          complain.doctype = this.docTypeSelected.id;\n    //  console.log(\"1\");    \n          complain.nameofcomplainer = this.firstFormGroup.get('name').value ? this.firstFormGroup.get('name').value :'';\n          complain.desofcomplnr = this.firstFormGroup.get('designationOfComplainerCtrl').value.id ? this.firstFormGroup.get('designationOfComplainerCtrl').value.id : '';\n    //  console.log(\"2\");    \n          complain.contnumber = this.firstFormGroup.get('mobileno').value ? this.firstFormGroup.get('mobileno').value.toString() : '';\n          complain.email = this.firstFormGroup.get('email').value ? this.firstFormGroup.get('email').value : '';\n          complain.eventdate = this.firstFormGroup.get('eventDateCtrl').value ? this.firstFormGroup.get('eventDateCtrl').value : '';\n          complain.description = this.firstFormGroup.get('complaintDescriptionCtrl').value ? this.firstFormGroup.get('complaintDescriptionCtrl').value : '';\n          if(this.docTypeSelected.name == 'Consumables'){\n            complain.lotno = this.consumablesFormGroup.get('lotNoConsumablesCtrl').value ? this.consumablesFormGroup.get('lotNoConsumablesCtrl').value : '';\n          } else if(this.docTypeSelected.name == 'Product Compliant'){\n            complain.lotno = this.productCompliantFormGroup.get('lotNoProductCompliantCtrl').value ? this.productCompliantFormGroup.get('lotNoProductCompliantCtrl').value : '';\n          } else if(this.docTypeSelected.name == 'Equipment'){\n            complain.serialno = this.equipmentFormGroup.get('serialNo').value ? this.equipmentFormGroup.get('serialNo').value : '';\n            complain.srnoequipment = this.equipmentFormGroup.get('SrNoEquipmentCtrl').value ? this.equipmentFormGroup.get('SrNoEquipmentCtrl').value : '';\n            complain.contracttype = this.equipmentFormGroup.get('contractType').value ? this.equipmentFormGroup.get('contractType').value.code: '';\n            complain.invoiceno = this.equipmentFormGroup.get('invoiceNoCtrl').value ? this.equipmentFormGroup.get('invoiceNoCtrl').value: '';\n            complain.invoicedate= this.equipmentFormGroup.get('invoiceDateCtrl').value ? this.equipmentFormGroup.get('invoiceDateCtrl').value: '';\n     // console.log(\"3\");    \n             \n            complain.errorcode= this.errorCodeSelected.id ? this.errorCodeSelected.id: '';\n            complain.dealername = this.equipmentFormGroup.get('dealerNameCtrl').value ? this.equipmentFormGroup.get('dealerNameCtrl').value: '';\n            complain.installationdate = this.equipmentFormGroup.get('installationDateCtrl').value ? this.equipmentFormGroup.get('installationDateCtrl').value: '';\n\n          }\n          complain.skucode = this.thirdFormGroup.get('SKUCode').value ? this.thirdFormGroup.get('SKUCode').value : '';\n          complain.skuname = this.thirdFormGroup.get('skuName').value ? this.thirdFormGroup.get('skuName').value : '';\n          complain.brandname = this.thirdFormGroup.get('brandName').value ? this.thirdFormGroup.get('brandName').value : '';\n          complain.producttobereturn = this.ProductReturnedSelected ? this.ProductReturnedSelected : '';\n          complain.custname = this.fourthFormGroup.get('customerName').value ? this.fourthFormGroup.get('customerName').value : '';\n          complain.add1 = this.fourthFormGroup.get('customerAddress1').value ? this.fourthFormGroup.get('customerAddress1').value : '';\n          complain.add2 = this.fourthFormGroup.get('customerAddress2').value ? this.fourthFormGroup.get('customerAddress2').value : '';\n          complain.add3 = this.fourthFormGroup.get('customerAddress3').value ? this.fourthFormGroup.get('customerAddress3').value : '';\n          \n          if(this.docTypeSelected.name == 'Equipment'){\n            if(!!this.serialNoCheckResponse.pincode && Object.keys(this.serialNoCheckResponse.pincode).length != 0) {\n              complain.pincode = this.serialNoCheckResponse.pincode;\n            } else {\n              complain.pincode = this.pinCodeList[0].spincode;\n            }\n            if(!!this.serialNoCheckResponse.area && Object.keys(this.serialNoCheckResponse.area).length != 0){\n              complain.area  = this.serialNoCheckResponse.area[0].id;\n              complain.city = this.serialNoCheckResponse.city[0].id;\n              complain.state = this.serialNoCheckResponse.state[0].id;\n              complain.country = this.serialNoCheckResponse.country[0].id;\n            } else {\n                let area = this.fourthFormGroup.get('area').value ? this.fourthFormGroup.get('area').value : '';\n                complain.area = area.id;\n                complain.city = this.selectedArea.cttv;\n                complain.state = this.pinCodeList[0].region;\n                complain.country = this.pinCodeList[0].country;\n            }\n          }\n          else {\n                complain.pincode = this.pinCodeList[0].spincode;\n                let area = this.fourthFormGroup.get('area').value ? this.fourthFormGroup.get('area').value : '';\n                complain.area = area.id;\n                complain.city = this.selectedArea.cttv;\n                complain.state = this.pinCodeList[0].region;\n                complain.country = this.pinCodeList[0].country;\n          }\n          \n         \n         // console.log(\"4\");    \n         \n         \n          \n          complain.assigntoservmg = \"true\";\n          //complain.appcomplaint = \"true\";\n        //  console.log(this.TAG,\"Final Customer Service Form\",complain);\n          let saveComplainResponse =  await this.customerService.saveComplain(complain).toPromise();\n       //   console.log(this.TAG,\"Response From Save Complain\",saveComplainResponse);\n          if(saveComplainResponse){\n            this.presentAlert(\"Customer Service\",\"\",saveComplainResponse.msg);\n          } else {\n            this.presentAlert(\"Customer Service\",\"\",\"Something went wrong please try again\"+saveComplainResponse.msg);\n          }\n\n          this.commonFunction.loadingDismiss();\n            \n\n    } catch (error) {\n      this.commonFunction.loadingDismiss();\n      if(error.status == \"200\"){\n        this.presentAlert(\"Customer Service\",\"\",error.error.text);\n      }else {\n        console.error(this.TAG, error);\n        this.commonFunction.presentAlert(\"Customer Service\",error.status,\"Something went wrong please try again\");\n      }\n      \n      \n     \n    }\n\n  }\n\n}\n"],"sourceRoot":""}