{"version":3,"sources":["./src/app/cardinal/service-engineer-visit/service-engineer-visit.service.ts"],"names":[],"mappings":"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","file":"default~cardinal-service-engineer-visit-service-engineer-visit-detail-service-engineer-visit-detail-~47fc23e0-es2015.js","sourcesContent":["import { Observable } from 'rxjs/internal/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Constants } from 'src/app/common/Constants';\nimport { GenericHttpClientService } from 'src/app/common/generic-http-client.service';\nimport { LoginauthService } from 'src/app/login/loginauth.service';\nimport { Complain } from 'src/assets/model/complain';\nimport { Message } from 'src/provider/message-helper';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { Platform } from '@ionic/angular';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceEngineerVisitService {\n\n  readonly TAG = \"ServiceEngineerVisitService\";\n  proposedActionList;\n  complaintStatusList;\n  errorCodeList;\n  serviceManagerList;\n  \n  constructor(private genericHTTP: GenericHttpClientService,\n              public loginService: LoginauthService,\n              public httpClient: HttpClient,public msg: Message,private cordovaHTTP: HTTP,public platform: Platform,private transfer: FileTransfer) { }\n\n  public getVenderApprovalList(){\n    try {\n            let complainListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceDetails?'+\n             'userid=' + this.loginService.userid\n             +'&appcomplaint='+'N'\n             +'&servmanager='+'N' \n             +'&serveng='+'Y'\n             +'&sparesku='+'Y'\n             +'&activity='+this.loginService.selectedactivity.id;\n\n           // let complainListURL = \"https://p2test.pispl.in/openbravo/ws/in.mbs.webservice.CustomerServiceDetails?user=ps.medical&password=pass&userid=FFF20210114113527411DBCE268A3D75&appcomplaint=N&servmanager=N&serveng=Y&sparesku=Y&activity=FFF202012061211195489D3E4DD35FC1\"\n          //  console.log(\"getComplaintList\",complainListURL);\n            return this.genericHTTP.get(complainListURL);\n            //return this.httpClient.get('assets/data/complain.json');\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public async getServiceManagerList(){\n    try {\n          let serviceManagerListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.BusinessPartnerAsPerCategory?'+\n           'activityid=' + this.loginService.selectedactivity.id +\n          '&c_bgroup_id='+this.loginService.service_manager_id;\n      \n        if(!!this.serviceManagerList){\n        //  console.log(this.TAG,\"Not Empty\");\n          return  Observable.create((observer)=>{\n            observer.next(this.serviceManagerList);\n            observer.complete();\n           });\n        } else {\n        //  console.log(this.TAG,\"Empty\");\n          this.serviceManagerList = await this.genericHTTP.get(serviceManagerListURL).toPromise();\n        //  console.log(this.TAG,\"Empty\",this.serviceManagerList);\n          return  Observable.create((observer)=>{\n            observer.next(this.serviceManagerList);\n            observer.complete();\n           });\n         \n        }\n\n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public getSpareSKUCode(){\n    try {\n          return this.genericHTTP.get('assets/data/skuCode.json');\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public async getProposedActionList(){\n    try {\n            let getProposedActionListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n            'user_id=' + this.loginService.userid +\n            '&refname='+'MSNR%20Proposed%20Action';\n         \n            if(!!this.proposedActionList){\n            //  console.log(this.TAG,\"Not Empty\");\n              return  Observable.create((observer)=>{\n                observer.next(this.proposedActionList);\n                observer.complete();\n               });\n            } else {\n            //  console.log(this.TAG,\"Empty\");\n              this.proposedActionList = await this.genericHTTP.get(getProposedActionListURL).toPromise();\n             // console.log(this.TAG,\"Empty\",this.proposedActionList);\n              return  Observable.create((observer)=>{\n                observer.next(this.proposedActionList);\n                observer.complete();\n               });\n             \n            }\n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public async getComplaintStatus(){\n    try {\n          let getProposedActionListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n          'refname='+'MSNR%20Status';\n        \n          if(!!this.complaintStatusList){\n          //  console.log(this.TAG,\"Not Empty\");\n            return  Observable.create((observer)=>{\n              observer.next(this.complaintStatusList);\n              observer.complete();\n             });\n          } else {\n           // console.log(this.TAG,\"Empty\");\n            this.complaintStatusList = await this.genericHTTP.get(getProposedActionListURL).toPromise();\n           // console.log(this.TAG,\"Empty\",this.complaintStatusList);\n            return  Observable.create((observer)=>{\n              observer.next(this.complaintStatusList);\n              observer.complete();\n             });\n           \n          }\n\n\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }  \n  }\n  public punchedCOPSalesOrderPost(spareObject){\n    try {\n          let login =this.loginService.user;\n          let password = this.loginService.pass;\n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type':'application/json',\n                'Accept':'application/json',  \n                'Authorization':'Basic '+auth\n              })\n            };\n           \n            console.log(this.TAG,\"punched COP Sales Order Post FINAL\",spareObject);\n            let punchedOrder_url = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceInsert?'\n            return  this.genericHTTP.post(punchedOrder_url,spareObject,httpOptions);\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  \n  }\n  public async getAddress(name){\n    try {\n        return this.genericHTTP.get(this.loginService.commonurl + 'org.openbravo.service.json.jsonrest/BusinessPartner?'\n         + this.loginService.ReadOnlyparameter + '&'\n         + '_selectedProperties=id,name,shipToAddress,invoiceToAddress&' \n         + '_where=active=true%20and%20name=\\'' + name + '\\''\n         );\n\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public finalCloser(complain:Complain){\n    try {\n          let login =this.loginService.user;\n          let password = this.loginService.pass;\n          const auth=btoa(login+\":\"+password);\n          const httpOptions = {\n            headers: new HttpHeaders({\n              'Content-Type':'application/json',\n              'Accept':'application/json',  \n              'Authorization':'Basic '+auth\n      \n              })\n            };\n          let oneObject:any = {\n                              'complaintno':complain.complaint_no,\n                              'complaintid':complain.complaintid,\n                              'doctype':complain.doctype,\n                              'nameofcomplainer':complain.nameofcomplainer,\n                              'desofcomplnr':complain.desofcomplnr,\n                              'contnumber':complain.contnumber,\n                              'email':complain.email,\n                              'eventdate':complain.eventdate,\n                              'serialno':complain.serialno,\n                              \"srnoequipment\":complain.srnoequipment,\n                              \"contracttype\":complain.contracttype,\n                              'invoiceno':complain.invoiceno,\n                              \"invoicedate\":complain.invoicedate,\n                              \"errorcode\":complain.errorcode,\n                              \"dealername\":complain.dealername,\n                              \"installationdate\":complain.installationdate,\n                              \"skucode\":complain.skucode,\n                              \"skuname\":complain.skuname,\n                              \"brandname\":complain.brandname,\n                              \"producttobereturn\":complain.producttobereturn,\n                              \"custname\":complain.custname,\n                              \"add1\":complain.add1,\n                              \"add2\":complain.add2,\n                              \"add3\":complain.add3,\n                              \"pincode\":complain.pincode,\n                              \"area\":complain.area,\n                              \"city\":complain.city,\n                              \"state\":complain.state,\n                              \"country\":complain.country,\n                              \"description\":complain.description,\n                              \"lotno\":complain.lotno ? complain.lotno : '',\n                              \"appcomplaint\":complain.appcomplaint,\n                              \"assigntoservvendor\":complain.assigntoservvendor,\n                              \"salesrepresentative\":complain.salesrepresentative,\n                              \"newdealername\":complain.newdealername,\n                              \"serviceengname\":complain.serviceengname,\n                              \"serviceengcontact\":complain.serviceengcontact,\n                              \"visitdate\":complain.visitdate,\n                            //  \"servicevendorremark\":complain.servicevendorremark,\n                              \"assigntoservmg\":complain.assigntoservmg,\n                              \"activity\":this.loginService.selectedactivity.id,\n                              \"Appect\":complain.Appect,\n                              \"problemobserv\":complain.problem_observed,\n                              \"fieldvisit\":complain.field_visit_remarks,\n                              \"proposeactn\":complain.proposed_action,\n                              \"assigntofieldvisit\":complain.assign_to,\n                              \"closureatfield\":complain.closureatfield,\n                              \"compltstatus\":complain.complaint_status,\n                              \"imagebase64\":complain.imagebase64,\n                              \"file_type\":complain.file_type\n                              }\n                              if(!!complain.spare_received_date) { \n                              oneObject.sparesinstall = [ { \"recvdate\":complain.spare_received_date,\n                                                        \"repairreport\":complain.repair_report,\n                                                        \"compltstatus\":complain.complaint_status,\n                                                        \"compltndate\":complain.complaint_date,\n                                                        \"replacesparepartno\":complain.replaced_spare_part_serialNo,\n                                                        \"serviceattendedby\":complain.service_attended,\n                                                        \"defectivepartno\":complain.defective_spare_part_no,\n                                                        \"docketno\":complain.def_spare_docket_no,\n                                                        \"courier\":complain.def_spare_courier,\n                                                        \"sentdate\":complain.def_spare_sent_date,\n                                                        \"spareinstallclose\":complain.spare_install_closed\n                                                      }]\n                                                      \n                                \n                              }\n                              if(!!complain.servicevendorremark){\n                                oneObject.needtosendcah =[{\"sermangremarks\":complain.servicevendorremark,\n                                                      \"defsparepartno\":complain.defective_spare_part_no,\n                                                      \"defsparerecevdate\":complain.defective_spare_part_received_date,\n                                                      \"refno\":complain.smart_solve_ref_no\n                                                    }]\n                              \n                              \n                              }\n            console.log(this.TAG,\"FINAL Closure API Data Service\",oneObject);\n            let complain_url = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceInsert?'\n            //return  this.genericHTTP.post(complain_url,oneObject,httpOptions);\n            if(complain.file_type==\"image\"){\n              return  this.genericHTTP.post(complain_url,oneObject,httpOptions);\n            } else if(complain.file_type==\"pdf\"){\n                if(this.msg.isplatformweb == true){\n                  let formData = new FormData();\n                  let postData = JSON.stringify(oneObject);\n                  formData.append(\"postData\",postData)\n                \n                // formData.append('complaintid',complain.complaintid)\n                // formData.append('compltstatus',complain.complaint_status)\n                 formData.append('imagebase64', oneObject.imagebase64, oneObject.imagebase64.name);\n                 formData.append('file_type',complain.file_type);\n               \n\n                  \n                  let login = this.loginService.user;\n                  let password = this.loginService.pass;\n                  const auth = btoa(login + \":\" + password);\n                  const httpOptions = {\n                    headers: new HttpHeaders({\n                     \n                      'Authorization': 'Basic ' + auth\n                    })\n                  };\n                  console.log(this.TAG, \"final Closer With Pdf Final Data\", formData);\n                  let save_quotation = Constants.DOMAIN_URL + '/openbravo' + '/ws/in.mbs.webservice.CustomerServiceInsert?'\n                  return this.genericHTTP.fileDevicePost(save_quotation, formData, httpOptions);\n\n                } else if(this.platform.is('android')){\n                 this.uploadPDFFileServiceAndroidiOS(oneObject,complain.file_selected_uri).then(data => {\n                   \n                 })\n               \n                } else if(this.platform.is('ios')){\n                 return  this.uploadPDFFileiOS(oneObject,complain.file_selected_uri);\n                }\n            }\n            \n    } catch (error) {\n     // console.log(this.TAG,error)\n    }\n  }\n  public finalCloserWithPdf(data){\n    try {\n      let login = this.loginService.user;\n      let password = this.loginService.pass;\n      const auth = btoa(login + \":\" + password);\n      const httpOptions = {\n        headers: new HttpHeaders({\n         \n          'Authorization': 'Basic ' + auth\n        })\n      };\n      console.log(this.TAG, \"final Closer With Pdf Final Data\", data);\n      let save_quotation = Constants.DOMAIN_URL + '/openbravo' + '/ws/in.mbs.webservice.CustomerServiceInsert?'\n      return this.genericHTTP.fileDevicePost(save_quotation, data, httpOptions);\n    } catch (error) {\n      \n    }\n  }\n  public uploadPDFFileServiceAndroidiOS(data, path) {\n    try {\n\n      let login = this.loginService.user;\n      let password = this.loginService.pass;\n\n      this.cordovaHTTP.setDataSerializer('multipart');\n      const filePath = [path];\n\n      const auth = btoa(login + \":\" + password);\n\n\n      const httpOptions = {\n        headers: new HttpHeaders({\n         \n          'Authorization': 'Basic ' + auth\n\n        })\n      };\n\n      let auth1 = httpOptions.headers.get('Authorization');\n\n      let specificHeader = {\n        'Authorization': auth1\n      }\n      console.log(this.TAG, \"file upload data\", data);\n      let save_file_url = Constants.DOMAIN_URL + '/openbravo' + '/ws/in.mbs.webservice.CustomerServiceInsert?'\n\n      return Observable.create( (observer) => {\n        this.cordovaHTTP.uploadFile(save_file_url, data, specificHeader, filePath, \"imagebase64\").then((response) => {\n          let data:any\n          if(!!response.data){\n            data = JSON.parse(response.data);\n          } else {\n            data = response;\n          }\n          observer.next(data);\n          observer.complete();\n        }).catch((error) => {\n         // this.commonFunction.loadingDismiss();\n          console.log(this.TAG, \"file upload error\", error);\n          throw error;\n           \n          //  this.commonFunction.loadingDismiss();\n        //  console.log(this.TAG, \"file upload error\", error);\n        })\n      });\n\n      \n\n    } catch (error) {\n      console.log(this.TAG, error);\n    }\n  }\n  public uploadPDFFileiOS(jsondata,selectedURI){\n    try {\n\n          let login = this.loginService.user;\n          let password = this.loginService.pass;\n\n          const auth = btoa(login + \":\" + password);\n\n          let save_file_url = Constants.DOMAIN_URL + '/openbravo' + '/ws/in.mbs.webservice.WMobileOrderPunchOB?'\n          \n          const fileTransfer: FileTransferObject = this.transfer.create();\n\n          let options: FileUploadOptions = {\n          fileKey: 'imagebase64',\n          fileName: jsondata.fileName,\n          params:jsondata,\n          headers: { 'Authorization': 'Basic ' + auth}\n          }\n\n          fileTransfer.upload(selectedURI,save_file_url , options)\n          .then((data) => {\n            console.log(\"pravin YESSSSS\",data);\n            let formatResponse = JSON.parse(data.response);\n            console.log(\"File Uplaod Result\",formatResponse);\n             if (data != null) {\n\n              \n             }\n   \n          }, (err) => {\n           \n          })\n       \n    \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public serviceManagerClose(complain:Complain){\n    try {\n      let login =this.loginService.user;\n      let password = this.loginService.pass;\n      const auth=btoa(login+\":\"+password);\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Accept':'application/json',  \n          'Authorization':'Basic '+auth\n  \n          })\n        };\n\n      let oneObject:any = {\n                          'complaintno':complain.complaint_no,\n                          'complaintid':complain.complaintid,\n                          'doctype':complain.doctype,\n                          'nameofcomplainer':complain.nameofcomplainer,\n                          'desofcomplnr':complain.desofcomplnr,\n                          'contnumber':complain.contnumber,\n                          'email':complain.email,\n                          'eventdate':complain.eventdate,\n                          'serialno':complain.serialno,\n                          \"srnoequipment\":complain.srnoequipment,\n                          \"contracttype\":complain.contracttype,\n                          'invoiceno':complain.invoiceno,\n                          \"invoicedate\":complain.invoicedate,\n                          \"errorcode\":complain.errorcode,\n                          \"dealername\":complain.dealername,\n                          \"installationdate\":complain.installationdate,\n                          \"skucode\":complain.skucode,\n                          \"skuname\":complain.skuname,\n                          \"brandname\":complain.brandname,\n                          \"producttobereturn\":complain.producttobereturn,\n                          \"custname\":complain.custname,\n                          \"add1\":complain.add1,\n                          \"add2\":complain.add2,\n                          \"add3\":complain.add3,\n                          \"pincode\":complain.pincode,\n                          \"area\":complain.area,\n                          \"city\":complain.city,\n                          \"state\":complain.state,\n                          \"country\":complain.country,\n                          \"description\":complain.description,\n                          \"lotno\":complain.lotno ? complain.lotno : '',\n                          \"appcomplaint\":complain.appcomplaint,\n                          \"assigntoservvendor\":complain.assigntoservvendor,\n                          \"salesrepresentative\":complain.salesrepresentative,\n                          \"newdealername\":complain.newdealername,\n                          \"serviceengname\":complain.serviceengname,\n                          \"serviceengcontact\":complain.serviceengcontact,\n                          \"visitdate\":complain.visitdate,\n                          \"servicevendorremark\":complain.servicevendorremark,\n                          \"assigntoservmg\":complain.assigntoservmg,\n                          \"activity\":this.loginService.selectedactivity.id,\n                          \"Appect\":complain.Appect,\n                          \"problemobserv\":complain.problem_observed,\n                          \"fieldvisit\":complain.field_visit_remarks,\n                          \n                         \n                          \"assigntofieldvisit\":complain.assign_to\n                       }\n                      \n                       if(!!complain.servicevendorremark){\n                        oneObject.needtosendcah =[{\"sermangremarks\":complain.servicevendorremark,\n                                              \"defsparepartno\":complain.defective_spare_part_no,\n                                              \"defsparerecevdate\":complain.defective_spare_part_received_date,\n                                              \"refno\":complain.smart_solve_ref_no\n                                            }]\n                       \n                       \n                        }\n      //  console.log(this.TAG,\"FINAL Closure API Data\",oneObject);\n        let complain_url = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceInsert?'\n        return  this.genericHTTP.post(complain_url,oneObject,httpOptions);\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public spareInstallSaveToOB(spareComplain:Complain){\n    try {\n            let login =this.loginService.user;\n            let password = this.loginService.pass;\n            const auth=btoa(login+\":\"+password);\n            const httpOptions = {\n              headers: new HttpHeaders({\n                'Content-Type':'application/json',\n                'Accept':'application/json',  \n                'Authorization':'Basic '+auth\n        \n                })\n              };\n              let spareInstallObject:any = {\n                \"complaintno\":spareComplain.complaint_no,\n                \"complaintid\":spareComplain.complaintid,\n                \"activity\":this.loginService.selectedactivity.id,\n                \"problemobserv\":spareComplain.problem_observed,\n                \"fieldvisit\":spareComplain.field_visit_remarks,\n                \"proposeactn\":spareComplain.proposed_action,\n              }\n              spareInstallObject.sparesinstall = [{\"recvdate\":spareComplain.spare_received_date,\n                \"repairreport\":spareComplain.repair_report,\n                \"compltstatus\":spareComplain.complaint_status,\n                \"compltndate\":spareComplain.complaint_date,\n                \"replacesparepartno\":spareComplain.replaced_spare_part_serialNo,\n                \"serviceattendedby\":spareComplain.service_attended,\n                \"defectivepartno\":spareComplain.defective_spare_part_no,\n                \"docketno\":spareComplain.def_spare_docket_no,\n                \"courier\":spareComplain.def_spare_courier,\n                \"sentdate\":spareComplain.def_spare_sent_date,\n                \"spareinstallclose\":spareComplain.spare_install_closed,\n                \"orderid\":spareComplain.orderid,\n                \"sapreskuid\":spareComplain.sapreskuid,\n                \"qty\":spareComplain.qty,\n                \"sparerequiredid\":spareComplain.sparerequiredid\n            }]\n            console.log(this.TAG,\"FINAL Spare Install API Data\",spareInstallObject);\n            let complain_url = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceInsert?'\n            return  this.genericHTTP.post(complain_url,spareInstallObject,httpOptions);\n\n    } catch (error) {\n    //  console.log(this.TAG,error);\n      throw error;\n    }\n  }\n  public async getErrorCodeList(){\n    try {\n           let errorCodeURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvalues?'+\n            'user_id=' + this.loginService.userid +\n          '&type=EC';\n         \n          if(!!this.errorCodeList){\n           // console.log(this.TAG,\"Not Empty\");\n            return  Observable.create((observer)=>{\n              observer.next(this.errorCodeList);\n              observer.complete();\n             });\n          } else {\n           // console.log(this.TAG,\"Empty\");\n            this.errorCodeList = await this.genericHTTP.get(errorCodeURL).toPromise();\n          //  console.log(this.TAG,\"Empty\",this.errorCodeList);\n            return  Observable.create((observer)=>{\n              observer.next(this.errorCodeList);\n              observer.complete();\n             });\n           \n          }\n\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public async loadMasterData(){\n    try {\n          this.proposedActionList = await (await this.getProposedActionList()).toPromise();\n          this.complaintStatusList = await (await this.getComplaintStatus()).toPromise();\n          this.errorCodeList = await (await this.getErrorCodeList()).toPromise();\n          this.serviceManagerList = await (await this.getServiceManagerList()).toPromise();\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public  getCustomerServiceDetailById(complain_id:string){\n    try {\n          let complainDetailByIdURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceDetails?'+\n          'userid=' + this.loginService.userid\n          +'&appcomplaint='+'N'\n          +'&servmanager='+'N' \n          +'&serveng='+'Y'\n          +'&sparesku='+'Y'\n          +'&activity='+this.loginService.selectedactivity.id\n          +'&complaint_id='+complain_id;\n\n          \n          return this.genericHTTP.get(complainDetailByIdURL);\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n}\n"],"sourceRoot":""}