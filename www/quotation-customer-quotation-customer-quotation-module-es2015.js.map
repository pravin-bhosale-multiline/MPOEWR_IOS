{"version":3,"sources":["./src/app/quotation/customer-quotation/customer-quotation.page.html","./src/app/quotation/customer-quotation/customer-quotation.module.ts","./src/app/quotation/customer-quotation/customer-quotation.page.scss","./src/app/quotation/customer-quotation/customer-quotation.page.ts"],"names":[],"mappings":"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","file":"quotation-customer-quotation-customer-quotation-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Customer Quotation\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\" routerDirection=\\\"root\\\" routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <form [formGroup]=\\\"customerQuotationForm\\\">\\n  \\n    <!-- Customer -->\\n    <ion-card>\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Customer<span style=\\\"color:red!important\\\">*</span></ion-label>\\n              <ionic-selectable placeholder=\\\"Select Customer\\\" [searchDebounce]=\\\"1000\\\" disable=\\\"true\\\" [formControl]=\\\"customerQuotationForm.controls['customerCtrl']\\\"\\n                  [items]=\\\"businessPartnerList\\\"  \\n                  itemValueField=\\\"id\\\" \\n                  itemTextField=\\\"_identifier\\\" \\n                  [canSearch]=\\\"true\\\"\\n                  [shouldStoreItemValue]=\\\"false\\\"\\n                  (onChange)=\\\"onCustomerChange($event)\\\"\\n                  (onClose)=\\\"onCustomerClose($event)\\\"\\n                  (onSearch)=\\\"onCustomerSearchChange($event)\\\">\\n                </ionic-selectable>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <!-- Shipping Information -->\\n        <ion-row>\\n        <ion-col>\\n          <h5 ion-text class=\\\"text-primary\\\">\\n            <ion-icon name=\\\"locate\\\"></ion-icon> Shipping Information:\\n          </h5>\\n        </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n              <ion-item >\\n                <ion-label position=\\\"stacked\\\">Shipping Address<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select  [formControl]=\\\"customerQuotationForm.controls['selectedBPaddressShippingCtrl']\\\" interface=\\\"popover\\\" multiple=\\\"false\\\" placeholder=\\\"Select Address\\\">\\n                  <ion-select-option *ngFor=\\\"let custShippingAddress of custShippingAddressList\\\" [value]=\\\"custShippingAddress\\\">{{custShippingAddress.name}}</ion-select-option>\\n                </ion-select>\\n                </ion-item>\\n                <div padding-left>\\n                  <ng-container *ngFor=\\\"let validation of validation_messages.custAddShippingCtrlErrorMessage\\\">\\n                    <div *ngIf=\\\"customerQuotationForm.get('selectedBPaddressShippingCtrl').hasError(validation.type) && customerQuotationForm.get('selectedBPaddressShippingCtrl').touched\\\">\\n                      <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                    </div>\\n                  </ng-container>\\n                </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n              <ion-item >\\n                <ion-label position=\\\"stacked\\\">Billing Address<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select  [formControl]=\\\"customerQuotationForm.controls['selectedBPAddressBillingCtrl']\\\" interface=\\\"popover\\\" multiple=\\\"false\\\" placeholder=\\\"Select Address\\\">\\n                  <ion-select-option *ngFor=\\\"let badd of custBillingAddressList\\\" [value]=\\\"badd\\\">{{badd.name}}</ion-select-option>\\n                </ion-select>\\n                </ion-item>\\n                <div padding-left>\\n                  <ng-container *ngFor=\\\"let validation of validation_messages.custAddBillingCtrlErrorMessage\\\">\\n                    <div *ngIf=\\\"customerQuotationForm.get('selectedBPAddressBillingCtrl').hasError(validation.type) && customerQuotationForm.get('selectedBPAddressBillingCtrl').touched\\\">\\n                      <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                    </div>\\n                  </ng-container>\\n                </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-card>\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col>\\n           <ion-item>\\n            <div class=\\\"margin-custom\\\">\\n              <ion-label style=\\\"color: darkgray;\\\">Order Date</ion-label>\\n              <section class=\\\"cus\\\">\\n               <ion-datetime  disabled style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\" [(ngModel)]=\\\"today\\\" formControlName=\\\"orderDateCtrl\\\">\\n              </ion-datetime>\\n            </section>\\n            </div>\\n          </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Service Product <span style=\\\"color:red!important\\\">*</span></ion-label>\\n              <ionic-selectable placeholder=\\\"Select Product\\\" [searchDebounce]=\\\"1000\\\" [formControl]=\\\"customerQuotationForm.controls['serviceProductCtrl']\\\"\\n                                [items]=\\\"serviceProductList\\\" \\n                                itemValueField=\\\"id\\\" \\n                                itemTextField=\\\"name\\\" \\n                                [canSearch]=\\\"true\\\"\\n                                \\n                                [shouldStoreItemValue]=\\\"false\\\"\\n                                (onClose)=\\\"onServiceProductClose($event)\\\"\\n                                (onChange)=\\\"onServiceProductChange($event)\\\"\\n                                (onSearch)=\\\"onServiceProductSearch($event)\\\">\\n              </ionic-selectable>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row> \\n        <ion-row *ngIf=\\\"showComplainNumber\\\">\\n           <ion-col>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Complaint No.</ion-label>\\n              <ion-input type=\\\"text\\\" [formControl]=\\\"customerQuotationForm.controls['complaintNoCtrl']\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        \\n      </ion-card-content>\\n    </ion-card> \\n    <ion-card>\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col>\\n            <h5 ion-text class=\\\"text-primary\\\">\\n              <ion-icon name=\\\"cart\\\"></ion-icon>Serial No\\n            </h5>\\n          </ion-col>\\n          <ion-col>\\n            <ion-fab-button size=\\\"small\\\" float-right (click)=\\\"addSerialNo()\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-fab-button>\\n          </ion-col>\\n        </ion-row>\\n        <ion-item *ngFor=\\\"let item of selectedSerialNumberProductList; index as i\\\"  text-wrap style=\\\"font-size: small;\\\">\\n        \\n            <div style=\\\"width: 100%;\\\" (click)=\\\"toggle(item)\\\">\\n                <ion-row>\\n                  <ion-col size=\\\"8\\\">\\n                    <ion-label style=\\\"white-space: normal\\\">\\n                     <ion-icon *ngIf=\\\"!item.MainProductQty\\\" style=\\\"color: springgreen;\\\" name=\\\"pricetags\\\"></ion-icon>\\n                      {{ item.serialno }}\\n                    </ion-label>\\n                  </ion-col>\\n                  <ion-col size=\\\"2\\\" style=\\\"width: 100%; text-align: right;\\\">\\n                    <ion-icon name=\\\"trash\\\" (click)=\\\"removeProduct(item)\\\" style=\\\"font-size: x-large;\\n                    color: red;\\\"></ion-icon>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col nowrap>\\n                    <div *ngIf=\\\"item.show\\\">\\n                      <ion-label style=\\\"font-size: small;\\\">QTY: {{ item.qty }}</ion-label>\\n                      <ion-label style=\\\"font-size: small;\\\">UOM: {{ item.uomname }}</ion-label>\\n                      <ion-label style=\\\"font-size: small;\\\" *ngIf=\\\"Servicepricebasedon == 'PLB'\\\">Rate:{{item.rate}}</ion-label>\\n                      <ion-label style=\\\"font-size: small;\\\" *ngIf=\\\"Servicepricebasedon == 'PLB'\\\">Net Amount: {{ item.netamt }}</ion-label>\\n                      <ion-label style=\\\"font-size: small;\\\" *ngIf=\\\"Servicepricebasedon == 'PLB'\\\">Tax: {{ item.taxname}}</ion-label>\\n                      <ion-label style=\\\"font-size: small;\\\" *ngIf=\\\"Servicepricebasedon == 'PLB'\\\">Total Gross Amount: {{ item.totgrossamt}}</ion-label>\\n                    </div>\\n                 </ion-col>\\n                </ion-row>\\n            </div>\\n        \\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-row>\\n      <ion-col style=\\\"padding-left: 16px;padding-right: 16px;\\\">\\n        <ion-button size=\\\"default\\\"\\n          class=\\\"submit-btn\\\" expand=\\\"block\\\" [disabled]=\\\"(!customerQuotationForm.valid || customerQuotationForm.disabled ) || !hasSerialNumber\\\" color=\\\"primary\\\" (click)=\\\"onSaveQuotation(customerQuotationForm)\\\">Get Quotation\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    \\n</form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerQuotationPage } from './customer-quotation.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\nimport { PipesModule } from 'src/app/common/pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerQuotationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FormsModule,IonicSelectableModule,PipesModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerQuotationPage]\n})\nexport class CustomerQuotationPageModule {}\n","module.exports = \".cus {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n\\n.margin-custom {\\n  margin-left: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9xdW90YXRpb24vY3VzdG9tZXItcXVvdGF0aW9uL2N1c3RvbWVyLXF1b3RhdGlvbi5wYWdlLnNjc3MiLCJzcmMvYXBwL3F1b3RhdGlvbi9jdXN0b21lci1xdW90YXRpb24vY3VzdG9tZXItcXVvdGF0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHlCQUFBO1VBQUEsbUJBQUE7RUFDRCx5QkFBQTtVQUFBLDhCQUFBO0FDQUg7O0FER0U7RUFDRSxnQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvcXVvdGF0aW9uL2N1c3RvbWVyLXF1b3RhdGlvbi9jdXN0b21lci1xdW90YXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3tcbiAgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyIDtcbiAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgIC8vIHdpZHRoOiAxMDAlO1xuICAgfVxuICAubWFyZ2luLWN1c3RvbXtcbiAgICBtYXJnaW4tbGVmdDogMHB4O1xuICB9XG5cbiAgIGlvbi1kYXRldGltZSB7XG4gICAvLyB3aWR0aDogMTAwJTtcbiAgfSIsIi5jdXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5tYXJnaW4tY3VzdG9tIHtcbiAgbWFyZ2luLWxlZnQ6IDBweDtcbn0iXX0= */\"","import { CustomerQuotationService } from './customer-quotation.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { BPaddress, BusinessPartnerList } from 'src/app/neworder/neworder.service';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { LoginauthService } from 'src/app/login/loginauth.service';\nimport { timeStamp } from 'console';\n\n@Component({\n  selector: 'app-customer-quotation',\n  templateUrl: './customer-quotation.page.html',\n  styleUrls: ['./customer-quotation.page.scss'],\n})\nexport class CustomerQuotationPage implements OnInit {\n  \n  readonly TAG = \"Customer Quotation Page\";\n\n  customerQuotationForm:FormGroup;\n  businessPartnerList: any;\n  selectedBusinessPartner: BusinessPartnerList;\n  custShippingAddressList: BPaddress[];\n  custBillingAddressList: BPaddress[];\n  serviceProductList:any\n  reftextcount = 0;\n  selectedSerialNumberProductList:any;\n  selectedServiceProduct:any;\n  previousPageData:any;\n  hasSerialNumber = false;\n  Servicepricebasedon: any;\n  showComplainNumber = false;\n  tempbusinessPartnerList:any\n  tempServiceProductResponse:any\n  now = new Date();\n  year = this.now.getFullYear();\n  month = this.now.getMonth() + 1;\n  day = this.now.getDate();\n  /**\n   * \n   */\n  maxDate = this.year + \"-\" + this.month + \"-\" + this.day;\n  today= this.year+\"-\"+(\"0\" + this.month).slice(-2)+ \"-\" + (\"0\" + this.day).slice(-2);\n\n  dontClearCustomerQuotation;\n\n  validation_messages = {'selectedBusinessPartner': [{ type: 'required', message: '*Please Select Customer.'}],\n                         'custAddShippingCtrlErrorMessage': [{ type: 'required', message: '*Please Select Shipping Address.'}],\n                         'custAddBillingCtrlErrorMessage':[{ type: 'required', message: '*Please Select Billing Address.'}],\n                        };\n\n\n  constructor(private formBuilder: FormBuilder,private commonFunction: Commonfun,\n              private alertCtrl: AlertController,private router: Router,private route: ActivatedRoute,\n              private customerQuotationService: CustomerQuotationService,\n              private loginService: LoginauthService,public loginauth: LoginauthService,) { }\n\n  ngOnInit() {\n    this.customerQuotationForm = this.formBuilder.group({\n      customerCtrl:[,Validators.required],\n      selectedBPaddressShippingCtrl:[,Validators.required],\n      selectedBPAddressBillingCtrl:[,Validators.required],\n      orderDateCtrl:[,Validators.required],\n      serviceProductCtrl:[,Validators.required],\n      complaintNoCtrl:[,]\n    });\n\n    //this.customerQuotationForm.get('orderDateCtrl').disable();\n  \n  }\n  async ionViewWillEnter(){\n  // console.log(this.TAG,\"ionViewWillEnter Fired\");\n   this.commonFunction.loadingPresent();\n   this.Servicepricebasedon = this.loginService.selectedactivity.Servicepricebasedon;\n  // console.log(this.TAG,\"Servicepricebasedon\",this.Servicepricebasedon);\n\n   \n   let tempResponse  = await this.customerQuotationService.getCustomer().toPromise();\n  // tempResponse =  tempResponse.slice(0,9);\n  \n  if(!!tempResponse.length){\n      if(tempResponse.length > this.loginauth.minlistcount){\n        this.businessPartnerList = [];\n      } else {\n        this.businessPartnerList =  tempResponse;\n        if(this.businessPartnerList.length == 1){\n          this.customerQuotationForm.controls[\"customerCtrl\"].setValue(this.businessPartnerList[0]);\n          this.selectedBusinessPartner = this.businessPartnerList[0];\n          this.bindCustomerBillingAddress();\n          this.tempServiceProductResponse = await this.customerQuotationService.getServiceProduct(\"\",this.selectedBusinessPartner.id).toPromise();\n        }  else {\n          this.dontClearCustomerQuotation = true;\n        }\n      }\n  }\n  if(!!this.tempServiceProductResponse) {\n    if(this.tempServiceProductResponse.length > this.loginauth.minlistcount){\n      this.serviceProductList = \"\"\n    \n    } else {\n      this.serviceProductList = this.tempServiceProductResponse;\n      if(this.serviceProductList.length == 1){\n        this.customerQuotationForm.controls[\"serviceProductCtrl\"].setValue(this.serviceProductList[0]);\n        this.selectedServiceProduct = this.serviceProductList[0];\n       // this.customerQuotationForm.get('serviceProductCtrl').disable();\n      } else {\n        this.dontClearCustomerQuotation = true;\n      }\n    }\n  }\n \n   \n\n   this.bindData();\n   \n    // let routeData = this.route.snapshot.params['cartList'];\n    this.commonFunction.loadingDismiss();\n    \n  }\n  public bindData(){\n    try {\n          this.route.queryParams.subscribe((data) => {\n            if(!!data[\"cartList\"] && data[\"cartList\"].length > 0 ){\n              this.selectedSerialNumberProductList = JSON.parse(data[\"cartList\"]);\n            //  console.log(this.TAG,\"Previous Page Data Cart List\",this.selectedSerialNumberProductList);\n              this.previousPageData = JSON.parse(data[\"selectedQuotationData\"])\n            //  console.log(this.TAG,\"Previous Page Data\",this.previousPageData);\n              this.hasSerialNumber = true;\n              if(!!this.previousPageData.selectedBusinessPartnerKey){\n                 this.customerQuotationForm.controls[\"customerCtrl\"].setValue(this.previousPageData.selectedBusinessPartnerKey);\n                 this.selectedBusinessPartner = this.previousPageData.selectedBusinessPartnerKey;\n                 this.customerQuotationForm.get('customerCtrl').disable();\n                 this.customerQuotationForm.get('selectedBPaddressShippingCtrl').disable();\n                 this.customerQuotationForm.get('selectedBPAddressBillingCtrl').disable();\n              }\n              if(!!this.previousPageData.bp_billing_add_id){\n                setTimeout(() => {\n\n                   let tempBillAdd = [] = this.previousPageData.bp_billing_add_id;\n                   let tempShipAdd = [] = this.previousPageData.bp_shiping_add_id;\n                  \n                   this.customerQuotationForm.controls[\"selectedBPaddressShippingCtrl\"].setValue(tempShipAdd[0]);\n                   this.customerQuotationForm.controls[\"selectedBPAddressBillingCtrl\"].setValue(tempBillAdd[0]);\n\n                   this.customerQuotationForm.get('selectedBPaddressShippingCtrl').disable();\n                   this.customerQuotationForm.get('selectedBPAddressBillingCtrl').disable();\n                  \n                }, 100);\n              }\n\n\n              if(!!this.previousPageData.order_date){\n                this.customerQuotationForm.controls[\"orderDateCtrl\"].setValue(this.previousPageData.order_date);\n\n              }\n              if(!!this.previousPageData.complaint_no){\n                this.customerQuotationForm.controls[\"complaintNoCtrl\"].setValue(this.previousPageData.complaint_no);\n                this.customerQuotationForm.get('complaintNoCtrl').disable();\n              }\n              if(!!this.previousPageData.service_product_id){\n                this.customerQuotationForm.controls[\"serviceProductCtrl\"].setValue(this.previousPageData.service_product_id);\n                this.selectedServiceProduct = this.previousPageData.service_product_id;\n                this.customerQuotationForm.get('serviceProductCtrl').disable();\n                \n              }\n\n            }\n         });\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public onCustomerChange(event: {component: IonicSelectableComponent,value: any}){\n    try {\n          this.custShippingAddressList = null;\n          this.custBillingAddressList = null;\n          this.customerQuotationForm.controls[\"selectedBPaddressShippingCtrl\"].setValue('');\n          this.customerQuotationForm.controls[\"selectedBPAddressBillingCtrl\"].setValue('');\n          this.selectedBusinessPartner = event.value;\n          this.bindCustomerBillingAddress(event.value.id);\n          event.component._searchText = \"\";\n          \n          this.bindServiceProductIfSelected(); \n\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public onCustomerClose(event: {component: IonicSelectableComponent,text: any}){\n    try {\n          event.component.searchText = \"\";\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public onCustomerSearchChange(event: { component: IonicSelectableComponent, text: any }){\n   try {\n          this.reftextcount++;\n          var custsearchtext = event.text;\n          if (custsearchtext.length >= 3) {\n            this.bindCustomerFromApi(custsearchtext);\n            this.reftextcount = 0;\n          } else {\n            if(!!this.dontClearCustomerQuotation && this.dontClearCustomerQuotation == true) {\n\n            } else {\n              this.businessPartnerList = [];\n            }\n\n\n\n          }\n   } catch (error) {\n    // console.log(this.TAG,error);\n   }\n  }\n  public onServiceProductClose(event: {component: IonicSelectableComponent,text: any}){\n    try {\n          event.component.searchText = \"\";\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public onServiceProductChange(event: {component: IonicSelectableComponent,value: any}){\n    try {\n        //  console.log(this.TAG,\"onServiceProductChange\"); \n          this.selectedServiceProduct = event.value;\n          if(event.value.compnumberismandatory =='Y'){\n            this.showComplainNumber =  true;\n            \n            this.customerQuotationForm.controls['complaintNoCtrl'].setValidators([Validators.required]);\n            this.customerQuotationForm.controls['complaintNoCtrl'].updateValueAndValidity();\n\n\n          } else if(event.value.compnumberismandatory =='N'){\n            this.showComplainNumber =  false;\n            this.customerQuotationForm.controls['complaintNoCtrl'].clearValidators();\n            this.customerQuotationForm.controls['complaintNoCtrl'].updateValueAndValidity();\n          }\n          event.component._searchText = \"\";\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public onServiceProductSearch(event: { component: IonicSelectableComponent, text: any }){\n    try {\n         \n        var custsearchtext = event.text;\n        if(!!custsearchtext){\n          if(!!this.selectedBusinessPartner){\n            this.bindServiceProduct(custsearchtext);\n          } else {\n            this.commonFunction.presentAlert(\"Customer Quotation\",\"Validation\",\"Please Select Customer\");\n          }\n       \n          \n        }\n          \n       \n      \n      \n      \n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public async bindCustomerFromApi(strsearch: string){\n    try {\n          if (strsearch != \"\") {\n            const cust_response = await this.customerQuotationService.getCustomer(strsearch).toPromise(); \n          //  console.log(this.TAG,cust_response);\n            this.businessPartnerList = cust_response;\n        } else {\n          this.businessPartnerList = [];\n        }\n         \n         \n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public async bindCustomerBillingAddress(id?){\n    try {\n            const addressResponse = await this.customerQuotationService.getcustmerbillingaddress(this.selectedBusinessPartner.id).toPromise();\n            const response = addressResponse['response'];\n            var jsondata = response.data;\n            this.custBillingAddressList = jsondata.filter(e => e.invoiceToAddress == true);\n            this.custShippingAddressList = jsondata.filter(e => e.shipToAddress == true);\n\n            setTimeout(() => {\n              if (this.custShippingAddressList.length == 1) {\n                this.customerQuotationForm.controls[\"selectedBPaddressShippingCtrl\"].setValue(this.custShippingAddressList[0]);\n              }\n              if (this.custBillingAddressList.length == 1) {\n                this.customerQuotationForm.controls[\"selectedBPAddressBillingCtrl\"].setValue(this.custBillingAddressList[0]);\n              }\n            }, 100);\n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public async bindServiceProduct(strsearch?:string){\n    try {\n          if(strsearch!=\"\"){\n               const serviceProductApiResponse = await this.customerQuotationService.getServiceProduct(strsearch,this.selectedBusinessPartner.id).toPromise();\n             //  console.log(this.TAG,\"Service Product API Response\",serviceProductApiResponse);\n             //  this.serviceProductList = [{\"id\":\"FFF20200121121311736E8DB9B68EA18\",\"name\":\"SC-002-Service Charges - Others\",\"compnumberismandatory\":\"N\"}];\n             this.serviceProductList = serviceProductApiResponse;\n            } else {\n              this.serviceProductList = [];\n              //  const serviceProductApiResponse = await this.customerQuotationService.getServiceProduct(strsearch,this.selectedBusinessPartner.id).toPromise();\n              //  console.log(this.TAG,\"Service Product API Response\",serviceProductApiResponse);\n              //  this.serviceProductList = serviceProductApiResponse;\n              //  console.log(this.TAG,this.serviceProductList);\n          }\n    \n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  toggle(selectedcartproduct) {\n    if (selectedcartproduct.show == false) {\n      for (var i = 0; i < this.selectedSerialNumberProductList.length; i++) {\n        if (this.selectedSerialNumberProductList[i].show === \"true\") {\n          this.selectedSerialNumberProductList[i].show = \"false\";\n        }\n      }\n    }\n    selectedcartproduct.show = !selectedcartproduct.show;\n  }\n  async presentAlert(Header: string, SubHeader: string, Message: string) {\n    const alert = await this.alertCtrl.create({\n      header: Header,\n      subHeader: SubHeader,\n      message: Message,\n      buttons: [{\n        text: \"OK\",\n        handler: (ok) => {\n          this.customerQuotationForm.reset('', {emitEvent: false});\n          this.router.navigateByUrl('/home');\n        }\n      }]\n    });\n    alert.dismiss(() => console.log('The alert has been closed.'));\n    await alert.present();\n  }\n  public addSerialNo(){\n    try {\n      if(!!this.selectedSerialNumberProductList){\n                      \n      } else {\n        this.selectedSerialNumberProductList = [];\n      }\n\n          if(!!this.customerQuotationForm.controls[\"customerCtrl\"].value){\n             if(!!this.customerQuotationForm.controls[\"selectedBPaddressShippingCtrl\"].value)   {\n                if(!!this.customerQuotationForm.controls[\"selectedBPAddressBillingCtrl\"].value){\n                  // if(!!this.customerQuotationForm.controls[\"serviceProductCtrl\"].value){\n                    if(true){\n                    let navigationExtras: NavigationExtras = {\n                   \n                      queryParams: { selectedSerialNumberProductList: JSON.stringify(this.selectedSerialNumberProductList),\n                                    quotation_data:JSON.stringify({ selectedBusinessPartnerKey:this.selectedBusinessPartner,\n                                                      bp_billing_add_id:this.customerQuotationForm.controls[\"selectedBPAddressBillingCtrl\"].value,\n                                                      bp_shiping_add_id:this.customerQuotationForm.controls[\"selectedBPaddressShippingCtrl\"].value,\n                                                      order_date:this.customerQuotationForm.controls[\"orderDateCtrl\"].value,\n                                                      service_product_id:this.selectedServiceProduct,\n                                                      complaint_no:this.customerQuotationForm.controls[\"complaintNoCtrl\"].value\n                                                    })\n                      \n                    } \n                    };\n                    this.router.navigate(['add-edit-service-product'], navigationExtras);\n                  } else {\n                    this.commonFunction.presentAlert(\"Customer Quotation\",\"Validation\",\"Please Select Service Product\");\n                  }\n\n                } else {\n                  this.commonFunction.presentAlert(\"Customer Quotation\",\"Validation\",\"Please Select Billing Address\");\n                }\n\n             } else {\n              this.commonFunction.presentAlert(\"Customer Quotation\",\"Validation\",\"Please Select Shipping Address\");\n             }\n            \n             \n            \n          } else {\n            this.commonFunction.presentAlert(\"Customer Quotation\",\"Validation\",\"Please Select Customer\");\n          }\n      \n      \n          \n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public removeProduct(deletedSerial){\n    try {\n          const result = this.selectedSerialNumberProductList.filter(item => item.m_attributesetinstance_id != deletedSerial.m_attributesetinstance_id);\n          this.selectedSerialNumberProductList = result;\n          if(this.selectedSerialNumberProductList.length < 1){\n            this.hasSerialNumber = false;\n          }\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public async onSaveQuotation(form){\n    try {\n          //  console.log(this.TAG,\"Quotation Data From Page\",form);\n            this.commonFunction.loadingPresent();\n\n            let data = {\n              \"bpid\": this.customerQuotationForm.controls['customerCtrl'].value.id,\n              \"billid\": this.customerQuotationForm.controls['selectedBPaddressShippingCtrl'].value.id,\n              \"shipid\": this.customerQuotationForm.controls['selectedBPaddressShippingCtrl'].value.id,\n              \"orderdate\": this.customerQuotationForm.controls['orderDateCtrl'].value,\n              \"m_product_id\": this.customerQuotationForm.controls['serviceProductCtrl'].value.id,\n              \"complaintno\": this.customerQuotationForm.controls['complaintNoCtrl'].value\n            }\n            \n            \n            \n            \n            \n            const saveQuotationResponse = await this.customerQuotationService.saveQuotation(data,this.selectedSerialNumberProductList).toPromise();\n          //  console.log(this.TAG,saveQuotationResponse);\n            this.commonFunction.loadingDismiss();\n            if(!!saveQuotationResponse){\n              this.presentAlert(\"Quotation Approval\",\"\",saveQuotationResponse.msg);\n            }\n            \n    } catch (error) {\n    //  console.log(this.TAG,error);\n      this.commonFunction.loadingDismiss();\n    }\n  }\n  public async bindServiceProductIfSelected(){\n    try {\n          this.tempServiceProductResponse = await this.customerQuotationService.getServiceProduct(\"\",this.selectedBusinessPartner.id).toPromise();\n          if(!!this.tempServiceProductResponse) {\n            if(this.tempServiceProductResponse.length > this.loginauth.minlistcount){\n              this.serviceProductList = \"\"\n            } else {\n              this.serviceProductList = this.tempServiceProductResponse;\n              if(this.serviceProductList.length == 1){\n                this.customerQuotationForm.controls[\"serviceProductCtrl\"].setValue(this.serviceProductList[0]);\n                this.selectedServiceProduct = this.serviceProductList[0];\n               // this.customerQuotationForm.get('serviceProductCtrl').disable();\n              }\n            }\n          }\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n\n\n}\n"],"sourceRoot":""}