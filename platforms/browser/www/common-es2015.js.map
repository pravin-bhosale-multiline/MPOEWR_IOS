{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/cubic-bezier-2812fda3.js","./node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js","./node_modules/@ionic/core/dist/esm/haptic-c8f1473e.js","./node_modules/@ionic/core/dist/esm/index-3476b023.js","./node_modules/@ionic/core/dist/esm/index-6826f2f6.js","./node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js","./node_modules/@ionic/core/dist/esm/watch-options-2af96011.js","./src/app/actual-travel-plan/actual-travel-plan.service.ts","./src/app/business-partner-address/business-partner-address.service.ts","./src/app/cardinal/customer-service/customer-service.service.ts","./src/app/cardinal/service-manager/service-manager.service.ts","./src/app/cardinal/vender-approval/vender-approval.service.ts","./src/app/hrms/mpr-form.service.ts","./src/app/newcustomer/newcustomer.service.ts","./src/app/product-list/product-list.module.ts","./src/app/quotation/customer-quotation/customer-quotation.service.ts","./src/app/selectorsingle/selectorsingleservice.service.ts","./src/app/travel-expense/travel-expense.service.ts","./src/app/travel-plan/travel-plan.service.ts","./src/app/use-vetcoins/use-vetcoins.service.ts","./src/assets/model/complain.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoD;;;;;;;;;;;;;AC5FpD;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiH;;;;;;;;;;;;;AC3CjH;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;AC/GlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAC+F;;AAEnJ,qCAAqC,2OAAsC;AAC3E,oCAAoC,uOAAqC;AACzE;AACA;AACA,QAAQ,2DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uMAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAoB;AAC7C,0BAA0B,wDAAoB;AAC9C;AACA;AACA,0BAA0B,wDAAmB;AAC7C,yBAAyB,wDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuG;;;;;;;;;;;;;ACnNvG;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAA;AAAA;AAAA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwD;;;;;;;;;;;;;;;;;;;;;AC9Bb;AACoB;AACH;AACqB;AAKjF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAElC,YAAmB,IAAgB,EAAQ,SAA2B,EAAS,WAAqC;QAAjG,SAAI,GAAJ,IAAI,CAAY;QAAQ,cAAS,GAAT,SAAS,CAAkB;QAAS,gBAAW,GAAX,WAAW,CAA0B;QAD3G,QAAG,GAAG,yBAAyB,CAAC;IAEvC,CAAC;IACH,0BAA0B,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","file":"common-es2015.js","sourcesContent":["/**\r\n * Based on:\r\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\r\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\r\n * TODO: Reduce rounding error\r\n */\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n/**\r\n * Given a cubic-bezier curve, get the x value (time) given\r\n * the y value (progression).\r\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\r\n * P0: (0, 0)\r\n * P1: (0.32, 0.72)\r\n * P2: (0, 1)\r\n * P3: (1, 1)\r\n *\r\n * If you give a cubic bezier curve that never reaches the\r\n * provided progression, this function will return NaN.\r\n */\r\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\r\n    const tValues = solveCubicBezier(p0.y, p1.y, p2.y, p3.y, progression);\r\n    return solveCubicParametricEquation(p0.x, p1.x, p2.x, p3.x, tValues[0]); // TODO: Add better strategy for dealing with multiple solutions\r\n};\r\n/**\r\n * Solve a cubic equation in one dimension (time)\r\n */\r\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\r\n    const partA = (3 * p1) * Math.pow(t - 1, 2);\r\n    const partB = (-3 * p2 * t) + (3 * p2) + (p3 * t);\r\n    const partC = p0 * Math.pow(t - 1, 3);\r\n    return t * (partA + (t * partB)) - partC;\r\n};\r\n/**\r\n * Find the `t` value for a cubic bezier using Cardano's formula\r\n */\r\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\r\n    p0 -= refPoint;\r\n    p1 -= refPoint;\r\n    p2 -= refPoint;\r\n    p3 -= refPoint;\r\n    const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\r\n    return roots.filter(root => root >= 0 && root <= 1);\r\n};\r\nconst solveQuadraticEquation = (a, b, c) => {\r\n    const discriminant = b * b - 4 * a * c;\r\n    if (discriminant < 0) {\r\n        return [];\r\n    }\r\n    else {\r\n        return [\r\n            (-b + Math.sqrt(discriminant)) / (2 * a),\r\n            (-b - Math.sqrt(discriminant)) / (2 * a)\r\n        ];\r\n    }\r\n};\r\nconst solveCubicEquation = (a, b, c, d) => {\r\n    if (a === 0) {\r\n        return solveQuadraticEquation(b, c, d);\r\n    }\r\n    b /= a;\r\n    c /= a;\r\n    d /= a;\r\n    const p = (3 * c - b * b) / 3;\r\n    const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\r\n    if (p === 0) {\r\n        return [Math.pow(-q, 1 / 3)];\r\n    }\r\n    else if (q === 0) {\r\n        return [Math.sqrt(-p), -Math.sqrt(-p)];\r\n    }\r\n    const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\r\n    if (discriminant === 0) {\r\n        return [Math.pow(q / 2, 1 / 2) - b / 3];\r\n    }\r\n    else if (discriminant > 0) {\r\n        return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow((q / 2) + Math.sqrt(discriminant), 1 / 3) - b / 3];\r\n    }\r\n    const r = Math.sqrt(Math.pow(-(p / 3), 3));\r\n    const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\r\n    const s = 2 * Math.pow(r, 1 / 3);\r\n    return [\r\n        s * Math.cos(phi / 3) - b / 3,\r\n        s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3,\r\n        s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3\r\n    ];\r\n};\n\nexport { Point as P, getTimeGivenProgression as g };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.selection();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionStart();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionChanged();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionEnd();\r\n    }\r\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        const documentFragment = document.createDocumentFragment();\r\n        const workingDiv = document.createElement('div');\r\n        documentFragment.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(blockedTag => {\r\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                const element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                const childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        const dfChildren = getElementChildren(documentFragment);\r\n        /* tslint:disable-next-line */\r\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        const fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment);\r\n        // First child is always the div we did our work in\r\n        const getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n        const attribute = element.attributes.item(i);\r\n        const attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        const attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    const childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (let i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","import { w as writeTask } from './core-ca0488fc.js';\nimport { b as LIFECYCLE_WILL_LEAVE, L as LIFECYCLE_WILL_ENTER, a as LIFECYCLE_DID_ENTER, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\n\nconst iosTransitionAnimation = () => import('./ios.transition-071bd421.js');\r\nconst mdTransitionAnimation = () => import('./md.transition-15a81b08.js');\r\nconst transition = (opts) => {\r\n    return new Promise((resolve, reject) => {\r\n        writeTask(() => {\r\n            beforeTransition(opts);\r\n            runTransition(opts).then(result => {\r\n                if (result.animation) {\r\n                    result.animation.destroy();\r\n                }\r\n                afterTransition(opts);\r\n                resolve(result);\r\n            }, error => {\r\n                afterTransition(opts);\r\n                reject(error);\r\n            });\r\n        });\r\n    });\r\n};\r\nconst beforeTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    setZIndex(enteringEl, leavingEl, opts.direction);\r\n    if (opts.showGoBack) {\r\n        enteringEl.classList.add('can-go-back');\r\n    }\r\n    else {\r\n        enteringEl.classList.remove('can-go-back');\r\n    }\r\n    setPageHidden(enteringEl, false);\r\n    if (leavingEl) {\r\n        setPageHidden(leavingEl, false);\r\n    }\r\n};\r\nconst runTransition = async (opts) => {\r\n    const animationBuilder = await getAnimationBuilder(opts);\r\n    const ani = (animationBuilder)\r\n        ? animation(animationBuilder, opts)\r\n        : noAnimation(opts); // fast path for no animation\r\n    return ani;\r\n};\r\nconst afterTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    enteringEl.classList.remove('ion-page-invisible');\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.classList.remove('ion-page-invisible');\r\n    }\r\n};\r\nconst getAnimationBuilder = async (opts) => {\r\n    if (!opts.leavingEl || !opts.animated || opts.duration === 0) {\r\n        return undefined;\r\n    }\r\n    if (opts.animationBuilder) {\r\n        return opts.animationBuilder;\r\n    }\r\n    const getAnimation = (opts.mode === 'ios')\r\n        ? (await iosTransitionAnimation()).iosTransitionAnimation\r\n        : (await mdTransitionAnimation()).mdTransitionAnimation;\r\n    return getAnimation;\r\n};\r\nconst animation = async (animationBuilder, opts) => {\r\n    await waitForReady(opts, true);\r\n    let trans;\r\n    try {\r\n        const mod = await import('./index-69c37885.js');\r\n        trans = await mod.create(animationBuilder, opts.baseEl, opts);\r\n    }\r\n    catch (err) {\r\n        trans = animationBuilder(opts.baseEl, opts);\r\n    }\r\n    fireWillEvents(opts.enteringEl, opts.leavingEl);\r\n    const didComplete = await playTransition(trans, opts);\r\n    if (opts.progressCallback) {\r\n        opts.progressCallback(undefined);\r\n    }\r\n    if (didComplete) {\r\n        fireDidEvents(opts.enteringEl, opts.leavingEl);\r\n    }\r\n    return {\r\n        hasCompleted: didComplete,\r\n        animation: trans\r\n    };\r\n};\r\nconst noAnimation = async (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    await waitForReady(opts, false);\r\n    fireWillEvents(enteringEl, leavingEl);\r\n    fireDidEvents(enteringEl, leavingEl);\r\n    return {\r\n        hasCompleted: true\r\n    };\r\n};\r\nconst waitForReady = async (opts, defaultDeep) => {\r\n    const deep = opts.deepWait !== undefined ? opts.deepWait : defaultDeep;\r\n    const promises = deep ? [\r\n        deepReady(opts.enteringEl),\r\n        deepReady(opts.leavingEl),\r\n    ] : [\r\n        shallowReady(opts.enteringEl),\r\n        shallowReady(opts.leavingEl),\r\n    ];\r\n    await Promise.all(promises);\r\n    await notifyViewReady(opts.viewIsReady, opts.enteringEl);\r\n};\r\nconst notifyViewReady = async (viewIsReady, enteringEl) => {\r\n    if (viewIsReady) {\r\n        await viewIsReady(enteringEl);\r\n    }\r\n};\r\nconst playTransition = (trans, opts) => {\r\n    const progressCallback = opts.progressCallback;\r\n    // TODO: Remove AnimationBuilder\r\n    const promise = new Promise(resolve => {\r\n        trans.onFinish((currentStep) => {\r\n            if (typeof currentStep === 'number') {\r\n                resolve(currentStep === 1);\r\n            }\r\n            else if (trans.hasCompleted !== undefined) {\r\n                resolve(trans.hasCompleted);\r\n            }\r\n        });\r\n    });\r\n    // cool, let's do this, start the transition\r\n    if (progressCallback) {\r\n        // this is a swipe to go back, just get the transition progress ready\r\n        // kick off the swipe animation start\r\n        trans.progressStart(true);\r\n        progressCallback(trans);\r\n    }\r\n    else {\r\n        // only the top level transition should actually start \"play\"\r\n        // kick it off and let it play through\r\n        // ******** DOM WRITE ****************\r\n        trans.play();\r\n    }\r\n    // create a callback for when the animation is done\r\n    return promise;\r\n};\r\nconst fireWillEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(leavingEl, LIFECYCLE_WILL_LEAVE);\r\n    lifecycle(enteringEl, LIFECYCLE_WILL_ENTER);\r\n};\r\nconst fireDidEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(enteringEl, LIFECYCLE_DID_ENTER);\r\n    lifecycle(leavingEl, LIFECYCLE_DID_LEAVE);\r\n};\r\nconst lifecycle = (el, eventName) => {\r\n    if (el) {\r\n        const ev = new CustomEvent(eventName, {\r\n            bubbles: false,\r\n            cancelable: false,\r\n        });\r\n        el.dispatchEvent(ev);\r\n    }\r\n};\r\nconst shallowReady = (el) => {\r\n    if (el && el.componentOnReady) {\r\n        return el.componentOnReady();\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst deepReady = async (el) => {\r\n    const element = el;\r\n    if (element) {\r\n        if (element.componentOnReady != null) {\r\n            const stencilEl = await element.componentOnReady();\r\n            if (stencilEl != null) {\r\n                return;\r\n            }\r\n        }\r\n        await Promise.all(Array.from(element.children).map(deepReady));\r\n    }\r\n};\r\nconst setPageHidden = (el, hidden) => {\r\n    if (hidden) {\r\n        el.setAttribute('aria-hidden', 'true');\r\n        el.classList.add('ion-page-hidden');\r\n    }\r\n    else {\r\n        el.hidden = false;\r\n        el.removeAttribute('aria-hidden');\r\n        el.classList.remove('ion-page-hidden');\r\n    }\r\n};\r\nconst setZIndex = (enteringEl, leavingEl, direction) => {\r\n    if (enteringEl !== undefined) {\r\n        enteringEl.style.zIndex = (direction === 'back')\r\n            ? '99'\r\n            : '101';\r\n    }\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.style.zIndex = '100';\r\n    }\r\n};\r\nconst getIonPageElement = (element) => {\r\n    if (element.classList.contains('ion-page')) {\r\n        return element;\r\n    }\r\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\r\n    if (ionPage) {\r\n        return ionPage;\r\n    }\r\n    // idk, return the original element so at least something animates and we don't have a null pointer\r\n    return element;\r\n};\n\nexport { deepReady as d, getIonPageElement as g, lifecycle as l, setPageHidden as s, transition as t };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const watchForOptions = (containerEl, tagName, onChange) => {\r\n    const mutation = new MutationObserver(mutationList => {\r\n        onChange(getSelectedOption(mutationList, tagName));\r\n    });\r\n    mutation.observe(containerEl, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n    return mutation;\r\n};\r\nconst getSelectedOption = (mutationList, tagName) => {\r\n    let newOption;\r\n    mutationList.forEach(mut => {\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < mut.addedNodes.length; i++) {\r\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\r\n        }\r\n    });\r\n    return newOption;\r\n};\r\nconst findCheckedOption = (el, tagName) => {\r\n    if (el.nodeType !== 1) {\r\n        return undefined;\r\n    }\r\n    const options = (el.tagName === tagName.toUpperCase())\r\n        ? [el]\r\n        : Array.from(el.querySelectorAll(tagName));\r\n    return options.find((o) => o.checked === true);\r\n};\n\nexport { findCheckedOption as f, watchForOptions as w };\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActualTravelPlanService {\n  readonly TAG = 'ActualTravelPlanService';\n  constructor(public http: HttpClient,public loginauth: LoginauthService,private genericHTTP: GenericHttpClientService) \n  { }\n  getWMobileUserWisePlanData(istravelclosure:string,mexp_visitplan_id?:string){\n    if(mexp_visitplan_id){\n      return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileUserWisePlanData?'\n      + 'user_id=' + this.loginauth.userid\n      + '&istravelclosure=' + istravelclosure\n      + '&mexp_visitplan_id=' + mexp_visitplan_id\n      );\n    }else{\n      return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileUserWisePlanData?'\n      + 'user_id=' + this.loginauth.userid\n      + '&istravelclosure=' + istravelclosure\n      );\n    }\n       \n    \n      }\n      SaveActualPlan(template:any) {\n   \n        let login = this.loginauth.user;//\"P2admin\";\n        let password = this.loginauth.pass;//\"Pass2020\";\n        const auth=btoa(login+\":\"+password);\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type':'application/json',\n            'Accept':'application/json',\n          'Authorization':'Basic '+auth\n    \n            })\n          };\n       \n         return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileVisitActualPlan'\n         ,template, httpOptions);\n    \n      }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessPartnerAddressService {\n\n  constructor(public platform: Platform,public http: HttpClient,public loginauth:LoginauthService,private genericHTTP:GenericHttpClientService) { }\n\n  getaddressbycustid(bp_id:string){\n    //  businessPartner_id=\"FFF20190328042044745CEDE4F2E670B\";\n    \n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileBPartnerAddList?'\n    + 'bp_id=' + bp_id \n    );\n    }\n\n    getexistcustmerapi(searchkey:string){\n      \n      return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileBPatnerAddCust?'\n      + 'user_id=' + this.loginauth.userid\n      + '&strsearch=' + searchkey\n      + '&activity_id=' + this.loginauth.selectedactivity.id\n      );\n      }\n\n\n    SaveAddress(addressjson:any) {\n      let login = this.loginauth.user;//\"P2admin\";\n      let password = this.loginauth.pass;//\"Pass2020\";\n      const auth=btoa(login+\":\"+password);\n\n\n\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Accept':'application/json',\n        'Authorization':'Basic '+auth\n  \n          })\n        };\n\n       return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileCustomerAddInsert'\n       ,addressjson, httpOptions);\n     }\n\n\n\n\n}\n","import { LoginauthService } from './../../login/loginauth.service';\nimport { GenericHttpClientService } from './../../common/generic-http-client.service';\nimport { Injectable } from '@angular/core';\nimport { Constants } from 'src/app/common/Constants';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Complain } from 'src/assets/model/complain';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerServiceService {\n\n  /**\n   * \n   */\n  readonly TAG = \"CustomerServiceService\";\n\n  constructor(private genericHttpClientService: GenericHttpClientService,\n              private loginService:LoginauthService,\n              private commonFunction: Commonfun,\n              public loginAuthService:LoginauthService,\n              private httpClient:HttpClient) { }\n\n\n  public getDocumentList(){\n    try {\n           let URL = this.loginService.commonurl + 'org.openbravo.service.json.jsonrest/DocumentType?'+ this.loginService.ReadOnlyparameter + '&' +'_where=EM_Mdts_Docnature=\\'SRV\\''; \n           //console.log(this.TAG,\"Doc Type Service\",URL);\n           return this.genericHttpClientService.get(URL);\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public getErrorCodeList(){\n    try {\n           let errorCodeURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvalues?'+\n           this.loginAuthService.parameter + '&user_id=' + this.loginAuthService.userid +\n          '&type=EC';\n           return this.genericHttpClientService.get(errorCodeURL);\n\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public getSerialNumberFromBase(serialNumberTemp){\n    try {\n            let serialNumerURL;\n            return this.genericHttpClientService.get(serialNumerURL);\n\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public getDesignationOfComplainerList(){\n    try {\n          //return this.httpClient.get('assets/data/designation.json');\n\n          let designationOfComplainerListURL =  Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvalues?'+\n          this.loginAuthService.parameter + '&user_id=' + this.loginAuthService.userid +\n          '&type=DC';\n          return  this.genericHttpClientService.get(designationOfComplainerListURL);\n\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public getContractTypeList(){\n    try {\n          let contractTypeListURL =  Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n          this.loginAuthService.parameter + '&user_id=' + this.loginAuthService.userid +\n          '&refname=MSNR%20Contract%20Type';\n          return  this.genericHttpClientService.get(contractTypeListURL);\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public checkSerialNumber(serialNo,date){\n   try {\n          let serialNumberCheckURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceInstallationBase?'+\n          this.loginAuthService.parameter + '&user_id=' + this.loginAuthService.userid +\n          '&serialno='+serialNo+'&activity='+this.loginService.selectedactivity.id;\n        //  console.log(\"Insta base Url\",serialNumberCheckURL);\n          return this.genericHttpClientService.get(serialNumberCheckURL);\n   } catch (error) {\n    // console.log(this.TAG,error);\n   } \n  }\n  public saveComplain(complain:Complain){\n    try {\n            let login =this.loginAuthService.user;\n            let password = this.loginAuthService.pass;\n            const auth=btoa(login+\":\"+password);\n            const httpOptions = {\n              headers: new HttpHeaders({\n                'Content-Type':'application/json',\n                'Accept':'application/json',  \n                'Authorization':'Basic '+auth\n        \n                })\n              };\n   \n   let data = {\n                'complaintno':complain.complaint_no,\n                'complaintid':complain.complaintid ? complain.complaintid:'',\n                'doctype':complain.doctype,\n                'nameofcomplainer':complain.nameofcomplainer,\n                'desofcomplnr':complain.desofcomplnr,\n                'contnumber':complain.contnumber,\n                'email':complain.email,\n                'eventdate':complain.eventdate,\n                'serialno':complain.serialno,\n                \"srnoequipment\":complain.srnoequipment,\n                \"contracttype\":complain.contracttype,\n                'invoiceno':complain.invoiceno,\n                \"invoicedate\":complain.invoicedate,\n                \"errorcode\":complain.errorcode,\n                \"dealername\":complain.dealername,\n                \"installationdate\":complain.installationdate,\n                \"skucode\":complain.skucode,\n                \"skuname\":complain.skuname,\n                \"brandname\":complain.brandname,\n                \"producttobereturn\":complain.producttobereturn,\n                \"custname\":complain.custname,\n                \"add1\":complain.add1,\n                \"add2\":complain.add2,\n                \"add3\":complain.add3,\n                \"pincode\":complain.pincode,\n                \"area\":complain.area,\n                \"city\":complain.city,\n                \"state\":complain.state,\n                \"country\":complain.country,\n                \"description\":complain.description,\n                \"lotno\":complain.lotno ? complain.lotno : '',\n                \"appcomplaint\":complain.appcomplaint,\n                \"assigntoservvendor\":complain.assigntoservvendor,\n                \"salesrepresentative\":complain.salesrepresentative?complain.salesrepresentative:'',\n                \"newdealername\":complain.newdealername,\n                \"serviceengname\":complain.serviceengname,\n                \"serviceengcontact\":complain.serviceengcontact,\n                \"servicevendor\":complain.servicevendor,\n                \"visitdate\":complain.visitdate,\n                \"servicevendorremark\":complain.servicevendorremark,\n                \"assigntoservmg\":complain.assigntoservmg,\n                \"activity\":this.loginService.selectedactivity.id,\n                \"Appect\":complain.Appect,\n                \"reject\":complain.reject\n\n               \n               \n}\n        //  console.log(this.TAG,\"SALES SAERVICE FINAL\",data);\n           \n          let complain_url = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceInsert?'\n          return  this.genericHttpClientService.post(complain_url,data,httpOptions);\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n \n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Constants } from 'src/app/common/Constants';\nimport { GenericHttpClientService } from 'src/app/common/generic-http-client.service';\nimport { LoginauthService } from 'src/app/login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceManagerService {\n  \n  /**\n   * \n   */\n  readonly TAG = \"ServiceManagerService\";\n\n  constructor(private genericHTTP: GenericHttpClientService,\n              public loginService: LoginauthService,\n              public httpClient: HttpClient) { }\n\n  public getComplaintList(screen?){\n    try {\n          let complainListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceDetails?'+\n          'userid=' + this.loginService.userid\n           +'&appcomplaint='+'N'\n           +'&servmanager='+'Y' \n           +'&serveng='+'N'\n           +'&sparesku='+'N'\n           +'&activity='+this.loginService.selectedactivity.id;        ;\n        //  console.log(\"getComplaintList\",complainListURL);\n          return this.genericHTTP.get(complainListURL);\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  \n  public getDealerList(){\n    try {\n          let dealerListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.BusinessPartnerAsPerCategory?'+\n           'activityid=' + this.loginService.selectedactivity.id +\n          '&c_bgroup_id='+this.loginService.dealer_id;\n        //  console.log(this.TAG,\"Dealer List URL\",dealerListURL);\n          return this.genericHTTP.get(dealerListURL);\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public getVenderList(){\n    try {\n            let venderListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.BusinessPartnerAsPerCategory?'+\n             'activityid=' + this.loginService.selectedactivity.id +\n            '&c_bgroup_id='+this.loginService.vender_id;\n          //  console.log(this.TAG,\"Vender List URL\",venderListURL);\n            return this.genericHTTP.get(venderListURL);\n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public getSalesRepresentativeList(bid){\n    try {\n            let salesRepresentativeListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerServiceSalesRep?'+\n             'user_id=' + this.loginService.userid +\n            '&bpid='+bid;\n          //  console.log(this.TAG,\"Sales Representative List URL\",salesRepresentativeListURL);\n            return this.genericHTTP.get(salesRepresentativeListURL);\n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n\n  public getDesignationOfComplainerList(){\n    try {\n            let designationOfComplainerListURL =  Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvalues?'+\n            'user_id=' + this.loginService.userid +\n            '&type=DC';\n            return  this.genericHTTP.get(designationOfComplainerListURL);\n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Constants } from 'src/app/common/Constants';\nimport { GenericHttpClientService } from 'src/app/common/generic-http-client.service';\nimport { LoginauthService } from 'src/app/login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VenderApprovalService {\n\n  readonly TAG = \"VenderApprovalService\";\n  constructor(private genericHTTP: GenericHttpClientService,\n    public loginService: LoginauthService,\n    public httpClient: HttpClient) { }\n\n\n  public getVenderApprovalList() {\n    try {\n          let venderApprovalListURL = Constants.DOMAIN_URL + '/openbravo' + '/ws/in.mbs.webservice.CustomerServiceDetails?' +\n          'userid=' + this.loginService.userid\n          +'&appcomplaint='+'Y'\n          +'&servmanager='+'N' \n          +'&serveng='+'N'\n          +'&sparesku='+'N'\n          +'&activity='+this.loginService.selectedactivity.id;\n        //  console.log(this.TAG,\"GET Vender Approval List\",venderApprovalListURL)\n          return this.genericHTTP.get(venderApprovalListURL);\n    } catch (error) {\n      console.error(this.TAG, error);\n    }\n  }\n\n  public getServiceEngList() {\n    try {\n          let serviceEngListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.BusinessPartnerVendor?'+\n          this.loginService.parameter + '&userid=' + this.loginService.userid +\n          '&activityid='+this.loginService.selectedactivity.id\n        //  console.log(this.TAG,\"Service Eng URL\",serviceEngListURL);\n          return this.genericHTTP.get(serviceEngListURL);\n    } catch (error) {\n      console.error(this.TAG, error);\n    }\n  }\n\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { Constants } from '../common/Constants';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\nimport { LoginauthService } from '../login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MprFormService {\n\nreadonly TAG = \"Mpr Form Service\";\nactivity_name;\n\n  constructor(private genericHttpClientService: GenericHttpClientService,\n              private loginService:LoginauthService,\n              private commonFunction: Commonfun,private httpClient: HttpClient) {\n\n                this.activity_name = loginService.selectedactivity.name;\n               }\n\n\n  public getOrganizationList(){\n    let getOrganizationListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.WMobileUserWiseOrgActivity?'+\n    this.loginService.parameter + '&userid=' + this.loginService.userid + '&activityid=' + this.loginService.selectedactivity.id;\n //   console.log(this.TAG,\"get Organization List\",getOrganizationListURL);\n    return this.genericHttpClientService.get(getOrganizationListURL);\n  }\n  public getReasonForMPRList(){\n    let getReasonForMPRListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n    this.loginService.parameter + '&user_id=' + this.loginService.userid + '&refname=HRMS%20Reason%20for%20MRP%20list';\n    //console.log(this.TAG,\"Doc Type Service\",URL);\n    return this.genericHttpClientService.get(getReasonForMPRListURL);\n  }\n  public getJobListingList(){\n    let getReasonForMPRListURL =  Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n    this.loginService.parameter + '&user_id=' + this.loginService.userid + '&refname=HRMS%20job%20list';\n    //console.log(this.TAG,\"Doc Type Service\",URL);\n    return this.genericHttpClientService.get(getReasonForMPRListURL);\n  }\n  public getQualificationList(){\n     let getQualificationListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvalues?'+\n     this.loginService.parameter + '&user_id=' + this.loginService.userid + '&type=QLFC';\n    //console.log(this.TAG,\"Doc Type Service\",URL);\n    return this.genericHttpClientService.get(getQualificationListURL);\n  }\n  public getMPRMasterDataList(selectedOrganization){\n    let getMPRMasterDataListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.MPRDetails?'+\n    this.loginService.parameter + '&ad_org_id=' + selectedOrganization.id;\n    // console.log(this.TAG,\"Doc Type Service\",getMPRMasterDataListURL);\n    return this.genericHttpClientService.get(getMPRMasterDataListURL);\n  }\n  public getResourceRequirementMasterList(){\n    let getResourceRequirementMasterListURL =  Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n    this.loginService.parameter + '&user_id=' + this.loginService.userid + '&refname=HRMS%20Employee%20Requirement';\n    //console.log(this.TAG,\"Doc Type Service\",URL);\n    return this.genericHttpClientService.get(getResourceRequirementMasterListURL);\n  }\n  public getResourceDepartmentMasterList(){\n    let getResourceDepartmentMasterListURL =  Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.ListOfvaluesReference?'+\n    this.loginService.parameter + '&user_id=' + this.loginService.userid + '&refname=HRMS%20Department';\n    //console.log(this.TAG,\"Doc Type Service\",URL);\n    return this.genericHttpClientService.get(getResourceDepartmentMasterListURL);\n  }\n  public getMPRList(){\n    let getMPRListURL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.MPRDetails?'+\n    this.loginService.parameter + '&ad_user_id=' +  this.loginService.userid;\n    // console.log(this.TAG,\"Doc Type Service\",getMPRListURL);\n    return this.genericHttpClientService.get(getMPRListURL);\n  }\n  public postMPRForm(data){\n    let login =this.loginService.user;\n    let password = this.loginService.pass;\n    const auth=btoa(login+\":\"+password);\n    const httpOptions = {headers: new HttpHeaders({'Content-Type':'application/json','Accept':'application/json','Authorization':'Basic '+auth})};\n    let MPR_FORM_SAVE_URL;\n    \n    if(data.is_approve == 'true' || data.is_approve == 'false'){\n      MPR_FORM_SAVE_URL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.MPRDetailsUpdate?'\n    } else {\n       MPR_FORM_SAVE_URL = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.MPRDetailsInsert?'\n    }\n    return  this.genericHttpClientService.post(MPR_FORM_SAVE_URL,data,httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\n\n\n\nexport interface ComplianceData{\n  mmstComplianceDetails_id:string;\n  Compliance_Type:string;\n  num:string;\n  imgcomp:string;\n  ismandatory:string;\n  uploadImg:string;\n  isImage:string;\n}\n\n/* get BPCategory ID */\nexport interface BPcategory {\n  _identifier: string;\n  id: string;\n}\n//compliancedetails\n\n/* get BPartner ID */\nexport interface BPartner {\n  _identifier: string;\n  id: string;\n}\n\n/* get Pincode ID */\nexport interface Pincode {\n  _identifier: string;\n  id: string;\n  region$_identifier: string;\n  country$_identifier: string;\n  spincode: string;\n  country:string;\n  region:string;\n  district$_identifier: string;\n  district:string;\n}\nexport interface compliancedata{\n  Compliance_Type: string;\nid: string;\nmmstComplianceDetails_id:string;\nimgcomp:any;\nimgcomp1:any;\nisImage: string;\nismandatory: boolean;\nnum: string\nscompType: string;\nuploadImg: boolean;\n}\n/* get Area ID */\nexport interface Area {\n  mmst_cttv_id: string;\n  cttv:string;\n  _identifier: string;\n  id: string;\n  area: string;\n  cttv$_identifier: string;\n  \n}\n\n\n\n/* get Complete Lead */\nexport interface LeadComplete {\n  cust_id: string;\n  referalcode: string;\n  org_id: string;\n  activity_id: string;\n  cust_nature: string;\n  firstname: string;\n  middlename: string;\n  lastname: string;\n  firmname: string;\n  panno: string;\n  img: string;\n  bpc_id: string;\n  complete: string;\n  mobileno: string;\n  add1: string;\n  add2: string;\n  add3: string;\n  pincode: string;\n  area: string;\n  city: string;\n  state: string;\n  country: string;\n  email: string;\n  billing: string;\n  shipping: string;\n}\n\n\n\nexport interface customerbilling{\n  _identifier: string;\n  id: string;\n  saddress1:string;\n  saddress2:string;\n  saddress3:string;\n  mmstCttv:string;\n  region:string;\n  country:string;\n  spincode:string\n  isbilling:string;\n  isshipping:string;\n  mmstPostOffVal:string;\n  mmstCttv$_identifier:string;\n  mmstSgstno:string;\n\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewcustomerService {\n\n  constructor(public http: HttpClient,public loginauth:LoginauthService,private genericHTTP:GenericHttpClientService) { }\n\n  getBPCategory(activityid: String){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/BusinessPartnerCategory?'\n    + '_selectedProperties=id,_identifier&'\n    + '_where=active=true%20and%20EM_Mmst_Org_Act=\\'' + activityid + '\\'',false,!this.loginauth.isloginactive);\n  }\n  getBPartner(activityid: String){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/BusinessPartner?'\n    + '_selectedProperties=id,_identifier&'\n    + '_where=EM_Mmst_Org_Act=\\'' + activityid + '\\'',false,!this.loginauth.isloginactive);\n  }\n\n  \n  getPincode(pincode :string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_post_off?'\n   + '_where=active=true%20and%20spincode=\\'' + pincode + '\\''\n   ,false,!this.loginauth.isloginactive);\n  }\n\n  getregion(pincode :string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/Region?'\n   + '_selectedProperties=mmstRegioncode,name&' \n    + '_where=active=true%20and%20id=\\'' + pincode + '\\'',false,!this.loginauth.isloginactive\n    );\n  }\n  getarea(area_id: String){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_post_off_val?'\n   + '_where=active=true%20and%20Mmst_Post_Off_ID=\\'' + area_id + '\\''\n   ,false,!this.loginauth.isloginactive);\n    \n  }\n\n  geteditcustmerheader(Cust_id : string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_customer?'\n    + '_where=id=\\'' + Cust_id + '\\''\n    ,false,!this.loginauth.isloginactive);\n    \n  }\n\n  geteditcustmerdetailapi(Cust_id : string){\n    \n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileCustomerDetails?'\n   + 'cust_id='+Cust_id \n   ,false,!this.loginauth.isloginactive);\n    \n  }\n\n\n\n\n  checkmobileno(mobile : string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_customer?'\n    + '_where=smobile=\\'' + mobile + '\\''\n    ,false,!this.loginauth.isloginactive);\n    \n  }\n\n\n  geteditcustmerbilling(Cust_id : string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_customer_billing?'\n    + '_where=mmstCustomer=\\'' + Cust_id + '\\''\n    ,false,!this.loginauth.isloginactive);\n    \n  }\n geteditcustmercompliance(Cust_id : string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_cust_compilance?'\n    + '_where=mmstCustomer=\\'' + Cust_id + '\\''\n    ,false,!this.loginauth.isloginactive);\n    \n  }\n  getreferalcustmer(selectedactivity:string){\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_customer?'\n  + '_where=mmstOrgAct=\\'' + selectedactivity + '\\'',false,!this.loginauth.isloginactive);\n  }\n\n\n  LeadComplete(leadcomplete:any) {\n    \n    let login='';\n    let password='';\n    if(!this.loginauth.isloginactive){\n       login = 'ionic.appuser';//\"P2admin\";\n       password = 'ionic.appuser';//\"Pass2020\";\n    }else{\n      login=this.loginauth.user\n      password=this.loginauth.pass\n    }\n    const auth=btoa(login+\":\"+password);\n    const httpOptions = {\n      headers: new HttpHeaders({\n       'Authorization':'Basic '+auth\n  \n        })\n      };\n      var  specificHeader = { 'Authorization':'Basic '+auth}\n    return this.genericHTTP.postformdata(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileNewLeadComplete'\n     ,leadcomplete, specificHeader, httpOptions);\n   }\n   getCompilanceDataapi(bpc_id: String,Cust_id:string) {\n     \n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileComplianceData?'\n     +'bpc_id=' + bpc_id +'&cust_id='+Cust_id,false,!this.loginauth.isloginactive );\n  } \n\n  getCompilanceData(bpc_id: String) {\n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_compliance_details?'\n    + '_where=bpGroup=\\'' + bpc_id + '\\'',false,!this.loginauth.isloginactive\n    );\n  }\n\n  getsalesarea(user_id: String,searchtext:string) {\n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileSalesAreaUserWise?'\n    + 'user_id=' + user_id\n    + '&activity_id=' + this.loginauth.selectedactivity.id \n    + '&strsearch='+searchtext,false,!this.loginauth.isloginactive\n    );\n  }\n\n  getUserActivityAgreementStatus() {\t\n     \n\n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileUserActivityAgreementStatus?'\t\n    + 'newregistration=Y',false,!this.loginauth.isloginactive);\t\n  }\n  getPreferredTransportModes() {\t\n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.BusinessPartnerVendor?'\t\n    + 'transport=true');\t\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ProductListPage } from './product-list.page';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n    IonicModule,\n    // RouterModule.forChild(routes)\n  ],\n  declarations: [ProductListPage],\n // exports: [ ProductListPage ]\n})\nexport class ProductListPageModule { }\n","import { Form } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Constants } from 'src/app/common/Constants';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { GenericHttpClientService } from '../../common/generic-http-client.service';\nimport { LoginauthService } from '../../login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerQuotationService {\n\n  readonly TAG = \"Customer Quotation Service\"\n  constructor(private genericHttpClientService: GenericHttpClientService,\n              private loginService: LoginauthService,\n              private commonFunction: Commonfun,\n              public platform: Platform,\n              public http: HttpClient) { }\n\n\npublic getCustomer(strsearch?:string){\n  try {\n         \n          if(!!strsearch){\n            strsearch=strsearch.replace(/ /g,\"%20\")\n          } else {\n            strsearch =\"\";\n          }\n         \n          let getCustomerURL = this.loginService.commonurl + 'ws/in.mbs.webservice.WMobileUserWiseCustomer?'\n          + this.loginService.parameter \n          + '&user_id=' + this.loginService.userid\n          + '&strsearch=' + strsearch\n          + '&activity_id=' + this.loginService.selectedactivity.id;\n          + '&ordertypeionic=' + \"\"\n        //  console.log(this.TAG,\"getCustomer\",getCustomerURL);\n\n        //  return this.genericHttpClientService.get(getCustomerURL).map(response =>response.slice(0.9));\n        return this.genericHttpClientService.get(getCustomerURL);\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\npublic getcustmerbillingaddress(businessPartner_id : string){\n    try {\n          return this.genericHttpClientService.get(this.loginService.commonurl + 'org.openbravo.service.json.jsonrest/BusinessPartnerLocation?'\n          + this.loginService.ReadOnlyparameter + '&'\n          + '_selectedProperties=id,name,shipToAddress,invoiceToAddress&' \n          + '_where=active=true%20and%20businessPartner=\\'' + businessPartner_id + '\\''\n          );\n    } catch (error) {\n      throw error;\n    }\n   \n   \n   \n   \n \n  \n}\npublic getServiceProduct(strsearch:string,bpid){\n  try {\n        \n    let getServiceProductURL;\n    if(!!strsearch) {\n    getServiceProductURL = this.loginService.commonurl + '/ws/in.mbs.webservice.ActivityContractTypeWiseProd?'\n      + this.loginService.parameter \n      + '&user_id=' + this.loginService.userid\n      + '&activity_id=' + this.loginService.selectedactivity.id\n      + '&strsearch=' +strsearch\n      + '&bpid=' + bpid\n    } else {\n      getServiceProductURL = this.loginService.commonurl + '/ws/in.mbs.webservice.ActivityContractTypeWiseProd?'\n      + this.loginService.parameter \n      + '&user_id=' + this.loginService.userid\n      + '&activity_id=' + this.loginService.selectedactivity.id\n      + '&strsearch=' +\"\"\n      + '&bpid=' + bpid\n    }  \n      \n      \n    //  console.log(this.TAG,\"getServiceProductURL\",getServiceProductURL);\n      return this.genericHttpClientService.get(getServiceProductURL);\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\npublic getSerialNoProductList(m_product_id: string, searchchar: string){\n  try {\n        if(this.platform.is('android')){\n          return this.http.get(this.loginService.commonurl + 'ws/in.mbs.webservice.SerialnoProdContracttypeWise?'\n          + this.loginService.parameter\n          + '&m_product_id=' + m_product_id\n          + '&activityid=' + this.loginService.selectedactivity.id\n          + '&strsearch=' + searchchar\n         );\n        } else if(this.platform.is('ios')){\n            return this.genericHttpClientService.get(this.loginService.commonurl + 'ws/in.mbs.webservice.SerialnoProdContracttypeWise?'\n            + this.loginService.parameter\n            + '&m_product_id=' + m_product_id\n            + '&activityid=' + this.loginService.selectedactivity.id\n            + '&strsearch=' + searchchar\n            );\n        } else {\n             \n          let url = this.loginService.commonurl + 'ws/in.mbs.webservice.SerialnoProdContracttypeWise?'\n          + this.loginService.parameter\n          + '&m_product_id=' + m_product_id\n          + '&activityid=' + this.loginService.selectedactivity.id\n          + '&strsearch=' + searchchar;\n       //   console.log(this.TAG,\"Serial Number list url\",url);\n             return this.http.get(url);\n        }\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\npublic getSerialNoProductDetail(bpid: string, m_product_id: string,shippadd: string, billadd: string){\n  try {\n        \n        let getSerialNoProductDetailURL = this.loginService.commonurl + 'ws/in.mbs.webservice.customerproductwiserate?'\n        + this.loginService.parameter\n        + '&activity_id=' + this.loginService.selectedactivity.id\n        + '&bpid=' + bpid\n        + '&m_product_id=' + m_product_id\n        + '&shipid=' + shippadd\n        + '&billid=' + billadd;\n      //  console.log(this.TAG,\"getSerialNoProductDetailURL\",getSerialNoProductDetailURL);\n        return this.genericHttpClientService.get(getSerialNoProductDetailURL);\n\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\npublic saveQuotation(form,serialNumberList){\n  try {\n        let login =this.loginService.user;\n        let password = this.loginService.pass;\n        const auth=btoa(login+\":\"+password);\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type':'application/json',\n            'Accept':'application/json',  \n            'Authorization':'Basic '+auth\n\n            })\n          };\n          let data = {\n                        \"userid\":this.loginService.userid,\n                        \"bpid\": form.bpid ? form.bpid : \"\",\n                        \"billid\": form.billid ? form.billid : \"\",\n                        \"shipid\": form.shipid ? form.shipid : \"\",\n                        \"orderdate\": form.orderdate ? form.orderdate : \"\",\n                        \"m_product_id\": form.m_product_id ? form.m_product_id:\"\",\n                        \"complaintno\": form.complaintno ? form.complaintno:\"\",\n                        \"quatationline\":serialNumberList ? serialNumberList : \"\"\n                     };\n        //  console.log(this.TAG,\"Save Quotation Final Data\",data);\n           \n          let save_quotation = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerQuotationInsert?'\n          return  this.genericHttpClientService.post(save_quotation,data,httpOptions);\n\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\npublic getQuotationList(){\n  try {\n        let getQuotationListURL = Constants.DOMAIN_URL + '/openbravo' + '/ws/in.mbs.webservice.CustomerQuotationDetails?' +\n        this.loginService.parameter + '&userid=' + this.loginService.userid\n        +'&activity='+this.loginService.selectedactivity.id;\n      //  console.log(this.TAG,\"GET Vender Approval List\",getQuotationListURL)\n        return this.genericHttpClientService.get(getQuotationListURL, {});\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\npublic approveQuotation(complaintno,approve,reject){\n  try {\n        let login =this.loginService.user;\n        let password = this.loginService.pass;\n        const auth=btoa(login+\":\"+password);\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type':'application/json',\n            'Accept':'application/json',  \n            'Authorization':'Basic '+auth\n\n            })\n          };\n          let data = {\n            \"userid\":this.loginService.userid,\n            \"msnr_quotationreq_id\":complaintno.msnr_quotationreq_id,\n            \"approve\":approve,\n            \"reject\":reject,\n           \n\n          };\n         \n\n\n\n        //  console.log(this.TAG,\"Approve Quotation Final Data\",data);\n          \n          let save_quotation = Constants.DOMAIN_URL + '/openbravo'+'/ws/in.mbs.webservice.CustomerQuotationApproval?'\n          return  this.genericHttpClientService.post(save_quotation,data,httpOptions);\n  } catch (error) {\n  //  console.log(this.TAG,error);\n  }\n}\n\n\n\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginauthService  } from '../login/loginauth.service';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\nexport interface Data {\n  id: string;\n  name: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectorsingleserviceService {\n\n  constructor(private loginservc: LoginauthService,public http: HttpClient,private genericHTTP:GenericHttpClientService) { }\n  json={};\n  data:Data[];\n  selectedData:Data;\n  pageOffset=0;\ngetData(jsonreport){\n  let login = this.loginservc.user;//\"P2admin\";\n  let password = this.loginservc.pass;//\"Pass2020\";\n  const auth=btoa(login+\":\"+password);\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':'application/json',\n      'Accept':'application/json',\n    'Authorization':'Basic '+auth\n   \n      })\n    };\n   return this.genericHTTP.post(this.loginservc.commonurl + 'ws/in.mbs.exportdata.MEXDGetSingleSelector'\n   ,jsonreport,httpOptions);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nexport interface PlanMasterList{\n  id:string;\n  name: string;\n  planCreator:string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TravelExpenseService {\n  readonly TAG = 'Travel Expense Service';\n  \n  constructor(private http:HttpClient,private genericHTTP:GenericHttpClientService,public loginauth: LoginauthService) { }\n\n  public async getPlan(id:string) {\n    let methodTAG = 'getPlan';\n    try {\n          return await this.genericHTTP.get('assets/data/planMaster.json'); \n    } catch (error) {\n      \n    }\n    \n  }\n  getWMobileTravelExpenseList(mexp_visitplan_id?:string){\n    \n        \n      if(mexp_visitplan_id){\n        return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileTravelExpenseList?'\n        +'user_id=' + this.loginauth.userid+'&mexp_visitplan_id=' + mexp_visitplan_id\n       );\n   \n      }else{\n        return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileTravelExpenseList?'\n        +'user_id=' + this.loginauth.userid\n       );\n   \n      }\n\n     // console.log(\"API FOR Travel Plan\",url);\n\n      \n      }\n       SaveWMobileTravelExpense(template:any) {\n   \n        let login = this.loginauth.user;//\"P2admin\";\n        let password = this.loginauth.pass;//\"Pass2020\";\n        const auth=btoa(login+\":\"+password);\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type':'application/json',\n            'Accept':'application/json',\n          'Authorization':'Basic '+auth\n    \n            })\n          };\n \n         return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileTravelExpense'\n         ,template, httpOptions);\n    \n      }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TravelPlanService {\n  readonly TAG = 'TravelPlanService';\n  constructor(public http: HttpClient,public loginauth: LoginauthService,private genericHTTP: GenericHttpClientService) \n  { }\n\n  getUserWiseSalesPerson(offset : string,strsearch:string,ondatechange:string,lat:string,long:string,outstation:string){\n    \n  \n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileUserWiseSalesPerson?'\n    + 'user_id=' + this.loginauth.userid\n    + '&strsearch=' + strsearch \n    + '&offset=' + offset \n    + '&ondatechange=' + ondatechange \n    + '&lat=' + lat \n    + '&long=' + long\n    + '&outstation='+outstation);\n  }\n  getSearchNearestPersoni(bpcutadd_id:string,offset : string,strsearch:string,outstation:string){\n      \n    \n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileSearchNearestPerson?'\n                                   + 'userid=' + this.loginauth.userid\n                                   + '&strsearch=' + strsearch \n                                   + '&bpcutadd_id=' + bpcutadd_id \n                                   + '&offset=' + offset\n                                   + '&outstation='+outstation);\n  }\n  getPlan(planname :string){\n   planname=planname.replace(/ /g,\"%20\")\n      return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mexp_visitplan?'\n      + '_where=Planname=\\'' + planname + '\\'',false,false\n      );\n  }\n  SavePlan(template:any) {\n    let login = this.loginauth.user;//\"P2admin\";\n    let password = this.loginauth.pass;//\"Pass2020\";\n    const auth=btoa(login+\":\"+password);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':'application/json',\n        'Accept':'application/json',\n        'Authorization':'Basic '+auth\n        })\n      };\n     return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileVisitPlan',template,httpOptions);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UseVetcoinsService {\n\n  constructor(public http: HttpClient,public loginauth:LoginauthService,private genericHTTP: GenericHttpClientService) { }\n\n  getWMobileVetCoinCustDetailsapi(mobno:string,mytransaction:string){\n    \n     return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileVetCoinCustDetails?'\n    + 'mobno=' + mobno\n    + '&mytransaction=' + mytransaction \n    + '&userid=' + this.loginauth.userid \n    + '&loginmobno=' + this.loginauth.user\n\n    );\n    }\n\n    VetCoinRewardTranstn(tocust:string,fromcust:string,description:string,bal:string,rewardlimit:string,rewardtransfer:string,redeemlimit:string,ordvalue:string){\n      \n      \n     \n      return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileVetCoinRewardTranstn?'\n     + 'tocust=' + tocust\n     + '&fromcust=' + fromcust \n     + '&description=' + description \n     + '&bal=' + bal \n     + '&rewardlimit=' + rewardlimit \n     + '&rewardtransfer=' + rewardtransfer \n     + '&redeemlimit=' + redeemlimit \n     + '&ordvalue=' + ordvalue \n\n     );\n     }   \n\n\n     getWMobileSendSmsViaIonic(mobno:string){\n    \n       return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileVetcoinSmsOpt?'\n      + 'mobno=' + mobno//this.loginauth.user\n      + '&userid=' + this.loginauth.userid \n      );\n      }\n}\n","export class Complain {\n    \n    constructor() {\n    }\n  public complaint_no:string;\n  public complaintid:string;\n  public complaint_date:string;\n  public doctype:string;\n  public nameofcomplainer:string;\n  public desofcomplnr:string;\n  public contnumber:string;\n  public email:string;\n  public eventdate:string;\n  public description:string;\n  public lotno:string;\n  public serialno:string;\n  public srnoequipment:string;\n  public contracttype:string;\n  public invoiceno:string;\n  public invoicedate:string;\n  public errorcode:string;\n  public dealername:string;\n  public installationdate:string;\n  public skucode:string;\n  public skuname:string;\n  public brandname:string;\n  public producttobereturn:string;\n  public custname:string;\n  public add1:string;\n  public add2:string;\n  public add3:string;\n  public pincode:string;\n  public area:string;\n  public city:string;\n  public state:string;\n  public country:string;\n  public appcomplaint:string;\n  public assigntoservvendor:string;\n  public newdealername:string;\n  public salesrepresentative:string;\n  public servicemanager:string;\n  public business:string;\n  public serviceengname:string;\n  public serviceengcontact:string;\n  public visitdate:string;\n  public servicevendorremark:string;\n  public assigntoservmg:string\n  public problem_observed:string;\n  public field_visit_remarks:string;\n  public proposed_action:string\n  public dealer_billing_address:string;\n  public dealer_shipping_address:string;\n  public assign_to:string;\n  public spare_SKUCode:string;\n  public quantity:string;\n  public dealer_name:string;\n  public cop_sales_order_reference:string;\n  public spare_received_date:string;\n  public repair_report:string;\n  public complaint_status:string;\n  public completion_date:string;\n  public replaced_spare_part_serialNo:string;\n  public service_attended:string;\n  public defective_sparePart:string\n  public defective_spare_part_no:string\n  public def_spare_docket_no:string;\n  public def_spare_courier:string;\n  public def_spare_sent_date:string;\n  public spare_install_closed:string;\n  public service_manager_remark:string;\n  public smart_solve_ref_no:string;\n  public defective_spare_part_received_date:string;\n  public final_closure:string;\n  public Appect:string;\n  public reject:string;\n  public servicevendor:string;\n  public closureatfield:string;\n  public imagebase64:any;\n  public sparerequestid:any;\n  public orderid:string;\n  public sapreskuid:string;\n  public qty:string;\n  public sparerequiredid:string;\n  public file_type:string;\n  public file_selected_uri:string;\n  public activity:string;\n}"],"sourceRoot":""}