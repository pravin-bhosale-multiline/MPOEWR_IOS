{"version":3,"sources":["./src/app/profile/profile.page.html","./src/app/profile/profile.module.ts","./src/app/profile/profile.page.scss","./src/app/profile/profile.page.ts"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Profile</ion-title>\\n    <!-- <ion-icon slot=\\\"end\\\" style=\\\"font-size: 35px\\\" name=\\\"log-out\\\" (click)=\\\"onLogout()\\\"></ion-icon> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card no-padding>\\n      <ion-grid no-padding>\\n        <ion-row>\\n          <ion-col>\\n            <ion-text class=\\\"ion-text-center\\\" color=\\\"primary\\\">\\n              <h1 *ngFor=\\\"let profile of defaultprofile\\\">{{profile.name}}</h1>\\n            </ion-text>\\n          <ion-list>\\n              <ion-item>\\n                  <ion-label color=\\\"primary\\\" position=\\\"stacked\\\">Client</ion-label>\\n                  <ion-text *ngFor=\\\"let profile of defaultprofile\\\">{{profile.defaultClient$_identifier}}\\n                  </ion-text>\\n              </ion-item>\\n              \\n              <ion-item>\\n                <ion-label color=\\\"primary\\\" position=\\\"stacked\\\">Role</ion-label>\\n                <ion-select #C [ngModel]=\\\"selectedRole\\\" (ionChange)=\\\"onChange(C.value)\\\" multiple=\\\"false\\\" placeholder=\\\"Select Role\\\">\\n                  <ion-select-option *ngFor=\\\"let selectedRole of rolelist\\\" [value]=\\\"selectedRole\\\">{{selectedRole.role$_identifier}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                  <ion-label color=\\\"primary\\\" position=\\\"stacked\\\">Organization</ion-label>\\n                  <ion-select #F [ngModel]=\\\"selectedOrg\\\" (ionChange)=\\\"onOrgChange(F.value)\\\" multiple=\\\"false\\\" placeholder=\\\"Select Organization\\\">\\n                    <ion-select-option *ngFor=\\\"let selectedOrg of userorglist |orderby:'asc':'organization$_identifier':'string'\\\" [value]=\\\"selectedOrg\\\">{{selectedOrg.organization$_identifier}}</ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              <ion-item>\\n                  <ion-label color=\\\"primary\\\" position=\\\"stacked\\\">Warehouse</ion-label>\\n                  <ion-select #W [ngModel]=\\\"selectedwarehouse\\\" (ionChange)=\\\"onWarehouseChange(W.value)\\\" multiple=\\\"false\\\" placeholder=\\\"Select Warehouse\\\">\\n                    <ion-select-option *ngFor=\\\"let selectedwarehouse of orgwarehouselist\\\" [value]=\\\"selectedwarehouse\\\">{{selectedwarehouse._identifier}}</ion-select-option>\\n                  </ion-select>\\n              </ion-item>\\n            </ion-list>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-right\\\">\\n                  <ion-button (click)=\\\"onClick()\\\">\\n                        Apply\\n                    </ion-button>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-text color=\\\"danger\\\">{{txtmsg}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n</ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\nimport { PipesModule } from '../common/pipes/pipes.module';\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,PipesModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginauthService, RolelistFinal, UserOrglistFinal, Warehouse, Profilefinalresponse } from '../login/loginauth.service';\nimport { Profileinterface } from './profileinterface';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  defaultprofile: Profileinterface[];\n  rolelist: RolelistFinal[];\n  txtmsg: string;\n  selectedRole: RolelistFinal;\n  selectedOrg: UserOrglistFinal;\n  orgwarehouselist: Warehouse[];\n  selectedwarehouse: Warehouse;\n  userorglist;\n  \n  constructor(private loginservc: LoginauthService, private router: Router) { }\n ngOnInit() {\n    this.loginservc.getdefaultprofile().subscribe((data: Profilefinalresponse) => {\n     // this.defaultprofile = data['response'];\n      this.defaultprofile = [data.response.data[0]];\n     // console.log('default profile',this.defaultprofile);\n      // console.log(data.response.data[0].defaultClient);\n     \n      this.loginservc.getrolelist(this.defaultprofile[0].id).subscribe(data => {\n        const response = data['response'];\n        this.rolelist = response['data'];\n        if(this.defaultprofile){\n          //set default role\n          let role = this.rolelist.filter((role)=>role.role===this.defaultprofile[0].defaultRole)[0];\n          // let role ={role:this.defaultprofile[0].defaultRole,role$_identifier:this.defaultprofile[0].defaultRole$_identifier,mmsaSecurerule: '',userContact: ''};\n          // //this.rolelist=[role];\n          this.selectedRole=role;\n          let organization={organization:this.defaultprofile[0].defaultOrganization,organization$_identifier:this.defaultprofile[0].defaultOrganization$_identifier};\n          this.userorglist=[organization];\n          this.selectedOrg=organization;\n          let warehouse={id:this.defaultprofile[0].defaultWarehouse,_identifier:this.defaultprofile[0].defaultWarehouse$_identifier};\n          this.orgwarehouselist=[warehouse];\n          this.selectedwarehouse=warehouse;\n          //apply auto if all values available\n          if(this.rolelist.length===1 && organization.organization && warehouse.id ){\n            this.onClick();\n          }\n          \n        }\n        // if(this.rolelist.length===1){\n        //   this.selectedRole=this.rolelist[0];\n        //   this.onChange(this.selectedRole);\n        // }\n        // console.log('rolelist', this.rolelist);\n      } );\n    });\n  }\n\n  onChange(roleValue: RolelistFinal) {\n    this.selectedRole = roleValue;\n   // console.log(this.selectedRole.role$_identifier);\n      this.loginservc.getuserorg(this.selectedRole.userContact, this.selectedRole.mmsaSecurerule).subscribe(data => {\n      let response = data['response'];\n     // console.log(\"Before Sort\",response);\n    \n      let tempresponse = response['data'].sort((a, b) => (a._identifier < b._identifier ? -1 : 1));\n      \n      \n     // this.userorglist = response['data'];\n\n     this.userorglist = tempresponse;\n\n   //  this.userorglist = response['data'].sort(this.sortByProperty(\"organization$_identifie\"));\n  // console.log(\"adad\",response['data']);\n     //this.userorglist= this.sortByKey(response, 'organization$_identifie');\n     //this.userorglist = this.userorglist.map(arr => arr.organization$_identifier..sort((a,b) => a > b));\n      if(this.userorglist.length===1){\n        this.selectedOrg=this.userorglist[0];\n        this.onOrgChange(this.selectedOrg);\n      }\n      // else{\n      //   this.selectedOrg = undefined;\n      //   this.selectedwarehouse = undefined;\n      // }\n      // console.log('userorglist', this.userorglist);\n    });\n  \n  }\n  onOrgChange(orgValue: UserOrglistFinal) {\n    this.selectedOrg = orgValue;\n    this.loginservc.getorgwarehouse(this.selectedOrg.organization).subscribe(data => {\n      const response = data['response'];\n      this.orgwarehouselist = response['data'];\n      this.selectedwarehouse= this.orgwarehouselist.filter(e => e._identifier.includes('01'))[0];\n    });\n  //  console.log('selected org', this.selectedOrg.organization);\n  }\n  onWarehouseChange(warehouse: Warehouse) {\n    this.selectedwarehouse = warehouse;\n    if(this.rolelist.length===1 && this.selectedOrg.organization && warehouse.id ){\n      this.onClick();\n    }\n    //console.log('warehouse selected: ', this.selectedwarehouse._identifier);\n  }\n  onClick() {\n    if (this.selectedRole === undefined) {\n      this.txtmsg = 'Please Select Role';\n      return;\n    }\n    if (this.selectedOrg === undefined) {\n        this.txtmsg = 'Please Select Organization';\n        return;\n    }\n  //   if (this.selectedwarehouse === undefined) {\n  //     this.txtmsg = 'Please Select Warehouse';\n  //     return;\n  // }\n    //console.log('Proceed for BOM Page.', this.selectedwarehouse.id);\n    this.loginservc.selectedprof = {\n      user: this.defaultprofile[0].id,\n      role: this.selectedRole.role,\n      organization: this.selectedOrg.organization,\n      client: this.defaultprofile[0].defaultClient,\n      warehouse: this.selectedwarehouse!==undefined?this.selectedwarehouse.id:''\n    };\n    this.loginservc.setdefaultprofile(this.loginservc.selectedprof);\n    this.router.navigateByUrl('/reportcategory');\n   /* this.txtmsg = 'Selected Organization Are User: ' + this.defaultprofile[0].name + ' Role: '\n    + this.selectedRole.role$_identifier + ' Org: ' + this.selectedOrg.organization$_identifier;\n    \n    // console.log('Proceed for BOM Page.');*/\n  }\n  onLogout(){\n    this.router.navigateByUrl('/login');\n  }\n}\n\n"],"sourceRoot":""}