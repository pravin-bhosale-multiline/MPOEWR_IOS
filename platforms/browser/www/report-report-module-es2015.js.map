{"version":3,"sources":["./node_modules/@angular/elements/fesm2015/elements.js","./src/app/report/report.page.html","./src/app/report/report-routing.module.ts","./src/app/report/report.module.ts","./src/app/report/report.page.scss","./src/app/report/report.page.ts","./src/app/report/report.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEqI;AACzF;AACI;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8BAA8B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sEAAwB;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sEAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kDAAa;AAC9C;AACA,8CAA8C,gEAAS,aAAa,kDAAK;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,WAAW;AACrF;AACA,wCAAwC,oDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,SAAS,uCAAuC;AACtF;AACA;AACA,oEAAoE,+DAAiB;AACrF;AACA;AACA;AACA;AACA,iDAAiD,4DAAc;AAC/D;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kEAAkE,yBAAyB;AAC3F;AACA,gCAAgC,0DAAG,YAAY,4BAA4B;AAC3E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmD;AACnD;;;;;;;;;;;;ACnlBA,oFAAoF,UAAU,+LAA+L,UAAU,6CAA6C,YAAY,qXAAqX,SAAS,kVAAkV,qlB;;;;;;;;;;;;;;;;;;;ACAvgC;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBoC;AAC/B;AACM;AACF;AAEA;AAEqB;AAEvB;AACkB;AAa7D,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAX5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;YACvB,qFAAgB;YAChB,0EAAkB;SACnB;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;ACvB7B,gGAAgG,yCAAyC,GAAG,+CAA+C,gFAAgF,uCAAuC,wCAAwC,sCAAsC,yCAAyC,KAAK,GAAG,gCAAgC,gFAAgF,kCAAkC,KAAK,GAAG,yDAAyD,iCAAiC,yCAAyC,GAAG,0CAA0C,qBAAqB,uBAAuB,KAAK,sBAAsB,oBAAoB,KAAK,GAAG,0CAA0C,qBAAqB,oBAAoB,KAAK,sBAAsB,uBAAuB,KAAK,GAAG,uEAAuE,yBAAyB,gCAAgC,iCAAiC,KAAK,GAAG,6CAA6C,u3H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhpC;AACuB;AACf;AACA;AACK;AACrB;AAEsD;AACV;AAC/B;AACM;AAED;AAEA;AACgB;AAExB;AACK;AAC+B;AACnB;AAcpE,IAAa,UAAU,GAAvB,MAAa,UAAU;IAiErB,YAAoB,KAAqB,EAAU,SAAuB,EACtD,UAA4B,EAAU,MAAc,EAAS,OAAgB,EAC7E,cAA4C,EAAU,GAAiB,EACvE,kBAAsC,EACtC,GAAY,EAAS,UAAsB,EAC3C,QAAkB,EAAS,UAAsB,EACjD,cAAyB,EACxB,SAA0B,EAC1B,QAAkB,EAClB,aAA4B,EAC5B,EAAc;QAVf,UAAK,GAAL,KAAK,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAc;QACtD,eAAU,GAAV,UAAU,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAS;QAC7E,mBAAc,GAAd,cAAc,CAA8B;QAAU,QAAG,GAAH,GAAG,CAAc;QACvE,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,QAAG,GAAH,GAAG,CAAS;QAAS,eAAU,GAAV,UAAU,CAAY;QAC3C,aAAQ,GAAR,QAAQ,CAAU;QAAS,eAAU,GAAV,UAAU,CAAY;QACjD,mBAAc,GAAd,cAAc,CAAW;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QAClB,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAY;QAzE1B,QAAG,GAAG,aAAa;QAK5B,aAAQ,GAAC,QAAQ,CAAC;QAMlB,YAAO,GAAG,OAAO,CAAC;QAKlB,qBAAgB,GAAG,IAAI,CAAC;QACxB,gBAAW,GAAG,IAAI,CAAC;QAGnB,eAAU,GAAG,mEAAU,CAAC;QACxB,kBAAa,GAAG,sEAAa,CAAC;QAGrB,iBAAY,GAAG,EAAE,CAAC;QAClB,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,EAAE,CAAC;QACxB,YAAO,GAAwB;YAC7B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,KAAK;YACb,UAAU,EAAE,KAAK;YACjB,iBAAiB,EAAE,KAAK;YACxB,IAAI,EAAE,KAAK;YACX,YAAY,EAAE,KAAK;YACnB,+BAA+B,EAAE,IAAI;YACrC,oBAAoB,EAAE,IAAI;YAC1B,kBAAkB,EAAE,OAAO;YAC3B,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,KAAK;YACd,mBAAmB,EAAE,IAAI;YACzB,wBAAwB,EAAE,IAAI;YAC9B,iBAAiB,EAAE,WAAW;YAC9B,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,aAAQ,GAAwB;YAC9B,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,KAAK;YACjB,iBAAiB,EAAE,KAAK;YACxB,IAAI,EAAE,KAAK;YACX,YAAY,EAAE,KAAK;YACnB,+BAA+B,EAAE,IAAI;YACrC,oBAAoB,EAAE,IAAI;YAC1B,kBAAkB,EAAE,OAAO;YAC3B,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,KAAK;YACd,mBAAmB,EAAE,IAAI;YACzB,wBAAwB,EAAE,IAAI;YAC9B,iBAAiB,EAAE,WAAW;YAC9B,UAAU,EAAE,KAAK;SAClB,CAAC;QAgBF,WAAM,GAAC,KAAK,CAAC;QAoMb,YAAO,GAAC,KAAK,CAAC;IArMd,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAE7B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAEzD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC;gBAC9E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC;gBACvE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC;gBACvE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC3E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC;gBAC1E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;gBAGjD,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;oBAC9C,uBAAuB;oBAEb,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,SAAS;wBAC3D,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAEvE,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,IAAI,OAAO,CAAC,qBAAqB,EAAC;wBACnE,MAAM,OAAO,GAAG,8EAAmB,CAAC,mGAAoB,EAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,EAAC,CAAC;wBAClF,cAAc,CAAC,MAAM,CAAC,iBAAiB,EAAC,OAAO,CAAC,CAAC;wBACjD,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,IAAI,CAAC;qBACtC;oBACD,IAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,KAAG,SAAS,EAAC;wBAC1D,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;qBAClB;iBACJ;gBAGD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC1E,oCAAoC;oBACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;oBACrC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC1E,IAAI,CAAC,QAAQ,GAAK,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChF,IAAG,IAAI,CAAC,QAAQ,IAAE,KAAK,EAAC;wBACtB,IAAI,CAAC,OAAO,GAAE,KAAK,CAAC;qBACrB;oBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACtE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBACzD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;wBAGhC,qEAAqE;wBAErE,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;4BACpC,yCAAyC;4BACzC,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC;4BAEhD,IAAI,CAAC,EAAE;gCAEL,IAAI,OAAO,CAAC,WAAW,EAAE;oCAEvB,IAAG,OAAO,CAAC,YAAY,KAAG,KAAK,IAAI,OAAO,CAAC,qBAAqB,EAAC;wCAE/D,0BAA0B;wCAE1B,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAC;qCAC/D;yCAAI;wCACH,CAAC,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAC;qCACjE;iCACF;qCAAM;oCACL,CAAC,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAC;iCACjE;gCACD,IAAI,OAAO,CAAC,YAAY,KAAK,KAAK;uCACzB,CAAC,OAAO,CAAC,YAAY,KAAG,KAAK,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE;oCACzE,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;iCAE/E;6BAEF;yBAGF;wBACD,0CAA0C;oBAC5C,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QAGL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;QAC7C,4DAA4D;QAC5D,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,SAAS,EAAE;gBAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,SAAS,EAAE;oBAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAC5C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;iBAC3B;aACF;iBAAM;gBAEL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC5C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAEjD;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YAET,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE9B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,eAAe;QAEb,GAAG;QAED,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;QAE/C,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACtC,iEAAiE;QAChE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,QAAY,EAAE,EAAE;YACtF,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YACtC,yBAAyB;YACxB,IAAG,QAAQ,CAAC,IAAI,IAAE,CAAC,EACrB;gBACA,IAAI,KAAK,GAAE,QAAQ,CAAC,IAAI,CAAC;gBACzB,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;gBACrD,IAAI,QAAQ,GAAC,OAAO;gBACpB,IAAG,IAAI,CAAC,OAAO,KAAG,OAAO,EAAC;oBACxB,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,GAAC,MAAM;oBAC1D,KAAK,GAAC,UAAU;iBACjB;qBAAK,IAAG,IAAI,CAAC,OAAO,KAAG,KAAK,EAAC;oBAC5B,QAAQ,GAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,GAAC,MAAM;oBAC1D,KAAK,GAAC,iBAAiB;iBACxB;qBAAK;oBACJ,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,EAAC,OAAO,EAAC,6BAA6B,CAAC,CAAC;oBAChF,OAAO;iBACR;gBAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAC,SAAS,EAAC,sBAAsB,CAAC,CAAC;gBAChF,sCAAsC;gBACrC,IAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAC;oBACxB,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC5C,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC7B,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;oBACb,CAAC,CAAC,QAAQ,GAAE,QAAQ,CAAC;oBACrB,CAAC,CAAC,KAAK,EAAE,CAAC;oBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;iBAChC;gBACD,IAAI,QAAQ;gBACZ,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC;oBAC1B,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB;iBAC9C;gBACD,IAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAC;oBAC7B,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB;iBACjD;gBACH,8DAA8D;gBAC5D,IAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAC;oBAEzB,IAAI,CAAC,UAAU,CAAC,SAAS,CACvB,QAAQ,EACR,QAAQ,EACR,IAAI,EACJ;wBACE,OAAO,EAAE,IAAI;qBACd,CACF,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;wBACb,wBAAwB;wBACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAC3B,QAAQ,GAAE,QAAQ,EAClB,KAAK,CACN,CAAC,KAAK,CAAC,CAAC,GAAG,EAAC,EAAE;4BACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACnB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC;yBACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;wBACjB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAC,OAAO,EAAC,KAAK,CAAC,CAAC;wBAExD,qBAAqB;oBACvB,CAAC,CAAC,CAAC;oBAAA,CAAC;iBACH;aAEF;iBACG;gBACJ,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAC,OAAO,EAAC,sBAAsB,CAAC,CAAC;aAC5E;QAEG,CAAC,EAAE,KAAK,CAAC,EAAE;YAET,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,WAAW;;YACf,IAAI;gBACF,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;gBACd,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAC,CAAC,CAAC;gBAGvC,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;gBAExF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAE9B,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;aAC1C;YAAC,OAAO,KAAK,EAAE;gBAEd,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAC,OAAO,EAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAChE;QACH,CAAC;KAAA;IACD,mBAAmB;IACnB,UAAU;IAEV,oDAAoD;IACpD,uEAAuE;IAEvE,qGAAqG;IACrG,4IAA4I;IAG5I,gDAAgD;IAChD,2GAA2G;IAC3G,6BAA6B;IAC7B,yCAAyC;IACzC,oHAAoH;IACpH,iCAAiC;IACjC,4CAA4C;IAC5C,uDAAuD;IACvD,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;IAChB,oBAAoB;IACpB,mHAAmH;IACnH,mCAAmC;IACnC,8CAA8C;IAC9C,0HAA0H;IAC1H,yCAAyC;IACzC,oDAAoD;IACpD,+DAA+D;IAC/D,2BAA2B;IAC3B,2BAA2B;IAC3B,qBAAqB;IACrB,qBAAqB;IACrB,eAAe;IACf,eAAe;IACf,iBAAiB;IACjB,+CAA+C;IAC/C,WAAW;IACX,sBAAsB;IACtB,0BAA0B;IAC1B,MAAM;IACN,IAAI;IACJ,QAAQ,CAAC,UAAU,EAAC,KAAK;QAEvB,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,IAAK,UAAU,CAAC,YAAY,KAAG,KAAK,EAAE;YAC1G,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACzG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;gBACnE,iCAAiC;gBACjC,gCAAgC;gBAChC,sFAAsF;gBACtF,YAAY;gBACZ,IAAI;gBACL,mDAAmD;gBAChD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBAC1E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBACvE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBACzD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;wBAChC,8BAA8B;wBAE9B,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;4BACpC,yCAAyC;4BACzC,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC;4BAEhD,IAAI,CAAC,EAAE;gCAEL,IAAI,OAAO,CAAC,WAAW,EAAE;oCACvB,IAAG,OAAO,CAAC,YAAY,KAAG,KAAK,IAAI,OAAO,CAAC,qBAAqB,EAAC;wCAE/D,0BAA0B;wCAE1B,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAC;qCAC/D;yCAAI;wCACH,CAAC,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAC;qCACjE;iCACF;qCAAM;oCACL,CAAC,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAC;iCACjE;gCACD,IAAI,OAAO,CAAC,YAAY,KAAK,KAAK;uCACzB,CAAC,OAAO,CAAC,YAAY,KAAG,KAAK,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE;oCACzE,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;iCAE/E;6BAGF;yBAGF;oBAEH,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;SACF;IAEH,CAAC;IACD,QAAQ,CAAC,UAAU,EAAC,KAAK;QACvB,4CAA4C;QAC5C,uBAAuB;QACvB,wFAAwF;QACxF,qCAAqC;QACrC,IAAI;QACL,0DAA0D;QACzD,+BAA+B;QAC/B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,kEAAkE;QAClE,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;YACpC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;SAClE;IAEH,CAAC;IACD,UAAU,CAAC,WAAW,EAAE,KAAK;QAC3B,sBAAsB;QACtB,2BAA2B;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;IAEtF,CAAC;IACD,+CAA+C;IAC/C,UAAU;IAEV,gDAAgD;IAChD,8CAA8C;IAC9C,kBAAkB;IAClB,2CAA2C;IAC3C,uEAAuE;IACvE,8CAA8C;IAC9C,qDAAqD;IACrD,iDAAiD;IACjD,mBAAmB;IACnB,UAAU;IACV,yEAAyE;IACzE,iGAAiG;IACjG,sDAAsD;IACtD,gDAAgD;IAChD,oIAAoI;IAEpI,iFAAiF;IACjF,wBAAwB;IACxB,yDAAyD;IACzD,8CAA8C;IAC9C,qEAAqE;IACrE,WAAW;IAEX,kBAAkB;IAClB,kCAAkC;IAElC,qCAAqC;IACrC,wEAAwE;IACxE,qEAAqE;IACrE,oBAAoB;IACpB,qEAAqE;IACrE,aAAa;IACb,6CAA6C;IAC7C,oFAAoF;IACpF,kEAAkE;IAElE,0GAA0G;IAC1G,qGAAqG;IACrG,4EAA4E;IAC5E,iBAAiB;IAGjB,WAAW;IAEX,sBAAsB;IACtB,oCAAoC;IACpC,MAAM;IACN,IAAI;IACE,QAAQ,CAAC,OAAe;;YAE5B,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5F,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,OAAO,GAAG,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;gBACvF,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1B,wDAAwD;oBACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;oBAExD,yEAAyE;oBACzE,kDAAkD;oBAClD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC5C;gBACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;QAMH,CAAC;KAAA;IAEa,QAAQ,CAAC,KAAa;;YAElC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAC,KAAK,CAAC;YAC3C,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;YAC3F,MAAM,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC;KAAA;IACK,YAAY,CAAC,MAAc,EAAE,SAAiB,EAAE,OAAe,EAAC,KAAK;;YACzE,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACxC,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,CAAC;wBACR,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;wBAC9B,CAAC;qBACD,EAAC;wBACD,IAAI,EAAE,MAAM;wBACZ,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE;4BACd,IAAI,QAAQ,CAAC;4BACb,IAAG,IAAI,CAAC,QAAQ,IAAE,KAAK,EAAC;gCACtB,QAAQ,GAAG,iBAAiB,CAAC;6BAC9B;iCAAM;gCACL,QAAQ,GAAG,UAAU,CAAC;6BACvB;4BACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC;iCAC5C,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;iCACzC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpD,CAAC;qBACF,CAAC;aACH,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC;YAC/D,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;CAEF;;YA5c4B,8DAAc;YAAqB,sEAAY;YAC1C,yEAAgB;YAAkB,sDAAM;YAAkB,sDAAO;YAC7D,0GAA4B;YAAe,6EAAY;YACnD,yFAAkB;YACjC,mEAAO;YAAqB,4DAAU;YACjC,wDAAQ;YAAqB,yEAAU;YACjC,iEAAS;YACb,+DAAe;YAChB,sDAAQ;YACH,6DAAa;YACxB,wDAAU;;AA3ExB,UAAU;IALtB,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,0IAAiC;;KAElC,CAAC;2EAkE2B,8DAAc,EAAqB,sEAAY;QAC1C,yEAAgB,EAAkB,sDAAM,EAAkB,sDAAO;QAC7D,0GAA4B,EAAe,6EAAY;QACnD,yFAAkB;QACjC,mEAAO,EAAqB,4DAAU;QACjC,wDAAQ,EAAqB,yEAAU;QACjC,iEAAS;QACb,+DAAe;QAChB,sDAAQ;QACH,6DAAa;QACxB,wDAAU;GA3ExB,UAAU,CA6gBtB;AA7gBsB;;;;;;;;;;;;;;;;;;;;;AClC+D;AAC3C;AACoB;AACD;AAK9D,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,YAAmB,IAAgB,EAAQ,SAA0B,EAAS,WAAoC;QAA/F,SAAI,GAAJ,IAAI,CAAY;QAAQ,cAAS,GAAT,SAAS,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAyB;IAAI,CAAC;IAGvH,WAAW,CAAC,IAAQ;QAClB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAY;QAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAa;QAChD,MAAM,IAAI,GAAC,IAAI,CAAC,KAAK,GAAC,GAAG,GAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAC,kBAAkB;gBACjC,QAAQ,EAAC,kBAAkB;gBAC3B,eAAe,EAAC,QAAQ,GAAC,IAAI;aAC5B,CAAC;SACH,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,wCAAwC,EAAC,IAAI,EAAC,WAAW,CAAC,CAAC;IAEtH,CAAC;CAGF;;YAnB0B,+DAAU;YAAkB,yEAAgB;YAAqB,mGAAwB;;AAFvG,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAGyB,+DAAU,EAAkB,yEAAgB,EAAqB,mGAAwB;GAFvG,aAAa,CAqBzB;AArByB","file":"report-report-module-es2015.js","sourcesContent":["/**\n * @license Angular v12.2.12\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ComponentFactoryResolver, NgZone, Injector, ChangeDetectorRef, ApplicationRef, SimpleChange, Version } from '@angular/core';\nimport { ReplaySubject, merge } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide methods for scheduling the execution of a callback.\n */\nconst scheduler = {\n    /**\n     * Schedule a callback to be called after some delay.\n     *\n     * Returns a function that when executed will cancel the scheduled function.\n     */\n    schedule(taskFn, delay) {\n        const id = setTimeout(taskFn, delay);\n        return () => clearTimeout(id);\n    },\n    /**\n     * Schedule a callback to be called before the next render.\n     * (If `window.requestAnimationFrame()` is not available, use `scheduler.schedule()` instead.)\n     *\n     * Returns a function that when executed will cancel the scheduled function.\n     */\n    scheduleBeforeRender(taskFn) {\n        // TODO(gkalpak): Implement a better way of accessing `requestAnimationFrame()`\n        //                (e.g. accounting for vendor prefix, SSR-compatibility, etc).\n        if (typeof window === 'undefined') {\n            // For SSR just schedule immediately.\n            return scheduler.schedule(taskFn, 0);\n        }\n        if (typeof window.requestAnimationFrame === 'undefined') {\n            const frameMs = 16;\n            return scheduler.schedule(taskFn, frameMs);\n        }\n        const id = window.requestAnimationFrame(taskFn);\n        return () => window.cancelAnimationFrame(id);\n    },\n};\n/**\n * Convert a camelCased string to kebab-cased.\n */\nfunction camelToDashCase(input) {\n    return input.replace(/[A-Z]/g, char => `-${char.toLowerCase()}`);\n}\n/**\n * Create a `CustomEvent` (even on browsers where `CustomEvent` is not a constructor).\n */\nfunction createCustomEvent(doc, name, detail) {\n    const bubbles = false;\n    const cancelable = false;\n    // On IE11, `CustomEvent` is not a constructor.\n    if (typeof CustomEvent !== 'function') {\n        const event = doc.createEvent('CustomEvent');\n        event.initCustomEvent(name, bubbles, cancelable, detail);\n        return event;\n    }\n    return new CustomEvent(name, { bubbles, cancelable, detail });\n}\n/**\n * Check whether the input is an `Element`.\n */\nfunction isElement(node) {\n    return !!node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Check whether the input is a function.\n */\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * Convert a kebab-cased string to camelCased.\n */\nfunction kebabToCamelCase(input) {\n    return input.replace(/-([a-z\\d])/g, (_, char) => char.toUpperCase());\n}\nlet _matches;\n/**\n * Check whether an `Element` matches a CSS selector.\n * NOTE: this is duplicated from @angular/upgrade, and can\n * be consolidated in the future\n */\nfunction matchesSelector(el, selector) {\n    if (!_matches) {\n        const elProto = Element.prototype;\n        _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n            elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n    }\n    return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nfunction strictEquals(value1, value2) {\n    return value1 === value2 || (value1 !== value1 && value2 !== value2);\n}\n/** Gets a map of default set of attributes to observe and the properties they affect. */\nfunction getDefaultAttributeToPropertyInputs(inputs) {\n    const attributeToPropertyInputs = {};\n    inputs.forEach(({ propName, templateName }) => {\n        attributeToPropertyInputs[camelToDashCase(templateName)] = propName;\n    });\n    return attributeToPropertyInputs;\n}\n/**\n * Gets a component's set of inputs. Uses the injector to get the component factory where the inputs\n * are defined.\n */\nfunction getComponentInputs(component, injector) {\n    const componentFactoryResolver = injector.get(ComponentFactoryResolver);\n    const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n    return componentFactory.inputs;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction extractProjectableNodes(host, ngContentSelectors) {\n    const nodes = host.childNodes;\n    const projectableNodes = ngContentSelectors.map(() => []);\n    let wildcardIndex = -1;\n    ngContentSelectors.some((selector, i) => {\n        if (selector === '*') {\n            wildcardIndex = i;\n            return true;\n        }\n        return false;\n    });\n    for (let i = 0, ii = nodes.length; i < ii; ++i) {\n        const node = nodes[i];\n        const ngContentIndex = findMatchingIndex(node, ngContentSelectors, wildcardIndex);\n        if (ngContentIndex !== -1) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\nfunction findMatchingIndex(node, selectors, defaultIndex) {\n    let matchingIndex = defaultIndex;\n    if (isElement(node)) {\n        selectors.some((selector, i) => {\n            if ((selector !== '*') && matchesSelector(node, selector)) {\n                matchingIndex = i;\n                return true;\n            }\n            return false;\n        });\n    }\n    return matchingIndex;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in milliseconds to wait before destroying the component ref when disconnected. */\nconst DESTROY_DELAY = 10;\n/**\n * Factory that creates new ComponentNgElementStrategy instance. Gets the component factory with the\n * constructor's injector's factory resolver and passes that factory to each strategy.\n *\n * @publicApi\n */\nclass ComponentNgElementStrategyFactory {\n    constructor(component, injector) {\n        this.componentFactory =\n            injector.get(ComponentFactoryResolver).resolveComponentFactory(component);\n    }\n    create(injector) {\n        return new ComponentNgElementStrategy(this.componentFactory, injector);\n    }\n}\n/**\n * Creates and destroys a component ref using a component factory and handles change detection\n * in response to input changes.\n *\n * @publicApi\n */\nclass ComponentNgElementStrategy {\n    constructor(componentFactory, injector) {\n        this.componentFactory = componentFactory;\n        this.injector = injector;\n        // Subject of `NgElementStrategyEvent` observables corresponding to the component's outputs.\n        this.eventEmitters = new ReplaySubject(1);\n        /** Merged stream of the component's output events. */\n        this.events = this.eventEmitters.pipe(switchMap(emitters => merge(...emitters)));\n        /** Reference to the component that was created on connect. */\n        this.componentRef = null;\n        /** Reference to the component view's `ChangeDetectorRef`. */\n        this.viewChangeDetectorRef = null;\n        /**\n         * Changes that have been made to component inputs since the last change detection run.\n         * (NOTE: These are only recorded if the component implements the `OnChanges` interface.)\n         */\n        this.inputChanges = null;\n        /** Whether changes have been made to component inputs since the last change detection run. */\n        this.hasInputChanges = false;\n        /** Whether the created component implements the `OnChanges` interface. */\n        this.implementsOnChanges = false;\n        /** Whether a change detection has been scheduled to run on the component. */\n        this.scheduledChangeDetectionFn = null;\n        /** Callback function that when called will cancel a scheduled destruction on the component. */\n        this.scheduledDestroyFn = null;\n        /** Initial input values that were set before the component was created. */\n        this.initialInputValues = new Map();\n        /**\n         * Set of component inputs that have not yet changed, i.e. for which `recordInputChange()` has not\n         * fired.\n         * (This helps detect the first change of an input, even if it is explicitly set to `undefined`.)\n         */\n        this.unchangedInputs = new Set(this.componentFactory.inputs.map(({ propName }) => propName));\n        /** Service for setting zone context. */\n        this.ngZone = this.injector.get(NgZone);\n        /** The zone the element was created in or `null` if Zone.js is not loaded. */\n        this.elementZone = (typeof Zone === 'undefined') ? null : this.ngZone.run(() => Zone.current);\n    }\n    /**\n     * Initializes a new component if one has not yet been created and cancels any scheduled\n     * destruction.\n     */\n    connect(element) {\n        this.runInZone(() => {\n            // If the element is marked to be destroyed, cancel the task since the component was\n            // reconnected\n            if (this.scheduledDestroyFn !== null) {\n                this.scheduledDestroyFn();\n                this.scheduledDestroyFn = null;\n                return;\n            }\n            if (this.componentRef === null) {\n                this.initializeComponent(element);\n            }\n        });\n    }\n    /**\n     * Schedules the component to be destroyed after some small delay in case the element is just\n     * being moved across the DOM.\n     */\n    disconnect() {\n        this.runInZone(() => {\n            // Return if there is no componentRef or the component is already scheduled for destruction\n            if (this.componentRef === null || this.scheduledDestroyFn !== null) {\n                return;\n            }\n            // Schedule the component to be destroyed after a small timeout in case it is being\n            // moved elsewhere in the DOM\n            this.scheduledDestroyFn = scheduler.schedule(() => {\n                if (this.componentRef !== null) {\n                    this.componentRef.destroy();\n                    this.componentRef = null;\n                    this.viewChangeDetectorRef = null;\n                }\n            }, DESTROY_DELAY);\n        });\n    }\n    /**\n     * Returns the component property value. If the component has not yet been created, the value is\n     * retrieved from the cached initialization values.\n     */\n    getInputValue(property) {\n        return this.runInZone(() => {\n            if (this.componentRef === null) {\n                return this.initialInputValues.get(property);\n            }\n            return this.componentRef.instance[property];\n        });\n    }\n    /**\n     * Sets the input value for the property. If the component has not yet been created, the value is\n     * cached and set when the component is created.\n     */\n    setInputValue(property, value) {\n        this.runInZone(() => {\n            if (this.componentRef === null) {\n                this.initialInputValues.set(property, value);\n                return;\n            }\n            // Ignore the value if it is strictly equal to the current value, except if it is `undefined`\n            // and this is the first change to the value (because an explicit `undefined` _is_ strictly\n            // equal to not having a value set at all, but we still need to record this as a change).\n            if (strictEquals(value, this.getInputValue(property)) &&\n                !((value === undefined) && this.unchangedInputs.has(property))) {\n                return;\n            }\n            // Record the changed value and update internal state to reflect the fact that this input has\n            // changed.\n            this.recordInputChange(property, value);\n            this.unchangedInputs.delete(property);\n            this.hasInputChanges = true;\n            // Update the component instance and schedule change detection.\n            this.componentRef.instance[property] = value;\n            this.scheduleDetectChanges();\n        });\n    }\n    /**\n     * Creates a new component through the component factory with the provided element host and\n     * sets up its initial inputs, listens for outputs changes, and runs an initial change detection.\n     */\n    initializeComponent(element) {\n        const childInjector = Injector.create({ providers: [], parent: this.injector });\n        const projectableNodes = extractProjectableNodes(element, this.componentFactory.ngContentSelectors);\n        this.componentRef = this.componentFactory.create(childInjector, projectableNodes, element);\n        this.viewChangeDetectorRef = this.componentRef.injector.get(ChangeDetectorRef);\n        this.implementsOnChanges = isFunction(this.componentRef.instance.ngOnChanges);\n        this.initializeInputs();\n        this.initializeOutputs(this.componentRef);\n        this.detectChanges();\n        const applicationRef = this.injector.get(ApplicationRef);\n        applicationRef.attachView(this.componentRef.hostView);\n    }\n    /** Set any stored initial inputs on the component's properties. */\n    initializeInputs() {\n        this.componentFactory.inputs.forEach(({ propName }) => {\n            if (this.initialInputValues.has(propName)) {\n                // Call `setInputValue()` now that the component has been instantiated to update its\n                // properties and fire `ngOnChanges()`.\n                this.setInputValue(propName, this.initialInputValues.get(propName));\n            }\n        });\n        this.initialInputValues.clear();\n    }\n    /** Sets up listeners for the component's outputs so that the events stream emits the events. */\n    initializeOutputs(componentRef) {\n        const eventEmitters = this.componentFactory.outputs.map(({ propName, templateName }) => {\n            const emitter = componentRef.instance[propName];\n            return emitter.pipe(map(value => ({ name: templateName, value })));\n        });\n        this.eventEmitters.next(eventEmitters);\n    }\n    /** Calls ngOnChanges with all the inputs that have changed since the last call. */\n    callNgOnChanges(componentRef) {\n        if (!this.implementsOnChanges || this.inputChanges === null) {\n            return;\n        }\n        // Cache the changes and set inputChanges to null to capture any changes that might occur\n        // during ngOnChanges.\n        const inputChanges = this.inputChanges;\n        this.inputChanges = null;\n        componentRef.instance.ngOnChanges(inputChanges);\n    }\n    /**\n     * Marks the component view for check, if necessary.\n     * (NOTE: This is required when the `ChangeDetectionStrategy` is set to `OnPush`.)\n     */\n    markViewForCheck(viewChangeDetectorRef) {\n        if (this.hasInputChanges) {\n            this.hasInputChanges = false;\n            viewChangeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Schedules change detection to run on the component.\n     * Ignores subsequent calls if already scheduled.\n     */\n    scheduleDetectChanges() {\n        if (this.scheduledChangeDetectionFn) {\n            return;\n        }\n        this.scheduledChangeDetectionFn = scheduler.scheduleBeforeRender(() => {\n            this.scheduledChangeDetectionFn = null;\n            this.detectChanges();\n        });\n    }\n    /**\n     * Records input changes so that the component receives SimpleChanges in its onChanges function.\n     */\n    recordInputChange(property, currentValue) {\n        // Do not record the change if the component does not implement `OnChanges`.\n        if (!this.implementsOnChanges) {\n            return;\n        }\n        if (this.inputChanges === null) {\n            this.inputChanges = {};\n        }\n        // If there already is a change, modify the current value to match but leave the values for\n        // `previousValue` and `isFirstChange`.\n        const pendingChange = this.inputChanges[property];\n        if (pendingChange) {\n            pendingChange.currentValue = currentValue;\n            return;\n        }\n        const isFirstChange = this.unchangedInputs.has(property);\n        const previousValue = isFirstChange ? undefined : this.getInputValue(property);\n        this.inputChanges[property] = new SimpleChange(previousValue, currentValue, isFirstChange);\n    }\n    /** Runs change detection on the component. */\n    detectChanges() {\n        if (this.componentRef === null) {\n            return;\n        }\n        this.callNgOnChanges(this.componentRef);\n        this.markViewForCheck(this.viewChangeDetectorRef);\n        this.componentRef.changeDetectorRef.detectChanges();\n    }\n    /** Runs in the angular zone, if present. */\n    runInZone(fn) {\n        return (this.elementZone && Zone.current !== this.elementZone) ? this.ngZone.run(fn) : fn();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Implements the functionality needed for a custom element.\n *\n * @publicApi\n */\nclass NgElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * A subscription to change, connect, and disconnect events in the custom element.\n         */\n        this.ngElementEventsSubscription = null;\n    }\n}\n/**\n *  @description Creates a custom element class based on an Angular component.\n *\n * Builds a class that encapsulates the functionality of the provided component and\n * uses the configuration information to provide more context to the class.\n * Takes the component factory's inputs and outputs to convert them to the proper\n * custom element API and add hooks to input changes.\n *\n * The configuration's injector is the initial injector set on the class,\n * and used by default for each created instance.This behavior can be overridden with the\n * static property to affect all newly created instances, or as a constructor argument for\n * one-off creations.\n *\n * @see [Angular Elements Overview](guide/elements \"Turning Angular components into custom elements\")\n *\n * @param component The component to transform.\n * @param config A configuration that provides initialization information to the created class.\n * @returns The custom-element construction class, which can be registered with\n * a browser's `CustomElementRegistry`.\n *\n * @publicApi\n */\nfunction createCustomElement(component, config) {\n    const inputs = getComponentInputs(component, config.injector);\n    const strategyFactory = config.strategyFactory || new ComponentNgElementStrategyFactory(component, config.injector);\n    const attributeToPropertyInputs = getDefaultAttributeToPropertyInputs(inputs);\n    class NgElementImpl extends NgElement {\n        constructor(injector) {\n            super();\n            this.injector = injector;\n        }\n        get ngElementStrategy() {\n            // NOTE:\n            // Some polyfills (e.g. `document-register-element`) do not call the constructor, therefore\n            // it is not safe to set `ngElementStrategy` in the constructor and assume it will be\n            // available inside the methods.\n            //\n            // TODO(andrewseguin): Add e2e tests that cover cases where the constructor isn't called. For\n            // now this is tested using a Google internal test suite.\n            if (!this._ngElementStrategy) {\n                const strategy = this._ngElementStrategy =\n                    strategyFactory.create(this.injector || config.injector);\n                // Re-apply pre-existing input values (set as properties on the element) through the\n                // strategy.\n                inputs.forEach(({ propName }) => {\n                    if (!this.hasOwnProperty(propName)) {\n                        // No pre-existing value for `propName`.\n                        return;\n                    }\n                    // Delete the property from the instance and re-apply it through the strategy.\n                    const value = this[propName];\n                    delete this[propName];\n                    strategy.setInputValue(propName, value);\n                });\n            }\n            return this._ngElementStrategy;\n        }\n        attributeChangedCallback(attrName, oldValue, newValue, namespace) {\n            const propName = attributeToPropertyInputs[attrName];\n            this.ngElementStrategy.setInputValue(propName, newValue);\n        }\n        connectedCallback() {\n            // For historical reasons, some strategies may not have initialized the `events` property\n            // until after `connect()` is run. Subscribe to `events` if it is available before running\n            // `connect()` (in order to capture events emitted during initialization), otherwise subscribe\n            // afterwards.\n            //\n            // TODO: Consider deprecating/removing the post-connect subscription in a future major version\n            //       (e.g. v11).\n            let subscribedToEvents = false;\n            if (this.ngElementStrategy.events) {\n                // `events` are already available: Subscribe to it asap.\n                this.subscribeToEvents();\n                subscribedToEvents = true;\n            }\n            this.ngElementStrategy.connect(this);\n            if (!subscribedToEvents) {\n                // `events` were not initialized before running `connect()`: Subscribe to them now.\n                // The events emitted during the component initialization have been missed, but at least\n                // future events will be captured.\n                this.subscribeToEvents();\n            }\n        }\n        disconnectedCallback() {\n            // Not using `this.ngElementStrategy` to avoid unnecessarily creating the `NgElementStrategy`.\n            if (this._ngElementStrategy) {\n                this._ngElementStrategy.disconnect();\n            }\n            if (this.ngElementEventsSubscription) {\n                this.ngElementEventsSubscription.unsubscribe();\n                this.ngElementEventsSubscription = null;\n            }\n        }\n        subscribeToEvents() {\n            // Listen for events from the strategy and dispatch them as custom events.\n            this.ngElementEventsSubscription = this.ngElementStrategy.events.subscribe(e => {\n                const customEvent = createCustomEvent(this.ownerDocument, e.name, e.value);\n                this.dispatchEvent(customEvent);\n            });\n        }\n    }\n    // Work around a bug in closure typed optimizations(b/79557487) where it is not honoring static\n    // field externs. So using quoted access to explicitly prevent renaming.\n    NgElementImpl['observedAttributes'] = Object.keys(attributeToPropertyInputs);\n    // Add getters and setters to the prototype for each property input.\n    inputs.forEach(({ propName }) => {\n        Object.defineProperty(NgElementImpl.prototype, propName, {\n            get() {\n                return this.ngElementStrategy.getInputValue(propName);\n            },\n            set(newValue) {\n                this.ngElementStrategy.setInputValue(propName, newValue);\n            },\n            configurable: true,\n            enumerable: true,\n        });\n    });\n    return NgElementImpl;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('12.2.12');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgElement, VERSION, createCustomElement };\n//# sourceMappingURL=elements.js.map\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>{{txtTitle}}</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"reportcategory\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-text color=\\\"danger\\\">{{txterror}}</ion-text>\\n  <ion-text color=\\\"warning\\\">{{txtmessage}}</ion-text>\\n</ion-header>\\n\\n<ion-content>\\n  <div [innerHTML]=\\\"innerhtml\\\"></div>\\n  <ion-row>\\n    <ion-col class=\\\"ion-text-right\\\">\\n      <ion-button expand=\\\"full\\\" (click)=\\\"onClickEmail()\\\">\\n          Email\\n      </ion-button>\\n    </ion-col>\\n    <ion-col class=\\\"ion-text-left\\\">\\n      <ion-button expand=\\\"full\\\" (click)=\\\"onClickExcelPDF()\\\">\\n          {{btnName}}\\n      </ion-button>\\n    </ion-col>\\n    <ion-col *ngIf=\\\"isview\\\" class=\\\"ion-text-right\\\">\\n      <ion-button expand=\\\"full\\\" (click)=\\\"onClickView()\\\">\\n          View\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-card *ngIf=\\\"onclick\\\">\\n    <ngx-datatable\\n        class=\\\"bootstrap resizeable\\\" style=\\\"height: 820px; overflow-y:visible\\\"\\n        [rows]=\\\"rows\\\"\\n        [loadingIndicator]=\\\"loadingIndicator\\\"\\n        [columns]=\\\"columns\\\"\\n        [columnMode]=\\\"ColumnMode.force\\\"\\n        [headerHeight]=\\\"headerHeight\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        [footerHeight]=\\\"50\\\"\\n        [columnMode]=\\\"'froce'\\\"\\n        [scrollbarH]=\\\"true\\\"\\n        [scrollbarV]=\\\"true\\\"\\n        [selectionType]=\\\"SelectionType.single\\\"\\n        [reorderable]=\\\"reorderable\\\"\\n        (scroll)=\\\"onScroll($event.offsetY)\\\"\\n        [swapColumns]=\\\"true\\\">\\n      </ngx-datatable>\\n  </ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReportPage } from './report.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportPageRoutingModule {}\n","import { ComponentsModule } from 'src/app/components/components.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportPageRoutingModule } from './report-routing.module';\n\nimport { ReportPage } from './report.page';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReportPageRoutingModule,\n    ComponentsModule,\n    NgxDatatableModule\n  ],\n  declarations: [ReportPage]\n})\nexport class ReportPageModule {}\n","module.exports = \"::ng-deep.ngx-datatable.bootstrap .datatable-body .datatable-body-row.active {\\n  background-color: #F39E20 !important;\\n}\\n\\n@media only screen and (min-width: 481px) {\\n  ::ng-deep.ngx-datatable.bootstrap .datatable-header .datatable-header-cell {\\n    padding-left: 0.75rem !important;\\n    padding-right: 0.25rem !important;\\n    padding-top: 0.25rem !important;\\n    padding-bottom: 0.25rem !important;\\n  }\\n}\\n\\n@media (min-width: 1281px) {\\n  ::ng-deep.ngx-datatable.bootstrap .datatable-header .datatable-header-cell {\\n    padding: 0.75rem !important;\\n  }\\n}\\n\\n::ng-deep.ngx-datatable.bootstrap .datatable-header {\\n  font-weight: bold !important;\\n  background-color: #F39E20 !important;\\n}\\n\\n@media screen and (max-width: 800px) {\\n  .desktop-hidden {\\n    display: initial;\\n  }\\n\\n  .mobile-hidden {\\n    display: none;\\n  }\\n}\\n\\n@media screen and (min-width: 800px) {\\n  .desktop-hidden {\\n    display: none;\\n  }\\n\\n  .mobile-hidden {\\n    display: initial;\\n  }\\n}\\n\\n@media only screen and (min-height: 768px) and (min-width: 768px) {\\n  .sc-ion-modal-ios-h {\\n    --width: 900px !important;\\n    --height: 626px !important;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9yZXBvcnQvcmVwb3J0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvcmVwb3J0L3JlcG9ydC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQ0FBQTtBQ0NKOztBREVBO0VBQ0k7SUFFSSxnQ0FBQTtJQUNBLGlDQUFBO0lBQ0EsK0JBQUE7SUFDQSxrQ0FBQTtFQ0FOO0FBQ0Y7O0FER0E7RUFFSTtJQUVBLDJCQUFBO0VDSEY7QUFDRjs7QURRQTtFQUNFLDRCQUFBO0VBQ0Esb0NBQUE7QUNORjs7QURVQTtFQUNJO0lBQ0UsZ0JBQUE7RUNQSjs7RURTRTtJQUNFLGFBQUE7RUNOSjtBQUNGOztBRFFFO0VBQ0U7SUFDRSxhQUFBO0VDTko7O0VEUUU7SUFDRSxnQkFBQTtFQ0xKO0FBQ0Y7O0FET0U7RUFDRTtJQUNFLHlCQUFBO0lBQ0EsMEJBQUE7RUNMSjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcmVwb3J0L3JlcG9ydC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAubmd4LWRhdGF0YWJsZS5ib290c3RyYXAgLmRhdGF0YWJsZS1ib2R5IC5kYXRhdGFibGUtYm9keS1yb3cuYWN0aXZle1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGMzlFMjAgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjQ4MXB4KSB7XG4gICAgOjpuZy1kZWVwLm5neC1kYXRhdGFibGUuYm9vdHN0cmFwIC5kYXRhdGFibGUtaGVhZGVyIC5kYXRhdGFibGUtaGVhZGVyLWNlbGx7XG5cbiAgICAgICAgcGFkZGluZy1sZWZ0OjAuNzVyZW0gIWltcG9ydGFudDsgXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDAuMjVyZW0gIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZy10b3A6IDAwLjI1cmVtICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwMC4yNXJlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgXG4gICAgIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOjEyODFweCkgeyAgXG4gICAgXG4gICAgOjpuZy1kZWVwLm5neC1kYXRhdGFibGUuYm9vdHN0cmFwIC5kYXRhdGFibGUtaGVhZGVyIC5kYXRhdGFibGUtaGVhZGVyLWNlbGx7XG5cbiAgICBwYWRkaW5nOiAwLjc1cmVtICFpbXBvcnRhbnQ7XG4gICAvLyB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgICBcbiBcbiB9fVxuXG46Om5nLWRlZXAubmd4LWRhdGF0YWJsZS5ib290c3RyYXAgLmRhdGF0YWJsZS1oZWFkZXJ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGMzlFMjAgIWltcG9ydGFudDtcbn1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5kZXNrdG9wLWhpZGRlbiB7XG4gICAgICBkaXNwbGF5OiBpbml0aWFsO1xuICAgIH1cbiAgICAubW9iaWxlLWhpZGRlbiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA4MDBweCkge1xuICAgIC5kZXNrdG9wLWhpZGRlbiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAubW9iaWxlLWhpZGRlbiB7XG4gICAgICBkaXNwbGF5OiBpbml0aWFsO1xuICAgIH1cbiAgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4taGVpZ2h0OiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAuc2MtaW9uLW1vZGFsLWlvcy1oe1xuICAgICAgLS13aWR0aDogOTAwcHggIWltcG9ydGFudDtcbiAgICAgIC0taGVpZ2h0OiA2MjZweCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfSIsIjo6bmctZGVlcC5uZ3gtZGF0YXRhYmxlLmJvb3RzdHJhcCAuZGF0YXRhYmxlLWJvZHkgLmRhdGF0YWJsZS1ib2R5LXJvdy5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjM5RTIwICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDgxcHgpIHtcbiAgOjpuZy1kZWVwLm5neC1kYXRhdGFibGUuYm9vdHN0cmFwIC5kYXRhdGFibGUtaGVhZGVyIC5kYXRhdGFibGUtaGVhZGVyLWNlbGwge1xuICAgIHBhZGRpbmctbGVmdDogMC43NXJlbSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6IDAuMjVyZW0gIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLXRvcDogMC4yNXJlbSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjgxcHgpIHtcbiAgOjpuZy1kZWVwLm5neC1kYXRhdGFibGUuYm9vdHN0cmFwIC5kYXRhdGFibGUtaGVhZGVyIC5kYXRhdGFibGUtaGVhZGVyLWNlbGwge1xuICAgIHBhZGRpbmc6IDAuNzVyZW0gIWltcG9ydGFudDtcbiAgfVxufVxuOjpuZy1kZWVwLm5neC1kYXRhdGFibGUuYm9vdHN0cmFwIC5kYXRhdGFibGUtaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YzOUUyMCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAuZGVza3RvcC1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IGluaXRpYWw7XG4gIH1cblxuICAubW9iaWxlLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgLmRlc2t0b3AtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLm1vYmlsZS1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IGluaXRpYWw7XG4gIH1cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1oZWlnaHQ6IDc2OHB4KSBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNjLWlvbi1tb2RhbC1pb3MtaCB7XG4gICAgLS13aWR0aDogOTAwcHggIWltcG9ydGFudDtcbiAgICAtLWhlaWdodDogNjI2cHggIWltcG9ydGFudDtcbiAgfVxufSJdfQ== */\"","import { ReportService } from './report.service';\nimport { Component, Injector, OnInit, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginauthService } from '../login/loginauth.service';\nimport { Storage } from '@ionic/storage';\nimport { Loginresponse } from '../login/login.page';\nimport { SelectorsingleserviceService } from '../selectorsingle/selectorsingleservice.service';\nimport { InAppBrowser, InAppBrowserOptions } from '@ionic-native/in-app-browser/ngx';\nimport { Message } from 'src/provider/message-helper';\nimport { File as NativeFile } from '@ionic-native/file/ngx';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { IOSFilePicker } from '@ionic-native/file-picker/ngx';\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\nimport { FilePath } from '@ionic-native/file-path/ngx';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { createCustomElement } from '@angular/elements';\nimport { ListcontrolComponent } from '../components/listcontrol/listcontrol.component';\nimport { ColumnMode, SelectionType } from '@swimlane/ngx-datatable';\n\nexport interface ReportPara {\n  inppara: string;\n  scaption: string;\n  isdependend: boolean;\n  scontroltype: string;\n  issamepagemultiselect: boolean;\n}\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.page.html',\n  styleUrls: ['./report.page.scss'],\n})\nexport class ReportPage implements OnInit {\n\n  readonly TAG = \"Report Page\"\n  innerhtml: any;\n  rptparalist: ReportPara[];\n  txtmsg: string;\n  rptid: string;\n  txtTitle='Report';\n  txterror: string;\n  txtmessage: string;\n  response: Loginresponse;\n  file_name;\n  fileType;\n  btnName = \"Excel\";\n  headerData;\n  columnData;\n\n\n  loadingIndicator = true;\n  reorderable = true;\n\n  selectedEmployeeCode;\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n  columns;\n  rows;\n  readonly headerHeight = 50;\n  readonly rowHeight = 50;\n  readonly pageLimit = 50;\n  options: InAppBrowserOptions = {\n    location: 'no',//Or 'no' \n    hidden: 'yes', //Or  'yes'\n    clearcache: 'yes',\n    clearsessioncache: 'yes',\n    zoom: 'yes',//Android only ,shows browser zoom controls \n    hardwareback: 'yes',\n    mediaPlaybackRequiresUserAction: 'no',\n    shouldPauseOnSuspend: 'no', //Android only \n    closebuttoncaption: 'Close', //iOS only\n    disallowoverscroll: 'no', //iOS only \n    toolbar: 'yes', //iOS only \n    enableViewportScale: 'no', //iOS only \n    allowInlineMediaPlayback: 'no',//iOS only \n    presentationstyle: 'pagesheet',//iOS only \n    fullscreen: 'yes',//Windows only    \n  };\n  options1: InAppBrowserOptions = {\n    location: 'yes',//Or 'no' \n    hidden: 'no', //Or  'yes'\n    clearcache: 'yes',\n    clearsessioncache: 'yes',\n    zoom: 'yes',//Android only ,shows browser zoom controls \n    hardwareback: 'yes',\n    mediaPlaybackRequiresUserAction: 'no',\n    shouldPauseOnSuspend: 'no', //Android only \n    closebuttoncaption: 'Close', //iOS only\n    disallowoverscroll: 'no', //iOS only \n    toolbar: 'yes', //iOS only \n    enableViewportScale: 'no', //iOS only \n    allowInlineMediaPlayback: 'no',//iOS only \n    presentationstyle: 'pagesheet',//iOS only \n    fullscreen: 'yes',//Windows only    \n  };\n  prevControl: any;\n\n  constructor(private route: ActivatedRoute, private sanitizer: DomSanitizer,\n              private loginservc: LoginauthService, private router: Router, public storage: Storage,\n              private singleselservc: SelectorsingleserviceService, private iab: InAppBrowser,\n              private androidPermissions: AndroidPermissions,\n              private msg: Message,private nativefile: NativeFile,\n              private platform: Platform,private fileOpener: FileOpener,\n              private commonFunction: Commonfun\n              ,private alertCtrl: AlertController\n              ,private injector: Injector\n              ,private reportService: ReportService\n              ,private el: ElementRef) {\n\n  }\n  isview=false;\n  ngOnInit() {\n    this.isview=false;\n    this.route.params.subscribe(params => {\n      this.rptid = params['rptid'];\n\n      this.loginservc.getReportPara(this.rptid).subscribe(data => {\n\n        this.rptparalist = data['data'];\n        this.loginservc.reportjson['org'] = this.loginservc.selectedprof.organization;\n        this.loginservc.reportjson['user'] = this.loginservc.selectedprof.user;\n        this.loginservc.reportjson['role'] = this.loginservc.selectedprof.role;\n        this.loginservc.reportjson['client'] = this.loginservc.selectedprof.client;\n        this.loginservc.reportjson['wh'] = this.loginservc.selectedprof.warehouse;\n        this.loginservc.reportjson['rptid'] = this.rptid;\n\n\n        for (let rptpara of this.rptparalist) {\n//console.log(rptpara);\n\n          if (this.loginservc.reportjson[rptpara.inppara] === undefined)\n            this.loginservc.reportjson[rptpara.inppara] = rptpara[rptpara.inppara];\n  \n            if(!this.loginservc.iscutsomdefined && rptpara.issamepagemultiselect){\n              const element = createCustomElement(ListcontrolComponent,{injector:this.injector})\n              customElements.define('app-listcontrol',element);\n              this.loginservc.iscutsomdefined=true;\n            }\n            if(rptpara[\"isview\"] && rptpara[\"scontroltype\"]==='BTNVIEW'){\n              this.isview=true;\n            }\n        }\n\n\n        this.loginservc.GetReportPage(this.loginservc.reportjson).subscribe(data => {\n         // console.log(\"Report Page\", data);\n          this.file_name = data['report_name'];\n          this.txtTitle=this.file_name.substring(0,this.file_name.lastIndexOf(\".\"));\n          this.fileType   = this.file_name.substring(this.file_name.lastIndexOf(\".\") + 1);\n          if(this.fileType=='pdf'){\n            this.btnName =\"PDF\";\n          }\n          this.innerhtml = this.sanitizer.bypassSecurityTrustHtml(data['data']);\n          this.loginservc.getReportPara(this.rptid).subscribe(data => {\n            this.rptparalist = data['data'];\n          \n            \n            //console.log(this.TAG,\"File To Be Downlaoded \",data,this.file_name);\n\n            for (let rptpara of this.rptparalist) {\n              //console.log('para ' + rptpara.inppara);\n              var e = document.getElementById(rptpara.inppara)\n\n              if (e) {\n\n                if (rptpara.isdependend) {\n\n                  if(rptpara.scontroltype==='LST' && rptpara.issamepagemultiselect){\n                  \n                    //console.log('reload',e);\n                  \n                    e.addEventListener(\"click\", this.onReload.bind(this,rptpara));\n                  }else{\n                    e.addEventListener(\"focusin\", this.onReload.bind(this,rptpara));\n                  } \n                } else {\n                  e.addEventListener(\"focusin\", this.onChange.bind(this,rptpara));\n                }\n                if (rptpara.scontroltype === 'SLS' \n                      || (rptpara.scontroltype==='LST' && !rptpara.issamepagemultiselect)) {\n                  e.addEventListener(\"click\", this.onSLSClick.bind(this, rptpara.scontroltype));\n\n                }\n\n              }\n\n\n            }\n            //console.log(this.loginservc.reportjson);\n          });\n        });\n      });\n\n\n    });\n  }\n\n  onClickEmail() {\n    this.loginservc.reportjson[\"inpexcel\"] = 'N';\n    //console.log(\"On email Click\", this.loginservc.reportjson);\n    this.loginservc.sendEmailReport(this.loginservc.reportjson).subscribe(data => {\n      this.response = data['response'];\n      if (this.response.messageType !== undefined) {\n        if (this.response.messageType === 'success') {\n          this.txtmessage = this.response.messageText;\n          this.txterror = undefined;\n        }\n      } else {\n\n        this.txterror = this.response.error.message;\n        this.txtmessage = undefined;\n        this.txterror = this.txterror.split(\"Where\")[0];\n\n      }\n    }, error => {\n\n      this.txterror = error.message;\n      this.txterror = this.txterror.split(\"Where\")[0];\n      this.txtmessage = undefined;\n\n    });\n  }\n  onClickExcelPDF() {\n    \n    // \n  \n      this.loginservc.reportjson[\"inpexcel\"] = 'Y';\n   \n    this.commonFunction.loadingPresent();\n   // console.log(\"On excel/pdf Click\", this.loginservc.reportjson);\n    this.loginservc.downloadExcelPDF(this.loginservc.reportjson).subscribe((response:any) => {\n      this.commonFunction.loadingDismiss();\n     // console.log(response);\n      if(response.size!=0)\n    {\n    let stype =response.type;\n    let blob:any = new Blob([response], { type: stype });\n    let fileName='mydoc'\n    if(this.btnName==='Excel'){\n      fileName=this.loginservc.selectedreport._identifier+'.csv'\n      stype='text/csv'\n    }else if(this.btnName==='PDF'){\n      fileName=this.loginservc.selectedreport._identifier+'.pdf'\n      stype='application/pdf'\n    }else {\n      this.commonFunction.presentAlert(\"Error\",\"Error\",\"Error On Downloading Report\");\n      return;\n    }\n   \n    this.commonFunction.presentAlert(\"Message\",\"Success\",\"Downloaded Complete.\");\n //   if(!this.platform.is('cordova')){\n  if(this.msg.isplatformweb){\n    const url = window.URL.createObjectURL(blob);\n     let a = document.createElement(\"a\");\n     document.body.appendChild(a);\n     a.href = url;\n     a.download =fileName;\n     a.click();\n     window.URL.revokeObjectURL(url);\n    }\n    let pathFile\n    if( this.platform.is('ios')){\n      pathFile = this.nativefile.documentsDirectory\n    }\n    if(this.platform.is('android')){\n      pathFile = this.nativefile.externalDataDirectory\n    }\n  //  if(this.platform.is('android')|| this.platform.is('ios')){\n    if(!this.msg.isplatformweb){\n      \n      this.nativefile.writeFile(\n        pathFile,\n        fileName,\n        blob,\n        {\n          replace: true,\n        }\n      ).then((res) => {\n        //console.log('inside');\n        return this.fileOpener.open(\n        pathFile+ fileName,\n        stype\n      ).catch((err)=>{\n        console.log(err);\n      });\n    })\n    .catch((error) => {\n    this.commonFunction.presentAlert(\"Message\",\"Alert\",error);\n\n      //console.log(error);\n    });;\n    }\n  \n  }\n  else{\n  this.commonFunction.presentAlert(\"Message\",\"Alert\",\"File not Downloaded.\");\n}\n\n    }, error => {\n\n      this.txterror = error.message;\n      this.txterror = this.txterror.split(\"Where\")[0];\n      this.txtmessage = undefined;\n\n    });\n  }\n  onclick=false;\n  async onClickView(){\n    try {\n      this.onclick=true;\n          this.commonFunction.loadingPresent();\n          this.loginservc.reportjson[\"offset\"]=0;\n         \n         \n          let data = await this.reportService.getViewData(this.loginservc.reportjson).toPromise();\n         \n          this.columns = data[0].colum_names; \n          this.rows = data[0].colum_data;\n          this.loadingIndicator = false;\n         \n          this.commonFunction.loadingDismiss();\n    } catch (error) {\n\n      this.commonFunction.loadingDismiss();\n      this.commonFunction.presentAlert(\"Report\",\"Error\",error.error);\n    }\n  }\n  // onClickExcel() {\n  //   try {\n      \n  //     this.loginservc.reportjson[\"inpexcel\"] = 'Y';\n  //     console.log(\"On Click Excel Click\", this.loginservc.reportjson);\n\n  //     // let fileDownloadURL = this.loginService.commonurl + 'ws/in.mbs.exportdata.MEXDEmailAction?'\n  //     //   + this.loginService.parameter + '&user_id=' + this.loginService.userid + '&param=' + JSON.stringify(this.loginservc.reportjson);\n     \n\n  //     // if (this.msg.isplatformweb == false) {\n  //     //   this.androidPermissions.hasPermission(this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE)\n  //     //   .then(status => {\n  //     //     if (status.hasPermission) {\n  //     //       this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE)\n  //     //       .then(status => {\n  //     //         if(status.hasPermission) {\n  //     //           this.downloadFile(fileDownloadURL);\n  //     //         }\n  //     //       });\n  //     //     } \n  //     //     else {\n  //     //       this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE)\n  //     //         .then(status => {\n  //     //           if(status.hasPermission) {\n  //     //             this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE)\n  //     //               .then(status => {\n  //     //                 if(status.hasPermission) {\n  //     //                   this.downloadFile(fileDownloadURL);\n  //     //                 }\n  //     //               });\n  //     //           }\n  //     //         });\n  //     //     }\n  //     //   });\n  //     // }else {\n  //     //   this.downloadFile(fileDownloadURL);\n  //     // }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  onReload(reportpara,event) {\n\n    if (this.loginservc.reportjson[event.target.id] !== event.target.value  || reportpara.scontroltype==='LST') {\n      this.loginservc.reportjson[event.target.id] = event.target.value === undefined ? '' : event.target.value;\n      if (event.target.value !== undefined && event.target.value !== '') {\n      //   this.prevControl=reportpara;\n      // if(event.target.id==='child')\n      // if(event.target.parentElement.parentElement.parentElement.id===reportpara.inppara){\n      //   return;\n      // }\n     // console.log('reload inside',event.target.value);\n        this.loginservc.reportjson[event.target.id] = event.target.value;\n        this.loginservc.GetReportPage(this.loginservc.reportjson).subscribe(data1 => {\n          this.innerhtml = this.sanitizer.bypassSecurityTrustHtml(data1['data']);\n          this.loginservc.getReportPara(this.rptid).subscribe(data => {\n            this.rptparalist = data['data'];\n            //console.log(this.innerhtml);\n\n            for (let rptpara of this.rptparalist) {\n              //console.log('para ' + rptpara.inppara);\n              var e = document.getElementById(rptpara.inppara)\n\n              if (e) {\n\n                if (rptpara.isdependend) {\n                  if(rptpara.scontroltype==='LST' && rptpara.issamepagemultiselect){\n                  \n                    //console.log('reload',e);\n                  \n                    e.addEventListener(\"click\", this.onReload.bind(this,rptpara));\n                  }else{\n                    e.addEventListener(\"focusin\", this.onReload.bind(this,rptpara));\n                  }\n                } else {\n                  e.addEventListener(\"focusin\", this.onChange.bind(this,rptpara));\n                }\n                if (rptpara.scontroltype === 'SLS' \n                      || (rptpara.scontroltype==='LST' && !rptpara.issamepagemultiselect)) {\n                  e.addEventListener(\"click\", this.onSLSClick.bind(this, rptpara.scontroltype));\n\n                }\n\n\n              }\n\n\n            }\n\n          });\n        });\n      }\n    }\n\n  }\n  onChange(reportpara,event) {\n    // console.log('onchange',this.prevControl);\n    // if(this.prevControl)\n    // if(this.prevControl.scontroltype==='LST' && this.prevControl.issamepagemultiselect ){\n    //   this.onReload(reportpara,event);\n    // }\n   // console.log('onchangecurr',this.loginservc.reportjson);\n    // this.prevControl=reportpara;\n    this.txtmessage = undefined;\n    this.txterror = undefined;\n    //this.loginservc.reportjson[event.target.id]= event.target.value;\n    if (event.target.value !== undefined) {\n      this.loginservc.reportjson[event.target.id] = event.target.value;\n    }\n\n  }\n  onSLSClick(controltype, event) {\n    // console.log(event);\n    //console.log(controltype);\n    this.singleselservc.json = this.loginservc.reportjson;\n    this.router.navigate(['/selectorsingle', this.rptid, event.target.id, controltype]);\n\n  }\n  // public async downloadFile(fileDownloadURL) {\n  //   try {\n\n  //     // if (this.msg.isplatformweb == false) {\n  //       this.commonFunction.loadingPresent();\n  //       let path;\n  //       if (this.platform.is('android')) {\n  //         path = this.filePlugin.externalRootDirectory + '/Download/';\n  //       } else if (this.platform.is('ios')) {\n  //         path = this.filePlugin.documentsDirectory;\n  //       }else if (!this.platform.is('cordova')){\n  //         path='';\n  //       }\n  //       const fileTransfer: FileTransferObject = this.transfer.create();\n  //       fileTransfer.download(encodeURI(fileDownloadURL), path+this.file_name).then((entry) => {\n  //         console.log('download complete: ' + entry);\n  //         this.commonFunction.loadingDismiss();\n  //         this.presentAlert(\"Report\",\"Confirm!\",\"File stored in the download folder of your device do you want to open it?\",entry);\n\n  //        // this.commonFunction.presentAlert(\"Report\",\"Download\",entry.toURL());\n  //       }, (error) => {\n  //       console.log('error download complete: ', error);\n  //       this.commonFunction.loadingDismiss();\n  //       this.commonFunction.presentAlert(\"Report\",\"Download\",error);\n  //     }); \n       \n  //     // } else {\n  //     //   let target = \"_blank\";\n\n  //     //   if(this.fileType=='pdf'){\n  //     //     //this.iab.create(fileDownloadURL, target, this.options1);\n  //     //     this.iab.create(fileDownloadURL, target, this.options);\n  //     //   } else {\n  //     //     this.iab.create(fileDownloadURL, target, this.options);\n  //     //   }\n  //     //   // let formData = new FormData();\n  //     //   // formData.append('param', JSON.stringify(this.loginservc.reportjson));\n  //     //   // formData.append('user_id', this.loginservc.userid);\n             \n  //     //   // let fileDownloadURL = this.loginService.commonurl + 'ws/in.mbs.exportdata.MEXDEmailAction?'\n  //     //   // this.singleselservc.Downloaddata(formData,fileDownloadURL).subscribe((response:any)=>{\n  //     //   //    console.log('response download NEW complete: ', response);\n  //     //   // })\n        \n        \n  //     // }\n\n  //   } catch (error) {\n  //     console.log(this.TAG, error);\n  //   }\n  // }\n  async onScroll(offsetY: number){\n\n    const viewHeight = this.el.nativeElement.getBoundingClientRect().height - this.headerHeight;\n    if (!this.loadingIndicator && offsetY + viewHeight >= this.rows.length * this.rowHeight) {\n      let limit = this.pageLimit;\n      if (this.rows.length === 0) {\n        // calculate the number of rows that fit within viewport\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\n\n        // change the limit to pageSize such that we fill the first page entirely\n        // (otherwise, we won't be able to scroll past it)\n        limit = Math.max(pageSize, this.pageLimit);\n      }\n      this.loadPage(limit);\n    }\n\n\n\n\n    \n  }\n\n  private async loadPage(limit: number) {\n    \n    this.loadingIndicator = true;\n    this.loginservc.reportjson[\"offset\"]=limit;\n    let results = await this.reportService.getViewData(this.loginservc.reportjson).toPromise(); \n    const rows = [...this.rows, ...results[0].colum_data];\n    this.rows = rows;\n    this.loadingIndicator = false;\n  }\n  async presentAlert(Header: string, SubHeader: string, Message: string,entry) {\n    const alert = await this.alertCtrl.create({\n      header: Header,\n      subHeader: SubHeader,\n      message: Message,\n      buttons: [{\n        text: 'Cancel',\n        handler: () => {\n          console.log('Confirm Okay');\n        }\n       },{\n        text: \"Okay\",\n        handler: (ok) => {\n          let openType;\n          if(this.fileType=='pdf'){\n            openType = \"application/pdf\";\n          } else {\n            openType = \"text/csv\";\n          }\n          this.fileOpener.open(entry.toURL(), openType)\n          .then(() => console.log(\"File is opened\"))\n          .catch(e => console.log(\"Error opening file\", e));\n        }\n      }]\n    });\n    alert.dismiss(() => console.log('The alert has been closed.'));\n    await alert.present();\n  }\n\n}\n","import { GenericHttpClientService } from 'src/app/common/generic-http-client.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginauthService } from '../login/loginauth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  constructor(public http: HttpClient,public loginauth:LoginauthService,private genericHTTP:GenericHttpClientService) { }\n\n \n  getViewData(body:any) {\n    let login = this.loginauth.user;//\"P2admin\";\n    let password = this.loginauth.pass;//\"Pass2020\";\n    const auth=btoa(login+\":\"+password);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':'application/json',\n        'Accept':'application/json',\n        'Authorization':'Basic '+auth\n        })\n      };\n     return this.genericHTTP.post(this.loginauth.commonurl + 'ws/in.mbs.exportdata.MEXDGetReportView',body,httpOptions);\n\n  }\n\n\n}"],"sourceRoot":""}