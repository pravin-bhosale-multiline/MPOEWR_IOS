{"version":3,"sources":["./src/app/location-finder/location-finder.page.html","./src/app/location-finder/location-finder.module.ts","./src/app/location-finder/location-finder.page.scss","./src/app/location-finder/location-finder.page.ts","./src/app/location-finder/location-finder.service.ts"],"names":[],"mappings":"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","file":"location-finder-location-finder-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Lat-Long Finder</ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\" routerDirection=\\\"root\\\" routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-buttons (click)=\\\"Resetpage()\\\" slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\"><ion-icon name=\\\"refresh\\\"></ion-icon> \\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n\\n<ion-content>\\n  <ion-grid>\\n\\n        <form [formGroup]=\\\"latLongForm\\\" (ngSubmit)=\\\"saveForm(latLongForm.value)\\\">\\n          <ion-card>\\n            <ion-row>\\n              <ion-col>  \\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Customer<span style=\\\"color:red!important\\\">*</span></ion-label>\\n\\n              <ionic-selectable placeholder=\\\"Select Customer\\\"\\n                                [formControl]=\\\"latLongForm.controls['selectedBusinessPartner']\\\"\\n                                [items]=\\\"BusinessPartnerlist\\\" \\n                                itemValueField=\\\"leadid\\\" \\n                                itemTextField=\\\"_identifier\\\" \\n                                [canSearch]=\\\"true\\\"\\n                                (onClose)=\\\"onClose($event)\\\"\\n                                (onSearch)=\\\"onCustDropDownSearch($event)\\\"\\n                                \\n                                (onChange)=\\\"onCustDropDownChange($event)\\\"\\n                                > \\n\\n              </ionic-selectable>\\n            </ion-item>\\n            <div padding-left>\\n              <ng-container *ngFor=\\\"let validation of validation_messages.selectedBusinessPartner\\\">\\n                <div *ngIf=\\\"latLongForm.get('selectedBusinessPartner').hasError(validation.type) && latLongForm.get('selectedBusinessPartner').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n            </ion-col>\\n            </ion-row>\\n<!-- (onChange)=\\\"onCustDropDownChange($event.component.value)\\\" -->\\n           \\n              <ion-row>\\n                <ion-col>\\n            <ion-item >\\n              <ion-label position=\\\"stacked\\\">Shipping Address<span style=\\\"color:red!important\\\">*</span></ion-label>\\n              <ion-select disabled=\\\"false\\\" \\n              (ionChange)=\\\"onAddChange()\\\"\\n              [formControl]=\\\"latLongForm.controls['selectedBPaddressshipping']\\\" \\n              [(ngModel)]=\\\"selectedAddressDropDown\\\" \\n              multiple=\\\"false\\\" \\n              interface=\\\"popover\\\" \\n              placeholder=\\\"Select Address\\\">\\n               <ion-select-option *ngFor=\\\"let sadd of BPaddressshipping\\\" [value]=\\\"sadd\\\">{{sadd.addressname}}</ion-select-option>                <!-- <ion-select-option>this is test data from testing purpose only we have to chnage this after testing is done.</ion-select-option> -->\\n              </ion-select>\\n              </ion-item>\\n              <div padding-left>\\n                <ng-container *ngFor=\\\"let validation of validation_messages.selectedBPaddressshipping\\\">\\n                  <div *ngIf=\\\"latLongForm.get('selectedBPaddressshipping').hasError(validation.type) && latLongForm.get('selectedBPaddressshipping').touched\\\">\\n                    <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                  </div>\\n                </ng-container>\\n              </div>\\n              \\n            </ion-col>\\n          </ion-row>\\n\\n\\n              <ion-item *ngIf=\\\"showTxtAddress\\\">\\n                <ion-textarea>{{txtselectedAddress}}</ion-textarea>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-text>\\n                    {{txtLatitude}}\\n                </ion-text>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-text>\\n                    {{txtLongitude}}\\n                </ion-text>\\n              </ion-item>\\n              \\n          </ion-card>  \\n          <ion-item *ngIf=\\\"showBtnConvertAddressToLatLong\\\">\\n            <ion-button (click)=\\\"convertAddressToLatLong()\\\" color=\\\"bluegrey\\\" size=\\\"large\\\" expand=\\\"block\\\" class=\\\"btn-lat-long\\\" >\\n              Convert To Lat Long\\n              <ion-icon slot=\\\"start\\\" name=\\\"compass\\\"></ion-icon>\\n            </ion-button>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"showBtnCaptureLatLong\\\">\\n            <ion-button (click)=\\\"captureLatLong()\\\" color=\\\"bluegrey\\\" size=\\\"large\\\" expand=\\\"block\\\" class=\\\"btn-lat-long\\\" >\\n              Capture Lat Long\\n              <ion-icon slot=\\\"start\\\" name=\\\"compass\\\"></ion-icon>\\n            </ion-button>\\n          </ion-item>\\n          <ion-item>\\n            <ion-button (click)=\\\"saveForm(latLongForm.value)\\\" size=\\\"large\\\" expand=\\\"block\\\" class=\\\"btn-lat-long\\\" [disabled]=\\\"!latLongForm.valid || !txtLongitude || !txtLatitude\\\">\\n               Save\\n              <ion-icon slot=\\\"start\\\" name=\\\"compass\\\"></ion-icon>\\n            </ion-button>\\n\\n           \\n          </ion-item>\\n        </form>\\n  \\n  </ion-grid>\\n   \\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocationFinderPage } from './location-finder.page';\nimport { IonicSelectableModule } from 'ionic-selectable';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocationFinderPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    IonicSelectableModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LocationFinderPage]\n})\nexport class LocationFinderPageModule {}\n","module.exports = \".btn-lat-long {\\n  width: -webkit-fill-available !important;\\n  background-color: vibrant !important;\\n}\\n\\nion-select {\\n  max-width: 100% !important;\\n}\\n\\n/* Set the text color */\\n\\nion-select::part(text) {\\n  color: #545ca7 !important;\\n  font-size: 54px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9sb2NhdGlvbi1maW5kZXIvbG9jYXRpb24tZmluZGVyLnBhZ2Uuc2NzcyIsInNyYy9hcHAvbG9jYXRpb24tZmluZGVyL2xvY2F0aW9uLWZpbmRlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRyx3Q0FBQTtFQUNBLG9DQUFBO0FDQ0g7O0FER0E7RUFDRywwQkFBQTtBQ0FIOztBREdBLHVCQUFBOztBQUNBO0VBQ0cseUJBQUE7RUFDQSwwQkFBQTtBQ0FIIiwiZmlsZSI6InNyYy9hcHAvbG9jYXRpb24tZmluZGVyL2xvY2F0aW9uLWZpbmRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWxhdC1sb25ne1xuICAgd2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGUgIWltcG9ydGFudDtcbiAgIGJhY2tncm91bmQtY29sb3I6IHZpYnJhbnQgIWltcG9ydGFudDtcbiAgLy8gLS1iYWNrZ3JvdW5kOiBibGFjayAhaW1wb3J0YW50O1xufVxuXG5pb24tc2VsZWN0e1xuICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICBcbn1cbi8qIFNldCB0aGUgdGV4dCBjb2xvciAqL1xuaW9uLXNlbGVjdDo6cGFydCh0ZXh0KSB7XG4gICBjb2xvcjogIzU0NWNhNyAhaW1wb3J0YW50O1xuICAgZm9udC1zaXplOiA1NHB4ICFpbXBvcnRhbnQ7XG4gfSIsIi5idG4tbGF0LWxvbmcge1xuICB3aWR0aDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZSAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2aWJyYW50ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1zZWxlY3Qge1xuICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbn1cblxuLyogU2V0IHRoZSB0ZXh0IGNvbG9yICovXG5pb24tc2VsZWN0OjpwYXJ0KHRleHQpIHtcbiAgY29sb3I6ICM1NDVjYTcgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiA1NHB4ICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { IonicSelectableComponent } from 'ionic-selectable';\nimport { BusinessPartnerList, NeworderService, BPaddress } from '../neworder/neworder.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { LocationAccuracy } from '@ionic-native/location-accuracy/ngx';\nimport { NativeGeocoderOptions, NativeGeocoder, NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  GoogleMapOptions,\n  CameraPosition,\n  MarkerOptions,\n  Marker,\n  Environment,\n  Spherical,\n  ILatLng\n} from '@ionic-native/google-maps';\nimport { Commonfun } from '../../provider/commonfun';\nimport { Message } from '../../provider/message-helper';\n\n\nimport {LoginauthService,AllAct,customerheader,Port} from '../login/loginauth.service';\nimport {LocationFinderService} from './location-finder.service'\n\n@Component({\n  selector: 'app-location-finder',\n  templateUrl: './location-finder.page.html',\n  styleUrls: ['./location-finder.page.scss'],\n})\nexport class LocationFinderPage implements OnInit {\n  \n  // This variable will hold the class name.\n  readonly TAG = 'LocationFinderPage';\n  //This varible will hold Customer list.\n  selectedBusinessPartner: BusinessPartnerList;\n  //\n  latLongForm:FormGroup;\n  //\n  BusinessPartnerlist: any;\n  // This variable will hold search text word count.\n  reftextcount = 0;\n  //\n  BPaddressshipping: any=[];\n  //\n  selectedBPaddressshipping: BPaddress;\n  //\n  selectedAddressDropDown;\n  //\n  selectedAddress;\n  txtselectedAddress;\n  //\n  showTxtAddress = false;\n  //\n  txtLatitude;\n  //\n  txtLongitude\n  //\n  showBtnConvertAddressToLatLong = false;\n  //\n  showBtnCaptureLatLong = false;\n  //\n  distance;\n\nleastBusinessPartnerlist=null;\n  validation_messages = { \n                          'selectedBusinessPartner': [{ type: 'required', message: ' *Please Select Customer.' }],\n                          'selectedBPaddressshipping': [{ type: 'required', message: '*Please Select Shipping Address.' }]\n                        }\n\n  \n  constructor( private fb: FormBuilder,\n               private neworderservice: NeworderService,\n               private geolocation: Geolocation,\n               private platform: Platform,\n               private nativeGeocoder: NativeGeocoder,\n               private zone: NgZone,\n               private loginauth:LoginauthService,\n               private locationfinderservice:LocationFinderService,\n               public commonfun: Commonfun,\n               public msg:Message,\n               private locationAccuracy:LocationAccuracy\n\n\n             ) { \n\n                this.latLongForm = this.fb.group({\n                  selectedBusinessPartner: [,Validators.required],\n                  selectedBPaddressshipping: [,Validators.required]\n                \n                });\n    \n               }\n\n  ngOnInit() {\n    \n\n    let mapOptions: GoogleMapOptions = {\n      camera: {\n         target: {\n           lat: 43.0741904,\n           lng: -89.3809802\n         },\n         zoom: 18,\n         tilt: 30\n       }\n    };\n\n     \n    let latlong1 =  <ILatLng>{}\n    latlong1 \n    latlong1.lat = 17.6599;\n    latlong1.lng = 75.9064;\n\n    let latlong2=  <ILatLng>{}\n    latlong2.lat = 19.0760;\n    latlong2.lng = 72.8777;\n    //this.distance = Spherical.computeDistanceBetween(latlong1,latlong2);\n    \n    let km = this.distance / 1000;\n\n  \n\n\n////---------\n\nif(this.msg.isplatformweb==true){\n // this.commonfun.chkcache('location-finder');\n  setTimeout( () => {\n    this.checkcust();\n  },3000);\n}\nelse{\n  this.checkcust();\n}\n//-------\n\n\n    \n  }\n  ionViewWillEnter(){\n    \n  }\n  /**\n   * @kind function\n   * @summary This method will save data to server.\n   * @since 1.0.0\n   * @returns void\n   * @public\n   * @module Travel Expense\n   * @author Pravin Bhosale\n   * @classdesc  LocationFinderPage\n   */\n  public saveForm(val):void {\n  let methodTAG = 'latlongSubmit';  \n  try {\n            //localhost:8080/openbravo/ws/in.mbs.webservice.WMobileLatLongUpdate?addid=FFF202005200405006176B076E5C7E39&lat=100&long=2006\n        \n    \n        this.locationfinderservice.LatLongUpdate(this.selectedAddressDropDown.addressid,this.txtLatitude,this.txtLongitude).subscribe(data => {\n          var response = data;\n    if(response.status==\"Success\"){\n      this.commonfun.presentAlert(\"Message\",\"Success\",response.msg);\n      this.Resetpage();\n    }\n    else{\n      this.commonfun.presentAlert(\"Message\",response.status,response.msg);\n    }\n          \n        },error=>{\n        //  console.log(this.TAG,methodTAG,error)\n          \n          this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    \n        });\n    \n    } catch (error) {\n      console.log(this.TAG,methodTAG,error)\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    }\n  }\n  onClose(event:{\n    component: IonicSelectableComponent,\n    text: any\n  }){\nevent.component.searchText=\"\";\n  }\n\n  /**\n   * @kind function\n   * @summary This method provides information about the device's location, such as latitude and longitud.\n   * @param null\n   * @public\n   * @returns void\n   * @module Travel Expense\n   * @since 0.0.7\n   * @see https://github.com/apache/cordova-plugin-geolocation\n   * @author Pravin Bhosale \n   */\n  public captureLatLong(){\n    let methodTAG = 'captureLatLong';\n    try {\n    //  console.log(methodTAG);\t\n\n\n      if (this.msg.isplatformweb==false)\n      {\n\n      this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\n        () => {\n    this.geolocation.getCurrentPosition().then((resp) => {\n          \n          this.txtLatitude = resp.coords.latitude;\n          this.txtLongitude = resp.coords.longitude;\n        //  this.reverseGeocode(resp.coords.latitude,resp.coords.longitude);\n      }).catch((error) => {\n      //  console.log('Error getting location', error.message);\t\n       // this.commonfun.presentAlert(\"Message\",\"Error\",error.message);\n      });\n    },\n    error => console.log('Error requesting location permissions ' + JSON.stringify(error))\n  );\n\n      }\n      else{\n        //pwa\n        this.geolocation.getCurrentPosition().then((resp) => {\n          \n          this.txtLatitude = resp.coords.latitude;\n          this.txtLongitude = resp.coords.longitude;\n        //  this.reverseGeocode(resp.coords.latitude,resp.coords.longitude);\n      }).catch((error) => {\n      //  console.log('Error getting location', error.message);\t\n       // this.commonfun.presentAlert(\"Message\",\"Error\",error.message);\n      });\n      }\n    } catch (error) {\n    //  console.log(this.TAG,methodTAG,error);\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    }\n  }\n\n  onAddChange(){\n    try {\n      \n      if(!!this.selectedAddressDropDown.addressname){\n        this.txtselectedAddress = this.selectedAddressDropDown.addressname;\n        this.showBtnConvertAddressToLatLong = false;\n        this.showBtnCaptureLatLong = true;\n      } else {\n        this.showBtnCaptureLatLong = false;\n        this.txtselectedAddress =null\n        this.showBtnConvertAddressToLatLong = false;\n      }\n    } catch (error) {\n      \n    }\n  }\n\n\n  public convertAddressToLatLong(){\n    let methodTAG = 'convertAddressToLatLong';\n    try {\n      this.selectedAddress =this.latLongForm.controls[\"selectedBPaddressshipping\"].value\t\n      if(this.selectedAddress) {\t\n        this.forwardGeocode(this.selectedAddress.addressname);\n      }    \n      \n    } catch (error) {\n     // console.log(this.TAG,methodTAG,error);\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\t\n \n    }\n  }\n  /**\n   * @kind function\n   * @description This method will fire when user will enter something on search box.\n   * @public\n   * @param $event\n   * @returns void\n   * @module Travel Expense\n   * @since 1.0.0\n   * @author Pravin Bhosale.\n   */\n  public onCustDropDownSearch(event: {component: IonicSelectableComponent,text: any}):void {\n    let methodTAG = 'onCustDropDownSearch';\n    try {\n     // console.log(\"onCustDropDownSearch\");\n\n          this.reftextcount++;\n          \n          let custsearchtext = event.text;\n          if(custsearchtext.length % 3==0) {\n\n              this.bindCustomerFromApi(custsearchtext);\n              this.reftextcount = 0;\n          }\n        \n\n    } catch (error) {\n    //  console.log(this.TAG,methodTAG,error);\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    }\n  } \n  /**\n  * @kind function\n  * @description This method will trigger when user will tap on list item in the drop down.\n  * @public\n  * @param $event\n  * @returns void\n  * @module Travel Expense\n  * @since 1.0.0\n  * @author Pravin Bhosale. \n  */\n // public onCustDropDownChange(selectedBusinessPartner){\n  public onCustDropDownChange(event: {component: IonicSelectableComponent,value: any}):void {\n    let methodTAG = 'onCustDropDownChange';\n    try {\n    //  console.log(\"onCustDropDownChange\");\n    // console.log(\"onCustDropDownChange:\",event.value);\n          this.getCustomerAddress(event.value);  \n    } catch (error) {\n    //  console.log(\"Error:onCustDropDownChange\",error);\n    }\n  }\n  /**\n   * @kind function\n   * @description This method will fetch customer list from server and bind it local varibale.\n   * @private\n   * @param strsearch\n   * @returns void\n   * @module Travel Expense\n   * @since 1.0.0.\n   * @author Pravin Bhosale.\n   */\n  private bindCustomerFromApi(strsearch: string) {\n    let methodTAG = 'bindCustomerFromApi';\n    try {\n          if(strsearch!=\"\") {\n            this.locationfinderservice.getUserWiseCustomerForLatLong(strsearch).subscribe(data => {\n              var response = data;\n              this.BusinessPartnerlist = response;\n              \n            });\n          }\n          else{\n            if(this.leastBusinessPartnerlist || this.leastBusinessPartnerlist!=null) {\n            if(this.leastBusinessPartnerlist.length>this.loginauth.minlistcount)\n        {\n          this.BusinessPartnerlist=null;\n        }\n        else{\n         \n          this.BusinessPartnerlist=this.leastBusinessPartnerlist;\n        }}\n        else{\n         \n          this.BusinessPartnerlist=this.leastBusinessPartnerlist;\n        }\n          }\n    } catch (error) {\n    //  console.log(this.TAG,methodTAG,error);\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    }\n  }\n\n  checkcust(){\n    try {\n      \n  \n      this.locationfinderservice.getUserWiseCustomerForLatLong(\"\").subscribe(data => {\n        var response = data;\n       \n        this.leastBusinessPartnerlist = response;\nif(this.leastBusinessPartnerlist)\n{\n        if(this.leastBusinessPartnerlist.length==1)\n        {\n          this.BusinessPartnerlist=this.leastBusinessPartnerlist;\n          this.latLongForm.controls[\"selectedBusinessPartner\"].setValue(this.BusinessPartnerlist[0]);\n          //this.onCustDropDownChange(this.BusinessPartnerlist[0]);\n          this.getCustomerAddress(this.BusinessPartnerlist[0]);\n        }\n        else if(this.leastBusinessPartnerlist.length>this.loginauth.minlistcount)\n        {\n          this.BusinessPartnerlist=null;\n          this.latLongForm.controls[\"selectedBusinessPartner\"].setValue(null);\n\n        }\n        else{\n    \n          this.BusinessPartnerlist=this.leastBusinessPartnerlist;\n          this.latLongForm.controls[\"selectedBusinessPartner\"].setValue(null);\n        }\n      }\n      }); \n     \n    } catch (error) {\n    //  console.log(\"Error:chckcust\",error);\n    }\n  }\n\n\n  /**\n  * @kind function\n  * @description This method will get customer address from server.\n  * @private\n  * @param Id Customer Id\n  * @returns void\n  * @module Travel Expense \n  * @since 1.0.0.\n  * @author Pravin Bhosale.\n  */\n  private getCustomerAddress(selectedBusinessPartner):void{\n    let methodTAG = 'getCustomerAddress';\n    try {\n      \n          let jsondata = selectedBusinessPartner.AddressList;\n        \n          if(jsondata.length>0)\n          {\n          this.BPaddressshipping = jsondata;\n          this.selectedAddressDropDown = this.BPaddressshipping[0];\n          this.showTxtAddress = true;\n         // this.BPaddressshipping[0].name = null;\n          if(!!this.BPaddressshipping[0].addressname){\n            this.txtselectedAddress = this.BPaddressshipping[0].addressname;\n            this.showBtnConvertAddressToLatLong = false;\n            this.showBtnCaptureLatLong = true;\n          } else {\n            this.showBtnCaptureLatLong = false;\n            this.txtselectedAddress =null\n            this.showBtnConvertAddressToLatLong = false;\n          }\n        }\n        else{\n          this.showBtnCaptureLatLong = true;\n          this.BPaddressshipping=null;\n          this.selectedAddressDropDown =null;\n          this.showTxtAddress = false;\n          this.txtselectedAddress =null\n          this.showBtnConvertAddressToLatLong = false;\n\n        }\n    \n    } catch (error) {\n   //   console.log(\"Error:getCustomerAddress:\",error)\n    }\n  }\n  /**\n * @kind function\n * @description This method will convert your lat-long into the street address.\n * @param lat \n * @param lng\n * @returns void\n * @module  Travel Expense\n * @since 0.0.8\n * @author Pravin Bhosale.\n * @see https://ionicframework.com/docs/native/native-geocoder.\n */\n  private reverseGeocode(lat, lng) {\n    let methodTAG = 'reverseGeocode';\n    try {\n          if (this.platform.is('cordova')) {\n            \n            let options: NativeGeocoderOptions = {\n            useLocale: true,\n            maxResults: 1\n            };\n            this.nativeGeocoder.reverseGeocode(lat, lng, options)\n            .then((result: any) => {\n              \n              // this.userLocation = result[0]\n              // \n            })\n            .catch((error: any) => console.log(error));\n          } else {\n            //For PWA App\n          } \n\n    } catch (error) {\n      console.log(this.TAG,methodTAG,error);\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\n    }\n  }\n  /**\n   * @kind function\n   * @description This method is converting addresses (like a street address) into geographic coordinates (like latitude and longitude). \n   * @param address\n   * @module  Travel Expense.\n   * @since 0.0.8\n   * @author Pravin Bhosale.\n   * @see https://ionicframework.com/docs/native/native-geocoder.\n   */\n  private forwardGeocode(address) {\n    let methodTAG = 'forwardGeocode';\n    try {\n    \n      //    if (this.platform.is('cordova')) {\n        if (this.msg.isplatformweb==false)\n         {\n            \n            let options: NativeGeocoderOptions = {\n              useLocale: true,\n              maxResults: 5\n            };\n            \n            \n            this.nativeGeocoder.forwardGeocode(address, options)\n              .then((result: NativeGeocoderResult[]) => {\n                this.zone.run(() => {\n                  \n                  this.txtLatitude = result[0].latitude;\n                  this.txtLongitude = result[0].longitude;\n                  \n                })\n          })\n          .catch((error: any) =>{ console.log(\"cATCXH\",error)\t\n          this.commonfun.presentAlert(\"Message\",\"Error\",error);\t\n                \n            });\n          } else {\n            //For PWA App.\n          //  console.log(\"else\");\n          //  this.captureLatLong()\n          }\n    } catch (error) {\n    //  console.log(this.TAG,methodTAG,error);\t\n      this.commonfun.presentAlert(\"Message\",\"Error\",error);\t\n\n    }\n  }\n\n  Resetpage(){\n    try {\n      this.latLongForm.reset();\n      this.txtselectedAddress=null;\n      this.txtLatitude=null;\n      this.txtLongitude=null;\n      this.showTxtAddress=false;\n      this.showBtnConvertAddressToLatLong=false;\n      this.showBtnCaptureLatLong=false;\n      this.checkcust();\n    } catch (error) {\n    //  console.log(\"Error:Resetpage\",error)\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {LoginauthService} from '../login/loginauth.service';\nimport { GenericHttpClientService } from '../common/generic-http-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationFinderService {\n\n  constructor(public http: HttpClient,public loginauth: LoginauthService,private genericHTTP: GenericHttpClientService) { }\n\n\n  getcustmerbillingaddress(leadid : string){\n   \n    return this.genericHTTP.get(this.loginauth.commonurl + 'org.openbravo.service.json.jsonrest/mmst_customer_billing?'\n    + '_selectedProperties=id,name&' \n    + '_where=active=true%20and%20Mmst_Customer_ID=\\'' + leadid + '\\''\n    );\n    \n  }\n\n  \n  getUserWiseCustomerForLatLong(strsearch:string){\n    strsearch=strsearch.replace(/ /g,\"%20\")\n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileUserWiseCustomerForLatLong?'\n     +'user_id=' + this.loginauth.userid\n    + '&strsearch=' + strsearch \n    + '&activity_id=' + this.loginauth.selectedactivity.id\n    );\n\n  }\n\n  \n  LatLongUpdate(addid:string,lat:string,long:string) {\n    \n\n    return this.genericHTTP.get(this.loginauth.commonurl + 'ws/in.mbs.webservice.WMobileLatLongUpdate?'\n    + '&addid=' + addid\n    + '&lat=' + long\n    + '&long=' + lat \n    );\n\n   \n\n\n   \n   }\n\n}\n"],"sourceRoot":""}