{"version":3,"sources":["./src/app/job/job.page.html","./src/app/job/job.module.ts","./src/app/job/job.page.scss","./src/app/job/job.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6hBAA6hB,+BAA+B,6RAA6R,2BAA2B,8PAA8P,iBAAiB,+LAA+L,uCAAuC,2jB;;;;;;;;;;;;;;;;;;;;;;ACAh0C;AACM;AACF;AACU;AAEV;AAER;AAErC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iDAAO;KACnB;CACF,CAAC;AAWF,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAG;AAAhB,aAAa;IATzB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,iDAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;ACzB1B,+DAA+D,+H;;;;;;;;;;;;;;;;;;;;;ACAb;AACY;AACnB;AACc;AAEN;AAsBnD,IAAa,OAAO,GAApB,MAAa,OAAO;IAIlB,YAAoB,UAA4B,EAAU,QAAkB,EACxD,KAAqB,EAAU,MAAc,EAC7C,iBAAoC;QAFpC,eAAU,GAAV,UAAU,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QACxD,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC7C,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE7D,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAC5B,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,gBAAgB;SAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvC,GAAG,CAAC,OAAO,EAAE,CAAC;QAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAE7B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE5B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAE,QAAQ,CAAC,EAAE;oBACpF,MAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;oBACvC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;oBAEvC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACnC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM,CAAC,IAAmB;QAExB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAEpD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;CACF;;YAlCiC,yEAAgB;YAAoB,wDAAQ;YACjD,8DAAc;YAAkB,sDAAM;YAC1B,gEAAiB;;AAN7C,OAAO;IALnB,+DAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,iIAA8B;;KAE/B,CAAC;2EAKgC,yEAAgB,EAAoB,wDAAQ;QACjD,8DAAc,EAAkB,sDAAM;QAC1B,gEAAiB;GAN7C,OAAO,CAsCnB;AAtCmB","file":"job-job-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"joblist\\\"></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>Job</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-card>\\n  <ion-item  *ngFor=\\\"let joba of jobassignment\\\">\\n    <ion-card-content>\\n    <ion-grid fix>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n              <ion-label position=\\\"stacked\\\">Branch</ion-label>\\n              <ion-card-subtitle>{{joba.organization$_identifier}}</ion-card-subtitle>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n              <ion-col size=\\\"6\\\">\\n                  <ion-label position=\\\"stacked\\\">Vendor/Customer/Sending Branch</ion-label>\\n                  <ion-card-subtitle>{{joba.bpartner$_identifier}}</ion-card-subtitle>\\n              </ion-col>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label position=\\\"stacked\\\">Document No.</ion-label>\\n                <ion-card-subtitle>{{joba.documentno}}</ion-card-subtitle>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n                <ion-label position=\\\"stacked\\\">Doument Date</ion-label>\\n                <ion-card-subtitle>{{joba.documentdate| date: 'dd/MM/yyyy'}}</ion-card-subtitle>\\n                \\n            </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"ion-text-right\\\">\\n          <ion-col size=\\\"6\\\">\\n              <ion-button (click)=\\\"onScan(joba)\\\">\\n                  Start Scanning\\n              </ion-button>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n              <ion-button (click)=\\\"onCancel()\\\">\\n                  Cancel\\n              </ion-button>\\n          </ion-col>\\n        </ion-row>\\n\\n      </ion-grid>\\n    </ion-card-content>\\n    </ion-item>\\n</ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JobPage } from './job.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [JobPage]\n})\nexport class JobPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2IucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginauthService } from '../login/loginauth.service';\nimport { DatePipe } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Joblist } from '../joblist/joblist.page';\nimport { LoadingController } from '@ionic/angular';\n\n/* Job assignment */\nexport interface JobAssignment {\n  _identifier: string;\n  id: string;\n  organization: string;\n  organization$_identifier: string;\n  bpartner: string;\n  bpartner$_identifier: string;\n  user: string;\n  status: string;\n  doctype: string;\n  doctype$_identifier: string;\n  documentno: string;\n  documentdate: string;\n}\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.page.html',\n  styleUrls: ['./job.page.scss'],\n})\nexport class JobPage implements OnInit {\n  jobid;\n  job: Joblist[];\n  jobassignment: JobAssignment[];\n  constructor(private loginservc: LoginauthService, private datePipe: DatePipe,\n              private route: ActivatedRoute, private router: Router\n            , private loadingController: LoadingController) { }\n\n  ngOnInit() {\n    this.loadingController.create({\n      duration: 5000,\n      spinner: 'circles',\n      message: 'Please Wait...'}).then((res) => {\n        res.present(); });\n    this.route.params.subscribe(params => {\n      this.jobid = params['jobid'];\n      \n      this.loginservc.getjob(this.jobid).subscribe(data => {\n        const response = data['response'];\n        this.job = response['data'];\n        \n        this.loginservc.getjobassignment(this.job[0].mwmsJobassignment).subscribe( dataasgn => {\n          const response1 = dataasgn['response'];\n          this.jobassignment = response1['data'];\n          \n          this.loadingController.dismiss();\n        });\n      });\n    });\n  }\n  onScan(joba: JobAssignment) {\n    \n    this.router.navigate(['/jobdetails', this.jobid]);\n\n  }\n  onCancel() {\n    this.router.navigateByUrl('/joblist');\n  }\n}\n"],"sourceRoot":""}