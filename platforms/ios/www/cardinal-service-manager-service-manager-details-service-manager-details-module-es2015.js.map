{"version":3,"sources":["./src/app/cardinal/service-manager/service-manager-details/service-manager-details.page.html","./src/app/cardinal/service-manager/service-manager-details/service-manager-details.module.ts","./src/app/cardinal/service-manager/service-manager-details/service-manager-details.page.scss","./src/app/cardinal/service-manager/service-manager-details/service-manager-details.page.ts"],"names":[],"mappings":"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","file":"cardinal-service-manager-service-manager-details-service-manager-details-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Compliant Report Details\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\" routerDirection=\\\"root\\\" routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n    <mat-step [stepControl]=\\\"detailFormGroup\\\">\\n      <form [formGroup]=\\\"detailFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Details</ng-template>\\n        <!-- complaint_no -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Complaint No</mat-label>\\n          <input matInput formControlName=\\\"complaintNoCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.complaintNoCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('complaintNoCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- complaint_date -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Complaint Date</mat-label>\\n          <input matInput formControlName=\\\"complaintDateCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.complaintDateCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('complaintNoCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Document Type -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Document Type</mat-label>\\n          <mat-select formControlName=\\\"documentTypeCtrl\\\" [(ngModel)]=\\\"docType\\\"\\n            (selectionChange)=\\\"docTypeSelectedChange(docTypeSelected)\\\">\\n            <mat-option *ngFor=\\\"let doc of existingComplaint.doctype\\\" [value]=\\\"doc\\\">\\n              {{doc.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.documentType\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('documentTypeCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Name of Complainer -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Name of Complainer</mat-label>\\n          <input matInput formControlName=\\\"nameOfComplainerCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.nameCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('nameOfComplainerCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Designation of Complainer -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Designation of Complainer</mat-label>\\n          <mat-select [(ngModel)]=\\\"designationOfComplainerType\\\" formControlName=\\\"desigOfComplainerCtrl\\\"\\n            (selectionChange)=\\\"designationOfComplainerChange(designationOfComplainerSelected)\\\">\\n            <mat-option *ngFor=\\\"let designationObject of designationOfComplainerList\\\" [value]=\\\"designationObject\\\">\\n              {{designationObject.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.designation_of_complainer_mss\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('desigOfComplainerCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Contact No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Contact No</mat-label>\\n          <input matInput formControlName=\\\"mobilenoCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobileno\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('mobilenoCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Email ID -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Email ID</mat-label>\\n          <input matInput formControlName=\\\"emailIDCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('emailIDCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Event Date -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Event Date</mat-label>\\n          <input matInput [disabled]='true' formControlName=\\\"eventDateIDCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.eventDateIDCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"detailFormGroup.get('emailIDCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Complaint Description -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Complaint Description</mat-label>\\n          <textarea matInput formControlName=\\\"complaintDescriptionCtrl\\\"></textarea>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.complaintDescription\\\">\\n              <div\\n                *ngIf=\\\"detailFormGroup.get('complaintDescriptionCtrl').hasError(validation.type) && detailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperNext (click)=\\\"matDetailSettper(detailFormGroup)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Product Compliant Tab-->\\n    <mat-step [stepControl]=\\\"productCompliantFormGroup\\\" *ngIf=\\\"isProductCompliantTab\\\">\\n      <form [formGroup]=\\\"productCompliantFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Product Compliant</ng-template>\\n        <!-- Lot No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Lot No.</mat-label>\\n          <input matInput formControlName=\\\"lotNoCtrl\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperProductCompliant($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Consumables Tab  -->\\n    <mat-step [stepControl]=\\\"consumablesFormGroup\\\" *ngIf=\\\"isConsumablesTab\\\">\\n      <form [formGroup]=\\\"consumablesFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Consumables</ng-template>\\n        <!-- Lot No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Lot No.</mat-label>\\n          <input matInput formControlName=\\\"lotNoConsumablesCtrl\\\">\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperConsumables($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Equiment Tab-->\\n    <mat-step [stepControl]=\\\"equimentFormGroup\\\" *ngIf=\\\"isEquimentTab\\\">\\n      <form [formGroup]=\\\"equimentFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Equiment</ng-template>\\n        <!-- Serial No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Serial No.</mat-label>\\n          <input matInput formControlName=\\\"serialNoCtrl\\\" [(ngModel)]=\\\"existingComplaint.serialno\\\" (change)='onCheckInstallationBase()'>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.serialNo\\\">\\n              <div *ngIf=\\\"equimentFormGroup.get('serialNoCtrl').hasError(validation.type) && equimentStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Sr. No. of Equipment -->\\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Sr. No. of Equipment</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.srnoequipment\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field> -->\\n        <!-- Contract Type -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Contract Type</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"contracttypeSelected\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Invoice No -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Invoice No.</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.invoiceno\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Invoice Date -->\\n        <div class=\\\"example-full-width bottom-border\\\">\\n          <ion-label style=\\\"color: darkgray;\\\">Invoice Date</ion-label>\\n          <section class=\\\"cus\\\">\\n           <ion-datetime  [disabled]='true' style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"existingComplaint.invoicedate\\\"  [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          </ion-datetime>\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> \\n        </section>\\n        </div>\\n        \\n      \\n        <!-- Error Code -->\\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Error Code</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.errorcode[0].name\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field> -->\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Error Code</mat-label>\\n          <mat-select [(ngModel)]=\\\"errorCodeSelected\\\" formControlName=\\\"errorCode\\\"\\n            (selectionChange)=\\\"errorCodeSelectedSelectedChange(errorCodeSelected)\\\">\\n            <mat-option *ngFor=\\\"let errorCode of errorCodeList\\\" [value]=\\\"errorCode\\\">\\n              {{errorCode.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.errorCodeCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"equimentFormGroup.get('errorCode').hasError(validation.type) && firstStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n\\n        <!-- Dealer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Dealer Name</mat-label>\\n          <input matInput formControlName=\\\"dealerNameCtrl\\\" [(ngModel)]=\\\"existingComplaint.dealername\\\">\\n        </mat-form-field>\\n        <!-- New Dealer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>New Dealer Name</mat-label>\\n          <mat-select [(ngModel)]=\\\"dealerName\\\" formControlName=\\\"newDealerNameCtrl\\\"\\n            (selectionChange)=\\\"newDealerNameChange(dealerName)\\\" >\\n            <mat-option *ngFor=\\\"let dealer of dealerList\\\" [value]=\\\"dealer\\\">\\n              {{dealer.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <!-- Sales Representative -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Sales Representative</mat-label>\\n          <mat-select formControlName=\\\"salesRepresentativeCtrl\\\" [(ngModel)]=\\\"salesRepresentativeSelected\\\"\\n            (selectionChange)=\\\"salesRepresentativeChange(salesRepresentative)\\\">\\n            <mat-option *ngFor=\\\"let salesRepresentative of salesRepresentativeList\\\" [value]=\\\"salesRepresentative\\\">\\n              {{salesRepresentative.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <!-- Installation Date -->\\n        <div class=\\\"example-full-width bottom-border\\\">\\n          <ion-label style=\\\"color: darkgray;\\\">Installation Date</ion-label>\\n          <section class=\\\"cus\\\">\\n           <ion-datetime  style=\\\"--padding-start:0px\\\" displayFormat=\\\"DD-MM-YYYY\\\" [(ngModel)]=\\\"existingComplaint.installationdate\\\" formControlName=\\\"installationDateCtrl\\\" [max]=\\\"maxDate | date:'yyyy-MM-dd'\\\">\\n          </ion-datetime>\\n          <ion-icon name=\\\"calendar\\\"></ion-icon> \\n        </section>\\n        </div>     \\n        <!-- <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Installation Date</mat-label>\\n          <input matInput formControlName=\\\"installationDateCtrl\\\" [(ngModel)]=\\\"existingComplaint.installationdate\\\">\\n        </mat-form-field> -->\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperEquiment($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- SKU Details Tab-->\\n    <mat-step [stepControl]=\\\"skuDetailsFormGroup\\\">\\n      <form [formGroup]=\\\"skuDetailsFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>SKU Details</ng-template>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">SKU Code</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.skucode\\\" formControlName=\\\"skuCodeCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.skuCodeCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"skuDetailsFormGroup.get('skuCodeCtrl').hasError(validation.type) && skuDetailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- SKU Name / Description -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">SKU Name / Description</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.skuname\\\" formControlName=\\\"skuNameCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.SKUNameCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"skuDetailsFormGroup.get('skuNameCtrl').hasError(validation.type) && skuDetailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Brand Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Brand Name</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.brandname\\\" formControlName=\\\"brandNameCtrl\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.brandNameCtrlErrorMessage\\\">\\n              <div *ngIf=\\\"skuDetailsFormGroup.get('brandNameCtrl').hasError(validation.type) && skuDetailsStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Product to be returned -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Product to be returned</mat-label>\\n          <mat-select [disabled]='true' [(ngModel)]=\\\"productToBeReturn\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <mat-option value=\\\"Yes\\\">Yes</mat-option>\\n            <mat-option value=\\\"No\\\">No</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext (click)=\\\"matSettperSKUDetails($event)\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <!-- Customer Detail Tab -->\\n    <mat-step [stepControl]=\\\"customerDetailFormGroup\\\">\\n      <form [formGroup]=\\\"customerDetailFormGroup\\\" class=\\\"example-form\\\">\\n        <ng-template matStepLabel>Customer Detail</ng-template>\\n        <!-- Customer Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Customer Name</mat-label>\\n          <input matInput [disabled]='true' [(ngModel)]=\\\"existingComplaint.custname\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </mat-form-field>\\n        <!-- Customer Address 1 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Customer Address 1</mat-label>\\n          <input matInput formControlName=\\\"customerAddress1Ctrl\\\" [(ngModel)]=\\\"existingComplaint.add1\\\">\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.customerAddress1\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('customerAddress1Ctrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Customer Address 2 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 2</mat-label>\\n          <input matInput formControlName=\\\"customerAddress2Ctrl\\\" [(ngModel)]=\\\"existingComplaint.add2\\\">\\n        </mat-form-field>\\n        <!-- Customer Address 3 -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Customer Address 3</mat-label>\\n          <input matInput formControlName=\\\"customerAddress3Ctrl\\\" [(ngModel)]=\\\"existingComplaint.add3\\\">\\n        </mat-form-field>\\n        <!-- Pin Code -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Pin Code</mat-label>\\n          <input type=\\\"number\\\" matInput formControlName=\\\"pinCodeCtrl\\\" (change)='onChangePinCode()'>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.pinCode\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('pinCodeCtrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <!-- Area -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Area</mat-label>\\n          <!-- <input matInput formControlName=\\\"areaCtrl\\\"> -->\\n          <mat-select [(ngModel)]=\\\"areaType\\\" formControlName=\\\"areaCtrl\\\" (selectionChange)=\\\"onAreaSelectedChange()\\\">\\n            <mat-option *ngFor=\\\"let areaObject of areaList\\\" [value]=\\\"areaObject\\\">\\n              {{areaObject.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <!-- City -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">City</mat-label>\\n          <input matInput formControlName=\\\"city\\\" [(ngModel)]=\\\"city\\\">\\n        </mat-form-field>\\n        <!-- State -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">State</mat-label>\\n          <input matInput formControlName=\\\"state\\\" [(ngModel)]=\\\"state\\\">\\n        </mat-form-field>\\n        <!-- Country -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label class=\\\"asterisk_input\\\">Country</mat-label>\\n          <input matInput formControlName=\\\"country\\\" [(ngModel)]=\\\"country\\\">\\n        </mat-form-field>\\n        <!-- Approve existingComplaint -->\\n        <section class=\\\"example-full-width\\\">\\n          <mat-checkbox formControlName=\\\"approveComplaintChkCtrl\\\" [color]=\\\"color\\\" [(ngModel)]=\\\"isChecked\\\"\\n            (change)=\\\"approveComplaintCheckbox($event.checked)\\\" [disabled]=\\\"!approveCheckBoxEditable\\\" class=\\\"example-margin\\\">Approve Complaint</mat-checkbox>\\n        </section>\\n        <!-- Service Vendor -->\\n        <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"isServiceVender\\\">\\n          <mat-label>Service Vendor</mat-label>\\n          <mat-select formControlName=\\\"serviceVendorCtrl\\\" >\\n            <mat-option *ngFor=\\\"let vender of venderList\\\" [value]=\\\"vender\\\">\\n              {{vender.name}}\\n            </mat-option>\\n          </mat-select>\\n          <div padding-left>\\n            <ng-container *ngFor=\\\"let validation of validation_messages.serviceVendorMessage\\\">\\n              <div\\n                *ngIf=\\\"customerDetailFormGroup.get('serviceVendorCtrl').hasError(validation.type) && customerDetailStepValid\\\">\\n                <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n        </div>\\n        <div>\\n          <ion-row>\\n            <ion-col no-padding>\\n              <ion-button size=\\\"default\\\" [disabled]=\\\"!customerDetailFormGroup.valid\\\" expand=\\\"block\\\" color=\\\"primary\\\"\\n                (click)=\\\"submit($event)\\\">Assign Vendor\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </form>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule, NavParams } from '@ionic/angular';\n\nimport { ServiceManagerDetailsPage } from './service-manager-details.page';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MatCheckbox, MatCheckboxModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServiceManagerDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MaterialModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ServiceManagerDetailsPage]\n})\nexport class ServiceManagerDetailsPageModule {}\n","module.exports = \".mat-stepper-vertical {\\n  margin-top: 8px;\\n}\\n\\n.mat-form-field {\\n  margin-top: 16px;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.cus {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 100%;\\n}\\n\\nion-datetime {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9jYXJkaW5hbC9zZXJ2aWNlLW1hbmFnZXIvc2VydmljZS1tYW5hZ2VyLWRldGFpbHMvc2VydmljZS1tYW5hZ2VyLWRldGFpbHMucGFnZS5zY3NzIiwic3JjL2FwcC9jYXJkaW5hbC9zZXJ2aWNlLW1hbmFnZXIvc2VydmljZS1tYW5hZ2VyLWRldGFpbHMvc2VydmljZS1tYW5hZ2VyLWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBREVFO0VBQ0UsZ0JBQUE7QUNDSjs7QURFRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FEQ0U7RUFFRSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0EseUJBQUE7VUFBQSw4QkFBQTtFQUNBLFdBQUE7QUNDSjs7QURDRztFQUNDLFdBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL2NhcmRpbmFsL3NlcnZpY2UtbWFuYWdlci9zZXJ2aWNlLW1hbmFnZXItZGV0YWlscy9zZXJ2aWNlLW1hbmFnZXItZGV0YWlscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXN0ZXBwZXItdmVydGljYWwge1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgfVxuICBcbiAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICB9XG5cbiAgLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuY3Vze1xuICBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIgO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgIH1cbiAgIGlvbi1kYXRldGltZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiIsIi5tYXQtc3RlcHBlci12ZXJ0aWNhbCB7XG4gIG1hcmdpbi10b3A6IDhweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgbWFyZ2luLXRvcDogMTZweDtcbn1cblxuLmV4YW1wbGUtZm9ybSB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jdXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5pb24tZGF0ZXRpbWUge1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","import { error } from 'protractor';\nimport { ServiceManagerService } from './../service-manager.service';\nimport { Validator } from './../../../../provider/validator-helper';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { Area, NewcustomerService, Pincode } from 'src/app/newcustomer/newcustomer.service';\nimport { CustomerServiceService } from '../../customer-service/customer-service.service';\nimport { Complain } from 'src/assets/model/complain';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-service-manager-details',\n  templateUrl: './service-manager-details.page.html',\n  styleUrls: ['./service-manager-details.page.scss'],\n})\nexport class ServiceManagerDetailsPage implements OnInit {\n  now = new Date();\n  year = this.now.getFullYear();\n  month = this.now.getMonth() + 1;\n  day = this.now.getDate();\n  /**\n   * \n   */\n  maxDate = this.year + \"-\" + this.month + \"-\" + this.day;\n  /**\n   * \n   */\n  readonly TAG = \"ServiceManagerDetailsPage\";\n  /**  \n   * If this variable is set to true then stepper will check the validation on form control.It will now allow to navigate next page or stepper.  \n   */\n  isLinear = true;\n  /**\n   * \n   */\n  existingComplaint:any;docTypeSelected;docType;designationOfComplainerType;\n  /**\n   * \n   */\n  detailsStepValid = false; equimentStepValid = false;customerDetailStepValid = false;skuDetailsStepValid = false;\n  /**\n   * \n   */\n  consumablesFormGroup: FormGroup;productCompliantFormGroup: FormGroup;detailFormGroup:FormGroup;\n  equimentFormGroup:FormGroup;skuDetailsFormGroup:FormGroup;customerDetailFormGroup:FormGroup;\n  /**\n   * \n   */\n  validation_messages = {\n    'complaintNoCtrlErrorMessage':[{ type: 'required', message: '*Please Enter Complaint Number' }],\n    'complaintDateCtrlErrorMessage':[{ type: 'required', message: '*Please Select Complaint Date' }],\n    'nameCtrlErrorMessage':[{ type: 'required', message: '*Please Enter The Name' }],\n    'documentType':[{ type: 'required', message: '*Please Select Document Type' }],\n    'nameOfComplainer': [{ type: 'required', message: '*Please Enter Name of complainer.' }],\n    'designation_of_complainer_mss':[{ type: 'required', message: '*Please Select Designation Of Complainer.' }],\n    'mobileno': [{ type: 'required', message: '*Please Enter Contact No.' },\n    { type: 'InvalidNumber', message: '*Please Enter Valid Contact No.' }],\n    'email': [{ type: 'required', message: '*Please Enter Email.' },\n    { type: 'InvalidEmail', message: '*Please Enter Valid Email.' }],\n    'eventDateIDCtrlErrorMessage':[{ type: 'required', message: '*Please Select Event Date' }],\n    'complaintDescription':[{ type: 'required', message: '*Please Enter existingComplaint Description' }],\n    'serialNo': [{ type: 'required', message: '*Please Enter Serial no .' }],\n    'customerAddress1': [{ type: 'required', message: '*Please Enter Customer Address1' }],\n    'customerAddress2': [{ type: 'required', message: '*Please Enter Customer Customer Address 2' }],\n    'customerAddress3': [{ type: 'required', message: '*Please Enter Customer Customer Address 3' }],\n    'pinCode': [{ type: 'required', message: '*Please Enter Pin Code' }],\n    'area': [{ type: 'required', message: '*Please Select Your Area' }],\n    'serviceVendorMessage':[{ type: 'required', message: '*Please Select Service Vendor' }],\n    'skuCodeCtrlErrorMessage':[{ type: 'required', message: '*Please Enter SKU Code'}],\n    'SKUNameCtrlErrorMessage': [{ type: 'required', message: '*Please Enter SKU Name' }],\n    'brandNameCtrlErrorMessage': [{ type: 'required', message: '*Please Enter Brand Name' }],\n    'errorCodeCtrlErrorMessage':[{ type: 'required', message: '*Please Select Error Code.'}],\n  };\n  dealerList:any;designationOfComplainerList;designationOfComplainerSelected;areaList;isServiceVender = false;dealerName;\n  color='accent';isProductCompliantTab = false;isConsumablesTab = false;isEquimentTab = false;approveComplaintStatus = false;\n  venderList:any;isChecked;serialNoCheckResponse;\n  /**\n   * \n   */\n  pinCodeList: Pincode[];inValidPinCode: string;city;state;country;district;\n  selectedArea: Area;productToBeReturn;\n  area;areaSelected;areaType;areaType1;venderName;salesRepresentativeList;salesRepresentative;salesRepresentativeSelected\n  contractTypeList;contracttypeSelected;approveCheckBoxEditable=false;\n  newDealerNameSelected;errorCodeSelected;errorCodeList;\n  firstStepValid=false;\n  \n  constructor(private route: ActivatedRoute,private router: Router,\n              private formBuilder: FormBuilder,private validator: Validator,\n              private serviceManagerService: ServiceManagerService,private commonFunction: Commonfun,\n              public newcustomerservice: NewcustomerService,\n              private customerService: CustomerServiceService,\n              private alertCtrl: AlertController) { }\n\n  async ngOnInit() {\n   // console.log(this.TAG,\"ngOnInit Fired\");\n\n   // console.log(this.TAG,\"ionViewWillEnter Fired\");\n    this.route.queryParams.subscribe(params => {\n      if (params && params.special) {\n        this.existingComplaint = JSON.parse(params.special);\n       // console.log(this.TAG,JSON.parse(params.special));\n      }\n    });\n    this.detailFormGroup = this.formBuilder.group({\n      complaintNoCtrl:[,Validators.required],\n      complaintDateCtrl:[,Validators.required],\n      documentTypeCtrl:[,Validators.required],\n      nameOfComplainerCtrl: [this.existingComplaint.nameofcomplainer, Validators.required],\n      desigOfComplainerCtrl: [, Validators.required],\n      mobilenoCtrl: [, Validators.required,this.validator.numberValid],\n      emailIDCtrl:[, Validators.required, this.validator.emailValid],\n      eventDateIDCtrl:[, Validators.required, this.validator.emailValid],\n      complaintDescriptionCtrl: [, Validators.required],\n    });\n    this.productCompliantFormGroup = this.formBuilder.group({\n      lotNoCtrl:[,]\n    });\n    this.consumablesFormGroup = this.formBuilder.group({\n      lotNoConsumablesCtrl:[,]\n    });\n    this.equimentFormGroup = this.formBuilder.group({\n      serialNoCtrl: [, Validators.required],\n      dealerNameCtrl: [, Validators.required],\n      errorCode: [, Validators.required],\n      newDealerNameCtrl :[,],\n      installationDateCtrl:[,],\n      salesRepresentativeCtrl:[,]\n    });\n    this.skuDetailsFormGroup = this.formBuilder.group({\n      skuCodeCtrl:[, Validators.required],\n      skuNameCtrl:[, Validators.required],\n      brandNameCtrl:[, Validators.required]\n    });\n    this.customerDetailFormGroup = this.formBuilder.group({\n      customerAddress1Ctrl:[, Validators.required],\n      customerAddress2Ctrl:[,],\n      customerAddress3Ctrl:[,],\n      pinCodeCtrl:[, Validators.required],\n      areaCtrl:[,Validators.required],\n      city:[,Validators.required],\n      state:[,Validators.required],\n      country:[,Validators.required],\n      approveComplaintChkCtrl:[, Validators.required],\n      serviceVendorCtrl:[,Validators.required],\n      \n    });\n    this.dealerList = await (await this.serviceManagerService.getDealerList()).toPromise();\n\n    this.salesRepresentativeList = await (await this.serviceManagerService.getSalesRepresentativeList(this.existingComplaint.olddealerid)).toPromise();\n\n    // if(!!this.dealerList && Object.keys(this.dealerList).length == 0){\n    //   this.salesRepresentativeList = await (await this.serviceManagerService.getSalesRepresentativeList(\"\")).toPromise();\n    // }\n    \n\n   \n    this.venderList = await (await this.serviceManagerService.getVenderList()).toPromise();\n    \n   }\n  async ionViewWillEnter(){\n    this.commonFunction.loadingPresent();\n    this.skuDetailsFormGroup.get('skuCodeCtrl').disable();\n    this.skuDetailsFormGroup.get('skuNameCtrl').disable();\n    this.skuDetailsFormGroup.get('brandNameCtrl').disable();\n    this.bindData();\n    this.equimentFormGroup.get('installationDateCtrl').disable();\n\n    if(!!this.existingComplaint.installationdate){\n      this.approveCheckBoxEditable = true;\n    }\n    \n\n    let test : Area[] = this.existingComplaint.area;\n     this.areaList = test;\n     this.areaType = test[0];\n\n    this.docType = this.existingComplaint.doctype[0];\n    this.designationOfComplainerList = await (await this.serviceManagerService.getDesignationOfComplainerList()).toPromise();\n    for (let i = 0; i < this.designationOfComplainerList.length; i++) {\n       if(this.designationOfComplainerList[i].name == this.existingComplaint.desofcomplnr[0].name){\n          this.designationOfComplainerType = this.designationOfComplainerList[i];\n       }\n    }\n    \n    this.errorCodeList = await (await this.customerService.getErrorCodeList()).toPromise();\n    for(let i = 0; i < this.errorCodeList.length; i++){\n      if(this.errorCodeList[i].name == this.existingComplaint.errorcode[0].name){\n        this.errorCodeSelected = this.errorCodeList[i];\n      }\n    }\n\n    this.customerDetailFormGroup.controls.pinCodeCtrl.patchValue(this.existingComplaint.pincode);\n    this.customerDetailFormGroup.controls.city.patchValue(this.existingComplaint.city[0].name);\n    this.customerDetailFormGroup.controls.state.patchValue(this.existingComplaint.country[0].name);\n    this.customerDetailFormGroup.controls.country.patchValue(this.existingComplaint.state[0].name);\n    this.customerDetailFormGroup.get('city').disable();\n    this.customerDetailFormGroup.get('state').disable();\n    this.customerDetailFormGroup.get('country').disable();\n\n   this.contractTypeList = await (await this.customerService.getContractTypeList()).toPromise();\n   for (let i = 0; i < this.contractTypeList.length; i++) {\n        if(this.contractTypeList[i].code == this.existingComplaint.contracttype){\n          this.contracttypeSelected = this.contractTypeList[i].name;\n          }   \n    \n   }\n\n    this.detailFormGroup.get('documentTypeCtrl').disable();\n    if(this.existingComplaint.doctype[0].name == 'Product Compliant'){\n      this.isProductCompliantTab = true;\n      this.isConsumablesTab = false;\n      this.isEquimentTab = false;\n      this.productCompliantFormGroup.controls.lotNoCtrl.patchValue(this.existingComplaint.lotno);\n   } else if(this.existingComplaint.doctype[0].name == 'Consumables') {\n      this.isProductCompliantTab = false;\n      this.isConsumablesTab = true;\n      this.isEquimentTab = false;\n      this.consumablesFormGroup.controls.lotNoCtrl.patchValue(this.existingComplaint.lotno);\n   } else if(this.existingComplaint.doctype[0].name == 'Equipment'){\n      this.isProductCompliantTab = false;\n      this.isConsumablesTab = false;\n      this.isEquimentTab = true;\n   }\n   if(this.existingComplaint.producttobereturn==\"MSNR_N\"){\n      this.productToBeReturn = 'No';\n   } else if(this.existingComplaint.producttobereturn==\"MSNR_Y\"){\n      this.productToBeReturn = 'Yes';\n   }\n   this.commonFunction.loadingDismiss();\n  }\n  public async bindData(){\n    try {\n         this.detailFormGroup.controls.complaintNoCtrl.patchValue(this.existingComplaint.complaintno);\n         this.detailFormGroup.get('complaintNoCtrl').disable();\n         this.detailFormGroup.controls.complaintDateCtrl.patchValue(this.existingComplaint.complaintdate);\n         this.detailFormGroup.get('complaintDateCtrl').disable();\n         //this.detailFormGroup.controls.nameOfComplainerCtrl.patchValue(this.existingComplaint.nameofcomplainer);\n         this.detailFormGroup.get('documentTypeCtrl').disable();\n         \n         this.detailFormGroup.controls.mobilenoCtrl.patchValue(this.existingComplaint.contnumber);\n    \n         this.detailFormGroup.controls.emailIDCtrl.patchValue(this.existingComplaint.email);\n        \n         this.detailFormGroup.controls.eventDateIDCtrl.patchValue(this.existingComplaint.eventdate);\n         this.detailFormGroup.get('eventDateIDCtrl').disable();\n\n         this.detailFormGroup.controls.complaintDescriptionCtrl.patchValue(this.existingComplaint.description);\n\n        // this.customerDetailFormGroup.controls.approveComplaintChkCtrl.patchValue(this.existingComplaint.approvecomplaint);\n       \n        if(!!this.existingComplaint.approvecomplaint){\n          this.isServiceVender = true;\n          this.customerDetailFormGroup.get('approveComplaintChkCtrl').disable();\n          this.isChecked  = this.existingComplaint.approvecomplaint;\n          \n        }\n       \n        if(!!this.existingComplaint.newdealername){\n          \n          this.dealerList = await (await this.serviceManagerService.getDealerList()).toPromise();\n          \n          for (let i = 0; i < this.dealerList.length; i++) {\n            if(this.dealerList[i].id == this.existingComplaint.dealerid){\n              this.dealerName = this.dealerList[i];\n                // setTimeout( () => {\n                //  this.newDealerNameSelected = this.dealerList[i];\n                //  },300);\n             }\n            }\n          \n    \n\n\n        }\n\n        if(!!this.existingComplaint.salesrepid){\n\n          let dealer_id= \"\";\n          if(!!this.existingComplaint.newdealername){\n            dealer_id = this.existingComplaint.dealerid;\n          } else {\n            dealer_id = this.existingComplaint.olddealerid;\n          }\n\n          this.salesRepresentativeList = await (await this.serviceManagerService.getSalesRepresentativeList(dealer_id)).toPromise();\n         \n           for (let i = 0; i < this.salesRepresentativeList.length; i++) {\n           if(this.salesRepresentativeList[i].id == this.existingComplaint.salesrepid){\n              \n               setTimeout( () => {\n                this.salesRepresentativeSelected = this.salesRepresentativeList[i];\n                },300);\n            }\n           }\n        }\n         \n         \n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public refreshPage(){\n    try {\n      \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public matDetailSettper(form){\n    try {\n          this.detailsStepValid = true;\n       //   console.log(this.TAG,\"Form Error\",form);\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public matSettperProductCompliant(event){\n    try {\n      \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public matSettperConsumables(event){\n    try {\n      \n    } catch (error) {\n   //   console.error(this.TAG,error);\n    }\n  }\n  public matSettperSKUDetails(event){\n    try {\n      \n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public matSettperEquiment(event){\n    try {\n          this.firstStepValid = true;\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }\n  }\n  public approveComplaintCheckbox(value){\n    try {\n        //  console.log(this.TAG,\"Approve existingComplaint Checkbox\",value);\n          if(value){\n            this.isServiceVender = true;\n            this.approveComplaintStatus = true;\n             this.disFormControl(\"dis\");\n          } else {\n            this.isServiceVender = false;\n            this.approveComplaintStatus = false;\n            this.disFormControl(\"ena\");\n          }\n    } catch (error) {\n    //  console.error(this.TAG,error);\n    }\n  }\n  public disFormControl(value){\n    try {\n          if(value==\"dis\"){\n            this.detailFormGroup.get('nameOfComplainerCtrl').disable();\n            this.detailFormGroup.get('desigOfComplainerCtrl').disable();\n            this.detailFormGroup.get('mobilenoCtrl').disable();\n            this.detailFormGroup.get('emailIDCtrl').disable();\n            this.detailFormGroup.get('complaintDescriptionCtrl').disable();\n            this.productCompliantFormGroup.get('lotNoCtrl').disable();\n            this.consumablesFormGroup.get('lotNoConsumablesCtrl').disable();\n            this.equimentFormGroup.get('serialNoCtrl').disable();\n            this.equimentFormGroup.get('dealerNameCtrl').disable();\n            this.equimentFormGroup.get('newDealerNameCtrl').disable();\n            this.equimentFormGroup.get('installationDateCtrl').disable();\n\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').disable();\n            this.customerDetailFormGroup.get('customerAddress2Ctrl').disable();\n            this.customerDetailFormGroup.get('customerAddress3Ctrl').disable();\n            this.customerDetailFormGroup.get('pinCodeCtrl').disable();\n            this.customerDetailFormGroup.get('areaCtrl').disable();\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').disable();\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').disable();\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').disable();\n            this.customerDetailFormGroup.get('approveComplaintChkCtrl').disable();\n     \n\n            \n          } else if(value==\"ena\") {\n            this.detailFormGroup.get('nameOfComplainerCtrl').enable();\n            this.detailFormGroup.get('desigOfComplainerCtrl').enable();\n            this.detailFormGroup.get('mobilenoCtrl').enable();\n            this.detailFormGroup.get('emailIDCtrl').enable();\n            this.detailFormGroup.get('complaintDescriptionCtrl').enable();\n            this.productCompliantFormGroup.get('lotNoCtrl').enable();\n            this.consumablesFormGroup.get('lotNoConsumablesCtrl').enable();\n            this.equimentFormGroup.get('serialNoCtrl').enable();\n            this.equimentFormGroup.get('dealerNameCtrl').enable();\n            this.equimentFormGroup.get('newDealerNameCtrl').enable();\n            this.equimentFormGroup.get('installationDateCtrl').enable();\n\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').enable();\n            this.customerDetailFormGroup.get('customerAddress2Ctrl').enable();\n            this.customerDetailFormGroup.get('customerAddress3Ctrl').enable();\n            this.customerDetailFormGroup.get('pinCodeCtrl').enable();\n            this.customerDetailFormGroup.get('areaCtrl').enable();\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').enable();\n            this.customerDetailFormGroup.get('customerAddress1Ctrl').enable();\n\n          }\n          \n         \n\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public designationOfComplainerChange(data){\n    try {\n      \n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public docTypeSelectedChange(data){\n    try {\n      \n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public onAreaSelectedChange(){\n    try {\n          this.selectedArea = this.customerDetailFormGroup.controls['areaCtrl'].value\n        //  console.log(this.TAG,'Pravin Area Is',this.selectedArea);\n        \n          if(this.selectedArea!=null){\n            this.city = this.selectedArea.cttv$_identifier;\n           \n          }\n         \n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public onChangePinCode(id: string=''){\n    try {\n          this.newcustomerservice.getPincode(this.customerDetailFormGroup.controls[\"pinCodeCtrl\"].value).subscribe(data => {\n            const response = data['response'];\n           // console.log(this.TAG,\"Response From Pin Code\",response);\n            this.pinCodeList = response.data;\n            if (this.pinCodeList.length > 0) {\n              this.inValidPinCode = '';\n              this.newcustomerservice.getarea(this.pinCodeList[0].id).subscribe(data => {\n                const response = data['response'];\n              //  console.log(this.TAG,\"AREA LIST\",response.data);\n                this.existingComplaint.city[0].id=response.data[0].cttv;\n\n              //  console.log(this.TAG,this.existingComplaint.city[0].id);\n\n                let addressArray=[];\n                for (let j = 0; j < response.data.length; j++) {\n                   let addressObj = {\n                     \"id\": response.data[j].id,\n                     \"name\":response.data[j].area,\n                     \"cttv$_identifier\":response.data[j].cttv$_identifier\n                   }\n                   addressArray.push(addressObj);\n                }\n               this.areaList = addressArray;\n               this.existingComplaint.area=this.areaList;\n                \n                this.state = this.pinCodeList[0].region$_identifier;\n                this.existingComplaint.state[0].id = this.pinCodeList[0].region;\n\n                this.country = this.pinCodeList[0].country$_identifier;\n                this.district = this.pinCodeList[0].district$_identifier;\n\n                if (id != '' || id==undefined) {\n                  this.selectedArea = this.areaList.find(item => item.id === id);\n                  setTimeout( () => {\n                    this.customerDetailFormGroup.controls[\"areaCtrl\"].setValue(this.selectedArea);\n                  },1500);\n                }\n                \n              })\n            }\n          });\n    } catch (error) {\n    //  console.log(this.TAG,error);\n    }  \n  }\n  public async newDealerNameChange(dealer){\n    try {\n          // console.log(this.TAG,\"PRavin DEA selected\",dealer);\n           this.salesRepresentativeList = await (await this.serviceManagerService.getSalesRepresentativeList(dealer.id)).toPromise();\n          // console.log(this.TAG,\"Sales Representative list\",this.salesRepresentativeList);\n    } catch (error) {\n      console.error(this.TAG,error);\n    }\n  }\n  public salesRepresentativeChange(value){\n    try {\n      \n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  async presentAlert(Header: string, SubHeader: string, Message: string) {\n    const alert = await this.alertCtrl.create({\n      header: Header,\n      subHeader: SubHeader,\n      message: Message,\n      buttons: [{\n        text: \"OK\",\n        handler: (ok) => {\n          \n          this.router.navigateByUrl('/service-manager');\n        }\n      }]\n    });\n    alert.dismiss(() => console.log('The alert has been closed.'));\n    await alert.present();\n  }\n  public errorCodeSelectedSelectedChange(data){\n    try {\n\n    } catch (error) {\n     // console.log(this.TAG,error);\n    }\n  }\n  public async onCheckInstallationBase(){\n    try {\n          this.commonFunction.loadingPresent();\n          this.serialNoCheckResponse = \"\";\n          let serialNo = this.equimentFormGroup.get('serialNoCtrl').value ? this.equimentFormGroup.get('serialNoCtrl').value : '';\n          this.existingComplaint.serialno = serialNo;\n          this.serialNoCheckResponse =  await (await this.customerService.checkSerialNumber(serialNo,\"2020-12-31\")).toPromise();\n          console.log(this.TAG,\"Installation Base Data\",this.serialNoCheckResponse);\n          \n          if(Object.keys(this.serialNoCheckResponse).length != 0){\n            \n            if(!!this.serialNoCheckResponse.contracttype){\n              for (let i = 0; i < this.contractTypeList.length; i++) {\n                if(this.contractTypeList[i].code == this.serialNoCheckResponse.contracttype){\n                  this.contracttypeSelected = this.contractTypeList[i].name;\n                  this.existingComplaint.contracttype = this.contractTypeList[i].code;\n                 }   \n             }\n            }\n\n            if(!!this.serialNoCheckResponse.invoiceno){\n             // this.equimentFormGroup.controls[\"invoiceNoCtrl\"].setValue(this.serialNoCheckResponse.invoiceno);\n             // this.equimentFormGroup.get('invoiceNoCtrl').disable();\n             this.existingComplaint.invoiceno = this.serialNoCheckResponse.invoiceno;\n            } else {\n              this.existingComplaint.invoiceno = \"\";\n            }\n            if(!!this.serialNoCheckResponse.invoicedate){\n              this.serialNoCheckResponse.invoicedate = this.serialNoCheckResponse.invoicedate.split(' ')[0];\n             // this.equimentFormGroup.controls[\"invoiceDateCtrl\"].setValue(this.serialNoCheckResponse.invoicedate);\n              \n             this.existingComplaint.invoicedate = this.serialNoCheckResponse.invoicedate.split(' ')[0];\n            } else {\n              this.existingComplaint.invoicedate = \"\";\n            }\n            if(!!this.serialNoCheckResponse.dealername){\n             // this.equimentFormGroup.controls[\"dealerNameCtrl\"].setValue(this.serialNoCheckResponse.dealername);\n            //  this.equimentFormGroup.get('dealerNameCtrl').disable();\n                this.existingComplaint.dealername = this.serialNoCheckResponse.dealername;\n                if(!!this.serialNoCheckResponse.dealerid){\n                  this.salesRepresentativeList = await (await this.serviceManagerService.getSalesRepresentativeList(this.serialNoCheckResponse.dealerid)).toPromise();\n                }\n            } else {\n              this.equimentFormGroup.controls[\"dealerNameCtrl\"].setValue(\"\");\n            }\n\n            if(!!this.serialNoCheckResponse.installationdate){\n              this.serialNoCheckResponse.installationdate = this.serialNoCheckResponse.installationdate.split(' ')[0];\n            //  this.equimentFormGroup.controls[\"installationDateCtrl\"].setValue(this.serialNoCheckResponse.installationdate);\n              this.equimentFormGroup.get('installationDateCtrl').disable();\n             this.existingComplaint.installationdate = this.serialNoCheckResponse.installationdate;\n             this.approveCheckBoxEditable = true;\n            } else {\n              //this.equimentFormGroup.controls[\"installationDateCtrl\"].setValue(\"\");\n              this.existingComplaint.installationdate = \"\";\n            }\n            if(!!this.serialNoCheckResponse.sku){\n              this.skuDetailsFormGroup.controls[\"skuCodeCtrl\"].setValue(this.serialNoCheckResponse.sku);\n              this.skuDetailsFormGroup.get('skuCodeCtrl').disable();\n              this.existingComplaint.skucode = this.serialNoCheckResponse.sku;\n            } else {\n              this.skuDetailsFormGroup.controls[\"skuCodeCtrl\"].setValue(\"\");\n            }\n            if(!!this.serialNoCheckResponse.sku){\n              this.skuDetailsFormGroup.controls[\"skuNameCtrl\"].setValue(this.serialNoCheckResponse.skuname);\n              this.skuDetailsFormGroup.get('skuNameCtrl').disable();\n              this.existingComplaint.skuname = this.serialNoCheckResponse.skuname;\n            } else {\n              this.skuDetailsFormGroup.controls[\"skuNameCtrl\"].setValue(\"\");\n            }\n            if(!!this.serialNoCheckResponse.brand){\n              this.skuDetailsFormGroup.controls[\"brandNameCtrl\"].setValue(this.serialNoCheckResponse.brand);\n              this.skuDetailsFormGroup.get('brandNameCtrl').disable();\n              this.existingComplaint.brandname = this.serialNoCheckResponse.brand;\n            } else {\n              this.skuDetailsFormGroup.controls[\"brandNameCtrl\"].setValue(\"\");\n            }\n\n          } else {\n            this.equimentFormGroup.reset();\n            this.equimentFormGroup.enable();\n            this.equimentFormGroup.controls[\"serialNo\"].setValue(serialNo);\n            this.skuDetailsFormGroup.reset();\n            this.skuDetailsFormGroup.enable();\n           \n        }\n         \n          this.commonFunction.loadingDismiss();\n     \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public async submit(event){\n    try {\n          let date =  this.equimentFormGroup.get('installationDateCtrl').value ? this.equimentFormGroup.get('installationDateCtrl').value: '';\n           if(date === '' || date === null || date === undefined){\n             //this.presentAlert(\"Compliant Report Details\",\"\",\"Installation Date Can Not Be Blank\");\n             this.commonFunction.presentAlert(\"Compliant Report Details\",\"\",\"Installation Date Can Not Be Blank\");\n           } else {\n            this.commonFunction.loadingPresent();\n            let approveComplain:Complain = new Complain();\n            approveComplain.complaint_no = this.existingComplaint.complaintno;\n            approveComplain.complaintid = this.existingComplaint.complaintid;\n            approveComplain.complaint_date = this.existingComplaint.complaintdate;\n            approveComplain.doctype = this.existingComplaint.doctype[0].id;\n            approveComplain.nameofcomplainer =  this.detailFormGroup.get('nameOfComplainerCtrl').value ? this.detailFormGroup.get('nameOfComplainerCtrl').value :'';\n            approveComplain.desofcomplnr = this.detailFormGroup.get('desigOfComplainerCtrl').value.id ? this.detailFormGroup.get('desigOfComplainerCtrl').value.id :'';\n            approveComplain.contnumber = this.detailFormGroup.get('mobilenoCtrl').value ? this.detailFormGroup.get('mobilenoCtrl').value.toString() : '';\n            approveComplain.email = this.detailFormGroup.get('emailIDCtrl').value ? this.detailFormGroup.get('emailIDCtrl').value : '';\n            approveComplain.eventdate = this.existingComplaint.eventdate;\n            approveComplain.description = this.detailFormGroup.get('complaintDescriptionCtrl').value ? this.detailFormGroup.get('complaintDescriptionCtrl').value : '';\n            approveComplain.lotno = this.consumablesFormGroup.get('lotNoConsumablesCtrl').value ? this.consumablesFormGroup.get('lotNoConsumablesCtrl').value : '';\n            approveComplain.serialno = this.existingComplaint.serialno ? this.existingComplaint.serialno:\"\";\n            approveComplain.srnoequipment = this.existingComplaint.srnoequipment;\n            approveComplain.contracttype  = this.existingComplaint.contracttype;\n            approveComplain.invoiceno = this.existingComplaint.invoiceno;\n            approveComplain.invoicedate=this.existingComplaint.invoicedate;\n            approveComplain.errorcode= this.errorCodeSelected.id ? this.errorCodeSelected.id: '';\n            approveComplain.dealername = this.equimentFormGroup.get('dealerNameCtrl').value ? this.equimentFormGroup.get('dealerNameCtrl').value: '';\n            approveComplain.newdealername = this.equimentFormGroup.get('newDealerNameCtrl').value ? this.equimentFormGroup.get('newDealerNameCtrl').value.id: '';\n            approveComplain.salesrepresentative = this.equimentFormGroup.get('salesRepresentativeCtrl').value ? this.equimentFormGroup.get('salesRepresentativeCtrl').value.name: '';\n            approveComplain.installationdate = this.equimentFormGroup.get('installationDateCtrl').value ? this.equimentFormGroup.get('installationDateCtrl').value: '';\n            \n            approveComplain.skucode = this.existingComplaint.skucode;\n            approveComplain.skuname = this.existingComplaint.skuname;\n            approveComplain.brandname = this.existingComplaint.brandname;\n            approveComplain.producttobereturn = this.existingComplaint.producttobereturn;\n \n            approveComplain.custname = this.existingComplaint.custname;\n            approveComplain.add1 = this.customerDetailFormGroup.get('customerAddress1Ctrl').value ? this.customerDetailFormGroup.get('customerAddress1Ctrl').value : '';\n            approveComplain.add2 = this.customerDetailFormGroup.get('customerAddress2Ctrl').value ? this.customerDetailFormGroup.get('customerAddress2Ctrl').value : '';\n            approveComplain.add3 = this.customerDetailFormGroup.get('customerAddress3Ctrl').value ? this.customerDetailFormGroup.get('customerAddress3Ctrl').value : '';\n            \n            approveComplain.pincode = this.customerDetailFormGroup.get('pinCodeCtrl').value ? this.customerDetailFormGroup.get('pinCodeCtrl').value : '';\n            let area = this.customerDetailFormGroup.get('areaCtrl').value ? this.customerDetailFormGroup.get('areaCtrl').value : '';\n            approveComplain.area = area.id;\n            approveComplain.city = this.existingComplaint.city[0].id;\n            approveComplain.state = this.existingComplaint.state[0].id;\n            approveComplain.country = this.existingComplaint.country[0].id;\n            approveComplain.appcomplaint = \"true\";\n            approveComplain.servicevendor = this.customerDetailFormGroup.get('serviceVendorCtrl').value ? this.customerDetailFormGroup.get('serviceVendorCtrl').value.id : '';\n            approveComplain.assigntoservvendor = \"true\";\n            \n \n          //  console.log(this.TAG,\"Final Service Manager Form\",approveComplain);\n            let saveComplainResponse =  await this.customerService.saveComplain(approveComplain).toPromise();\n          //  console.log(this.TAG,\"Response From Save Complain\",saveComplainResponse);\n            if(saveComplainResponse){\n               this.presentAlert(\"Compliant Report Details\",\"\",saveComplainResponse.msg);\n            } else {\n               this.presentAlert(\"Compliant Report Details\",\"\",\"Something went wrong please try again\"+saveComplainResponse.msg);\n            }\n            this.commonFunction.loadingDismiss();\n           }\n          \n    } catch (error) {\n      this.commonFunction.loadingDismiss();\n     // console.error(this.TAG,error);\n    }\n  }\n\n}\n"],"sourceRoot":""}