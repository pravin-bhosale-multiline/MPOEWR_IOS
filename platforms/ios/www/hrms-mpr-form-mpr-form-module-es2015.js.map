{"version":3,"sources":["./src/app/hrms/mpr-form/mpr-form.page.html","./src/app/hrms/mpr-form/mpr-form.module.ts","./src/app/hrms/mpr-form/mpr-form.page.scss","./src/app/hrms/mpr-form/mpr-form.page.ts"],"names":[],"mappings":"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","file":"hrms-mpr-form-mpr-form-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button *ngIf=\\\"!existingMPRStatus\\\"></ion-menu-button>\\n      <ion-back-button *ngIf=\\\"existingMPRStatus\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      MPR Form\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\" routerDirection=\\\"root\\\" routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-buttons (click)=\\\"refreshPage()\\\" slot=\\\"end\\\" style=\\\"font-size: 1.8rem;\\\">\\n      <ion-icon name=\\\"refresh\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"MPRForm\\\">\\n    <ion-grid>\\n      <ion-card>\\n        <!-- Organization -->\\n        \\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Organization<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select placeholder=\\\"Select Organization\\\" [formControl]=\\\"MPRForm.controls['organizationDropDown']\\\" \\n                  interface=\\\"popover\\\" [(ngModel)]=\\\"selectedOrganization\\\" (ionChange)=\\\"onOrganizationChange()\\\">\\n                  <ion-select-option *ngFor=\\\"let organization of organizationList\\\" [value]=\\\"organization\\\">{{organization.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.organizationDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('organizationDropDown').hasError(validation.type) && MPRForm.get('organizationDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n        <!-- Activity -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Activity</ion-label>\\n              <ion-input [value]=\\\"activityLbl\\\" disabled=\\\"true\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        <!-- Tagged HR Branch -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Tagged HR Branch</ion-label>\\n              <ion-input [value]=\\\"taggedHRBranchLbl\\\" disabled=\\\"true\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <!-- Document Status -->\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Reason for MPR<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select placeholder=\\\"Select Reason for MPR\\\" [formControl]=\\\"MPRForm.controls['reasonForMPRDropDown']\\\" interface=\\\"popover\\\"\\n                  (ionChange)=\\\"onReasonForMPRChange()\\\">\\n                  <ion-select-option *ngFor=\\\"let reason of reasonForMPRList\\\" [value]=\\\"reason\\\">{{reason.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.reasonForMPRDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('reasonForMPRDropDown').hasError(validation.type) && MPRForm.get('reasonForMPRDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <!-- Reason for MPR -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">JOB Title<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                  <ion-select placeholder=\\\"Select JOB Title\\\" [formControl]=\\\"MPRForm.controls['jobTitleDropDown']\\\" interface=\\\"popover\\\"\\n                    (ionChange)=\\\"onJobTitleChange()\\\" [(ngModel)]=\\\"selectedJOBTitle\\\">\\n                    <ion-select-option *ngFor=\\\"let  jobTitle of jobTitleList\\\" [value]=\\\"jobTitle\\\">{{jobTitle.JobTitle}}</ion-select-option>\\n                  </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.jobTitleDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('jobTitleDropDown').hasError(validation.type) && MPRForm.get('jobTitleDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <!-- JOB Title -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Grade<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select placeholder=\\\"Select Grade\\\" [formControl]=\\\"MPRForm.controls['gradeDropDown']\\\" interface=\\\"popover\\\"\\n                  (ionChange)=\\\"onGradeChange()\\\" [(ngModel)]=\\\"selectedGrade\\\">\\n                  <ion-select-option *ngFor=\\\"let grade of gradeList\\\" [value]=\\\"grade\\\">{{grade.gradename}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.gradeDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('gradeDropDown').hasError(validation.type) && MPRForm.get('gradeDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <!-- Grade -->\\n        \\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Designation / Role<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                  <ion-select placeholder=\\\"Select Designation / Role\\\" [formControl]=\\\"MPRForm.controls['designationOrRoleDropDown']\\\" interface=\\\"popover\\\"\\n                    (ionChange)=\\\"onDesignationOrRoleChange()\\\" [(ngModel)]=\\\"selectedDesignation\\\">\\n                    <ion-select-option *ngFor=\\\"let designationOrRole of designationOrRoleList\\\" [value]=\\\"designationOrRole\\\">{{designationOrRole.rolename}}</ion-select-option>\\n                  </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.designationOrRoleDropDownErrorMessage\\\">\\n                <div\\n                  *ngIf=\\\"MPRForm.get('designationOrRoleDropDown').hasError(validation.type) && MPRForm.get('designationOrRoleDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <!-- Designation / Role -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Department<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                  <ion-select placeholder=\\\"Select Department\\\" [formControl]=\\\"MPRForm.controls['departmentDropDown']\\\" interface=\\\"popover\\\"\\n                    (ionChange)=\\\"onDepartmentChange()\\\" [(ngModel)]=\\\"selectedDepartment\\\">\\n                    <ion-select-option *ngFor=\\\"let department of departmentList\\\" [value]=\\\"department\\\">{{department.departmentname}}</ion-select-option>\\n                  </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.departmentDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('departmentDropDown').hasError(validation.type) && MPRForm.get('departmentDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <!-- Department -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Location<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select id=\\\"demo\\\" class=\\\"ion-text-wrap select-text demo\\\" placeholder=\\\"Select Location\\\" [formControl]=\\\"MPRForm.controls['locationDropDown']\\\" interface=\\\"popover\\\"\\n                  (ionChange)=\\\"onLocationChange()\\\" [(ngModel)]=\\\"selectedLocation\\\">\\n                  <ion-select-option *ngFor=\\\"let location of locationList\\\" [value]=\\\"location\\\">{{location.locationname}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.locationDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('locationDropDown').hasError(validation.type) && MPRForm.get('locationDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\" class=\\\"asterisk_input\\\">Number of Position</ion-label>\\n              <ion-input type=\\\"text\\\" [formControl]=\\\"MPRForm.controls['numberOfPositionTxt']\\\"></ion-input>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.numberOfPositionTxtErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('numberOfPositionTxt').hasError(validation.type) && MPRForm.get('numberOfPositionTxt').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Position Closed</ion-label>\\n              <ion-input type=\\\"text\\\" [formControl]=\\\"MPRForm.controls['positionClosedTxt']\\\" disabled=\\\"true\\\"></ion-input>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.positionClosedTxtErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('positionClosedTxt').hasError(validation.type) && MPRForm.get('positionClosedTxt').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-label class=\\\"asterisk_input item-custom-label\\\">Work Experience</ion-label>\\n            <ion-item>\\n              <ion-range min=\\\"0\\\" max=\\\"50\\\" dual-knobs=\\\"true\\\" class=\\\"custom-range\\\"  (ionChange)=\\\"onWorkExperienceChange(workExperienceModel)\\\" [(ngModel)]=\\\"workExperienceModel\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" pin=\\\"true\\\">\\n              <ion-label slot=\\\"start\\\">{{workExperienceModel_lower}}</ion-label>\\n              <ion-label slot=\\\"end\\\">{{workExperienceModel_upper}}</ion-label>\\n            </ion-range>\\n          </ion-item>\\n          </ion-col>  \\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-label class=\\\"asterisk_input item-custom-label\\\">CTC Range (Per Annum)</ion-label>\\n            <ion-item>\\n                <ion-range min=\\\"0\\\" max=\\\"100\\\" dual-knobs=\\\"true\\\" class=\\\"custom-range\\\" (ionChange)=\\\"onCTCRangeChange(CTCRangeModel)\\\" [(ngModel)]=\\\"CTCRangeModel\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" pin=\\\"true\\\">\\n                <ion-label slot=\\\"start\\\">{{CTCRangeModel_lower}}</ion-label>\\n                <ion-label slot=\\\"end\\\">{{CTCRangeModel_upper}}{{maxCTCLbl}}</ion-label>\\n              </ion-range>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-label class=\\\"asterisk_input item-custom-label\\\">Age Range</ion-label>\\n            <ion-item>\\n                <ion-range min=\\\"0\\\" max=\\\"100\\\" dual-knobs=\\\"true\\\" class=\\\"custom-range\\\" (ionChange)=\\\"onAgeRangeChange(AgeRangeModel)\\\" [(ngModel)]=\\\"AgeRangeModel\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" pin=\\\"true\\\">\\n                <ion-label slot=\\\"start\\\">{{AgeRangeModel_lower}}</ion-label>\\n                <ion-label slot=\\\"end\\\">{{AgeRangeModel_upper}}</ion-label>\\n              </ion-range>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Job Listing<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                  <ion-select placeholder=\\\"Select Job Listing\\\" [formControl]=\\\"MPRForm.controls['jobListingDropDown']\\\" interface=\\\"popover\\\"\\n                    (ionChange)=\\\"onLocationChange()\\\" [(ngModel)]=\\\"selectedJobListing\\\">\\n                    <ion-select-option *ngFor=\\\"let jobListing of jobListingList\\\" [value]=\\\"jobListing\\\">{{jobListing.name}}</ion-select-option>\\n                  </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.jobListingDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('jobListingDropDown').hasError(validation.type) && MPRForm.get('jobListingDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label>On Company Roll</ion-label>\\n              <ion-toggle slot=\\\"end\\\" [formControl]=\\\"MPRForm.controls['onCompanyRollChk']\\\"></ion-toggle>\\n           </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card>\\n      \\n      <ion-card>\\n        <ion-row>\\n          <ion-col size=\\\"9\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Qualification<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select placeholder=\\\"Select Qualification\\\" [formControl]=\\\"MPRForm.controls['qualificationDropDown']\\\" interface=\\\"popover\\\"\\n                  (ionChange)=\\\"onQualificationChange()\\\" [(ngModel)]=\\\"selectedQualification\\\">\\n                  <ion-select-option *ngFor=\\\"let qualification of qualificationList\\\" [value]=\\\"qualification\\\">{{qualification.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.qualificationDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('qualificationDropDown').hasError(validation.type) && MPRForm.get('qualificationDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"3\\\" class=\\\"add-qualification_btn\\\">\\n            <button mat-raised-button color=\\\"add-button-color\\\" (click)=\\\"onAddQualification()\\\" class=\\\"add-button-color\\\" [disabled]=\\\"MPRForm.controls['qualificationDropDown'].hasError('required')\\\">Add</button>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-card>\\n              <ion-list>\\n                <ion-item lines=\\\"none\\\" style=\\\"--background:darkgray !important;max-width: 100% !important;\\\">\\n                  <ion-label>Qualification</ion-label>\\n                </ion-item>  \\n                <ion-item lines=\\\"none\\\" [color]=\\\"even? 'drak-gray' : 'white'\\\" *ngFor=\\\"let selectedQualification of selectedQualificationList;let even = even\\\" \\n                          style=\\\"max-width: 100% !important;\\\">\\n                  <ion-label>{{selectedQualification.name}}</ion-label>\\n                  <button mat-icon-button (click)=\\\"removeSelectedQualification(selectedQualification)\\\">\\n                    <mat-icon>delete</mat-icon>\\n                  </button>\\n                </ion-item>\\n              </ion-list>\\n            </ion-card>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card>\\n      \\n      <ion-card>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item style=\\\"max-width: 100% !important;\\\">\\n              <ion-label position=\\\"stacked\\\" class=\\\"asterisk_input\\\">Job Description</ion-label>\\n              <ion-textarea type=\\\"text\\\" auto-grow=\\\"true\\\" [formControl]=\\\"MPRForm.controls['jobDescriptionTxt']\\\"></ion-textarea>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.jobDescriptionTxtErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('jobDescriptionTxt').hasError(validation.type) && MPRForm.get('jobDescriptionTxt').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"add-resource-btn\\\">\\n            <button mat-raised-button color=\\\"add-button-color\\\" (click)=\\\"onSaveJD()\\\" class=\\\"add-button-color\\\" [disabled]=\\\"disable_save_jd_btn\\\">Save</button>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-card>\\n              <ion-list>\\n                <ion-item lines=\\\"none\\\" style=\\\"--background:darkgray !important;max-width: 100% !important;\\\">\\n                  <ion-label>Job Descriptions</ion-label>\\n                </ion-item>  \\n                <ion-item lines=\\\"none\\\" [color]=\\\"even? 'drak-gray' : 'white'\\\" *ngFor=\\\"let jobDescription of jobDescriptionList;let even = even\\\" \\n                          style=\\\"max-width: 100% !important;\\\">\\n                  <ion-label>{{jobDescription.job_description}}</ion-label>\\n                  <button mat-icon-button (click)=\\\"editSelectedJobDescription(jobDescription)\\\">\\n                    <mat-icon>edit</mat-icon>\\n                  </button>\\n                </ion-item>\\n              </ion-list>\\n            </ion-card>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card>\\n      \\n      <ion-card>\\n        <ion-row>\\n          <!-- Resource Requirement * -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Resource Requirement<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select placeholder=\\\"Select Resource Requirement\\\" [formControl]=\\\"MPRForm.controls['resourceRequirementDropDown']\\\" interface=\\\"popover\\\"\\n                  (ionChange)=\\\"onLocationChange()\\\">\\n                  <ion-select-option *ngFor=\\\"let resourceRequirement of resourceRequirementMasterList\\\" [value]=\\\"resourceRequirement\\\">{{resourceRequirement.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.resourceRequirementDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('resourceRequirementDropDown').hasError(validation.type) && MPRForm.get('resourceRequirementDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <!-- Resource Department  -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Department<span style=\\\"color:red!important\\\">*</span></ion-label>\\n                <ion-select placeholder=\\\"Select Department\\\" [formControl]=\\\"MPRForm.controls['resourceDepartmentDropDown']\\\" interface=\\\"popover\\\"\\n                  (ionChange)=\\\"onLocationChange()\\\">\\n                  <ion-select-option *ngFor=\\\"let resourceDepartment of resourceDepartmentMasterList\\\" [value]=\\\"resourceDepartment\\\">{{resourceDepartment.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.resourceDepartmentDropDownErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('resourceDepartmentDropDown').hasError(validation.type) && MPRForm.get('resourceDepartmentDropDown').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <!-- Required  -->\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\" class=\\\"resource-required\\\">\\n            <ion-item>\\n              <ion-label>Required</ion-label>\\n              <ion-toggle slot=\\\"end\\\" [formControl]=\\\"MPRForm.controls['resourceRequiredChk']\\\"></ion-toggle>\\n            </ion-item>\\n            <div padding-left class=\\\"custom-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.resourceRequiredChkErrorMessage\\\">\\n                <div *ngIf=\\\"MPRForm.get('resourceRequiredChk').hasError(validation.type) && MPRForm.get('resourceRequiredChk').touched\\\">\\n                  <p style=\\\"color: red;font-size: small;\\\">{{validation.message}}</p>\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-lg=\\\"3\\\" class=\\\"add-resource-btn\\\">\\n            <button mat-raised-button color=\\\"add-button-color\\\" (click)=\\\"onAddResourceRequirement()\\\" class=\\\"add-button-color\\\" [disabled]=\\\"MPRForm.controls['resourceRequirementDropDown'].hasError('required') || MPRForm.controls['resourceDepartmentDropDown'].hasError('required')\\\">Add</button>\\n          </ion-col>\\n        </ion-row>\\n        \\n        <ion-row>\\n          <ion-col>\\n          <ion-card>\\n          <ion-row>\\n            <ion-col no-padding class=\\\"ion-no-margin\\\">\\n              <ion-item lines=\\\"none\\\" style=\\\"--background:darkgray !important;max-width: 100% !important;\\\">\\n                <ion-label>Requirement</ion-label>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col no-padding class=\\\"ion-no-margin\\\">\\n              <ion-item lines=\\\"none\\\" style=\\\"--background:darkgray !important;max-width: 100% !important;\\\"><ion-label>Department</ion-label></ion-item> \\n            </ion-col>\\n            <ion-col no-padding class=\\\"ion-no-margin\\\">\\n              <ion-item lines=\\\"none\\\" style=\\\"--background:darkgray !important;max-width: 100% !important;\\\"><ion-label>Required</ion-label></ion-item> \\n            </ion-col>\\n          </ion-row>\\n          \\n          <ion-row>\\n            <ion-col>\\n              <ion-list>\\n                 <ion-item lines=\\\"none\\\" [color]=\\\"even? 'drak-gray' : 'white'\\\" *ngFor=\\\"let resourceRequirement of resource_requirement_List;let even = even\\\" \\n                          style=\\\"max-width: 100% !important;\\\">\\n                  <ion-label class=\\\"font-for-mobile\\\">{{resourceRequirement.Resource_requirement.name}}</ion-label>\\n                  <ion-label class=\\\"font-for-mobile\\\">{{resourceRequirement.Department.name}}</ion-label>\\n                  <!-- <ion-label class=\\\"font-for-mobile\\\">{{resourceRequirement.Required.isrequired ? \\\"YES\\\":\\\"NO\\\"}}</ion-label> -->\\n                  <button mat-icon-button (click)=\\\"removeResourceRequirement(resourceRequirement)\\\">\\n                    <mat-icon>delete</mat-icon>\\n                  </button>\\n                 </ion-item>\\n              </ion-list>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card>\\n      </ion-col>\\n        </ion-row>\\n        \\n      </ion-card>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n<ion-footer class=\\\"footer-back-color\\\">\\n  <ion-row *ngIf=\\\"!existingMPRStatus\\\">\\n    <ion-button style=\\\"width: 100%;\\\" no-margin (click)=\\\"onMPRFormSubmit(MPRForm,'NOT')\\\"  color=\\\"primary\\\"  size=\\\"large\\\" expand=\\\"full\\\" fill=\\\"outline\\\" \\n        class=\\\"footer-btn-color\\\" [disabled]=\\\"!MPRForm.valid\\\">\\n        <ion-label style=\\\"color: white;\\\">Complete</ion-label>\\n    </ion-button>\\n  </ion-row>\\n  <ion-row *ngIf=\\\"existingMPRStatus\\\">\\n    <ion-col>\\n      <ion-button no-margin class=\\\"footer-btn-color\\\" color=\\\"primary\\\" size=\\\"large\\\" expand=\\\"full\\\" fill=\\\"outline\\\" (click)=\\\"onMPRFormSubmit(MPRForm,'true')\\\"> <ion-label style=\\\"color: white;\\\">Approved</ion-label></ion-button>\\n    </ion-col>\\n    <ion-col>\\n      <ion-button no-margin class=\\\"footer-btn-color\\\"  color=\\\"primary\\\" size=\\\"large\\\" expand=\\\"full\\\" fill=\\\"outline\\\" (click)=\\\"onMPRFormSubmit(MPRForm,'false')\\\"> <ion-label style=\\\"color: white;\\\">DisApproved</ion-label>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n  \\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MprFormPage } from './mpr-form.page';\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\nimport { MaterialModule } from 'src/app/material.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MprFormPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MaterialModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MprFormPage]\n})\nexport class MprFormPageModule {}\n","module.exports = \".example-full-width {\\n  width: 100%;\\n}\\n\\n.custom-error {\\n  padding-left: 15px;\\n}\\n\\n.footer-back-color {\\n  background-color: white;\\n}\\n\\n.footer-btn-color {\\n  background-color: #F39E20 !important;\\n}\\n\\n.add-qualification_btn {\\n  margin-top: 32px;\\n}\\n\\n.add-button-color {\\n  background-color: #F39E20 !important;\\n}\\n\\n@media only screen and (min-height: 768px) and (min-width: 768px) {\\n  .resource-required {\\n    padding-top: 27px;\\n  }\\n}\\n\\n@media (max-width: 820px) {\\n  .font-for-mobile {\\n    font-size: small;\\n  }\\n}\\n\\n::ng-deep .select-text {\\n  white-space: pre-line !important;\\n}\\n\\n.back {\\n  background-color: aqua;\\n  margin: 2px;\\n  padding: 5px;\\n  border-radius: 10px;\\n}\\n\\n.item-custom-label {\\n  margin-left: 16px;\\n  color: black;\\n}\\n\\n.add-resource-btn {\\n  padding-left: 16px !important;\\n}\\n\\n.custom-range {\\n  --knob-background: #F39E20;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyMjIwMTg0L0RvY3VtZW50cy9NX1BPV0VSX0xJVkUvUHJpc21CYWNrVXAvc3JjL2FwcC9ocm1zL21wci1mb3JtL21wci1mb3JtLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaHJtcy9tcHItZm9ybS9tcHItZm9ybS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FEUUE7RUFDRSxrQkFBQTtBQ0xGOztBRE9BO0VBQ0UsdUJBQUE7QUNKRjs7QURNQTtFQUNFLG9DQUFBO0FDSEY7O0FES0E7RUFDRSxnQkFBQTtBQ0ZGOztBRE1BO0VBQ0Usb0NBQUE7QUNIRjs7QURNQTtFQUNFO0lBQ0UsaUJBQUE7RUNIRjtBQUNGOztBREtBO0VBQ0U7SUFDRyxnQkFBQTtFQ0hIO0FBQ0Y7O0FET0U7RUFDRSxnQ0FBQTtBQ0xKOztBRFFBO0VBQ0Usc0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FDTEY7O0FET0E7RUFDRSxpQkFBQTtFQUNBLFlBQUE7QUNKRjs7QURNQTtFQUNFLDZCQUFBO0FDSEY7O0FES0E7RUFDRSwwQkFBQTtBQ0ZGIiwiZmlsZSI6InNyYy9hcHAvaHJtcy9tcHItZm9ybS9tcHItZm9ybS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuLnJvdW5kZWQtY29ybmVye1xuICAvL2JvcmRlci1yYWRpdXM6IDIwcHg7XG4gIC8vYm9yZGVyOiAycHggc29saWQgIzg3OGE4NDtcbiAgLy9wYWRkaW5nOiAyMHB4O1xuICAvL3dpZHRoOiAyMDBweDtcbiAgLy9oZWlnaHQ6IDE1MHB4O1xufVxuLmN1c3RvbS1lcnJvcntcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuLmZvb3Rlci1iYWNrLWNvbG9ye1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cbi5mb290ZXItYnRuLWNvbG9ye1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjM5RTIwICFpbXBvcnRhbnQ7XG59XG4uYWRkLXF1YWxpZmljYXRpb25fYnRue1xuICBtYXJnaW4tdG9wOiAzMnB4O1xuLy8gIHRleHQtYWxpZ246IGVuZDtcbiAvLyBtYXJnaW4tcmlnaHQ6IDE4cHg7XG59XG4uYWRkLWJ1dHRvbi1jb2xvcntcbiAgYmFja2dyb3VuZC1jb2xvcjogI0YzOUUyMCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4taGVpZ2h0OiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgLnJlc291cmNlLXJlcXVpcmVke1xuICAgIHBhZGRpbmctdG9wOiAyN3B4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogODIwcHgpIHtcbiAgLmZvbnQtZm9yLW1vYmlsZSB7XG4gICAgIGZvbnQtc2l6ZTogc21hbGw7XG4gIH1cbn1cblxuOjpuZy1kZWVwe1xuICAuc2VsZWN0LXRleHR7XG4gICAgd2hpdGUtc3BhY2U6cHJlLWxpbmUgIWltcG9ydGFudDtcbiAgfVxufVxuLmJhY2sgeyBcbiAgYmFja2dyb3VuZC1jb2xvcjogYXF1YTtcbiAgbWFyZ2luOiAycHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbi5pdGVtLWN1c3RvbS1sYWJlbHtcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5hZGQtcmVzb3VyY2UtYnRue1xuICBwYWRkaW5nLWxlZnQ6IDE2cHggIWltcG9ydGFudDtcbn1cbi5jdXN0b20tcmFuZ2V7XG4gIC0ta25vYi1iYWNrZ3JvdW5kXHQ6ICNGMzlFMjA7XG59IiwiLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY3VzdG9tLWVycm9yIHtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG4uZm9vdGVyLWJhY2stY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLmZvb3Rlci1idG4tY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjM5RTIwICFpbXBvcnRhbnQ7XG59XG5cbi5hZGQtcXVhbGlmaWNhdGlvbl9idG4ge1xuICBtYXJnaW4tdG9wOiAzMnB4O1xufVxuXG4uYWRkLWJ1dHRvbi1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGMzlFMjAgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWhlaWdodDogNzY4cHgpIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAucmVzb3VyY2UtcmVxdWlyZWQge1xuICAgIHBhZGRpbmctdG9wOiAyN3B4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogODIwcHgpIHtcbiAgLmZvbnQtZm9yLW1vYmlsZSB7XG4gICAgZm9udC1zaXplOiBzbWFsbDtcbiAgfVxufVxuOjpuZy1kZWVwIC5zZWxlY3QtdGV4dCB7XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZSAhaW1wb3J0YW50O1xufVxuXG4uYmFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XG4gIG1hcmdpbjogMnB4O1xuICBwYWRkaW5nOiA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5pdGVtLWN1c3RvbS1sYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiAxNnB4O1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5hZGQtcmVzb3VyY2UtYnRuIHtcbiAgcGFkZGluZy1sZWZ0OiAxNnB4ICFpbXBvcnRhbnQ7XG59XG5cbi5jdXN0b20tcmFuZ2Uge1xuICAtLWtub2ItYmFja2dyb3VuZDogI0YzOUUyMDtcbn0iXX0= */\"","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Commonfun } from 'src/provider/commonfun';\nimport { Message } from 'src/provider/message-helper';\nimport { MprFormService } from '../mpr-form.service';\nimport { LoginauthService } from 'src/app/login/loginauth.service';\nimport { ColumnMode, SelectionType } from '@swimlane/ngx-datatable';\nimport { Page } from 'src/app/order-approval/show-approval-details-modal/show-approval-details-modal.page';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-mpr-form',\n  templateUrl: './mpr-form.page.html',\n  styleUrls: ['./mpr-form.page.scss'],\n})\nexport class MprFormPage implements OnInit {\n\n // @ViewChild('myInput',{static: false}) myInput: ElementRef;\n\n  \n  readonly TAG = \"Mpr Form Page\";\n  MPRForm: FormGroup;\n  organizationList:any;\n  documentStatusList:any;\n  reasonForMPRList:any;\n  gradeList:any;\n  jobTitleList:any;\n  designationOrRoleList:any;\n  departmentList:any;\n  locationList:any;\n  jobListingList:any;\n  qualificationList:any;\n  selectedQualificationList=[];\n  resourceRequirementList;\n  resourceDepartmentList;\n  resourceRequirementMasterList;\n  resourceDepartmentMasterList;\n  now = new Date();\n  year = this.now.getFullYear();\n  month = this.now.getMonth() + 1;\n  day = this.now.getDate();\n  maxDate = this.year + \"-\" + this.month + \"-\" + this.day;\n  organizationLbl;\n  activityLbl;\n  taggedHRBranchLbl;\n  selectedDocumentStatus;\n  selectedOrganization;\n  selectedJOBTitle;\n  selectedGrade;\n  selectedDepartment;\n  selectedLocation;\n  selectedDesignation;\n  selectedJobListing;\n  selectedQualification;\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n  page = new Page();\n  public columns: any;\n  public rows:any [];\n  selectedValue;\n  private observer: MutationObserver;\n  workExperienceModel;\n  workExperienceModel_lower = 0;\n  workExperienceModel_upper = 0;\n  CTCRangeModel;\n  CTCRangeModel_lower;\n  CTCRangeModel_upper;\n  AgeRangeModel;\n  AgeRangeModel_lower;\n  AgeRangeModel_upper;\n  maxCTCLbl = \" Lakh\";\n  jobDescriptionList;\n  selectedJDForEdit;\n  MPRMasterDataList;\n  resource_requirement_List;\n  disable_save_jd_btn = true;\n  selectedResourceRequirementList;\n  existingMPR;\n  existingMPRStatus = false;\n\n  validation_messages = {\n    'organizationDropDownErrorMessage': [{ type: 'required', message: ' *Please Select Organization.' }],\n    'documentStatusDropDownErrorMessage': [{ type: 'required', message: ' *Please Select Document Status.' }],\n    'reasonForMPRDropDownErrorMessage': [{ type: 'required', message: ' *Please Select Reason for MPR.' }],\n    'gradeDropDownErrorMessage': [{ type: 'required', message: '*Please Select Grade.' }],\n    'jobTitleDropDownErrorMessage': [{ type: 'required', message: '*Please Select Job Title.' }],\n    'designationOrRoleDropDownErrorMessage': [{ type: 'required', message: '*Please Select Designation / Role.' }],\n    'departmentDropDownErrorMessage': [{ type: 'required', message: '*Please Select Department.' }],\n    'locationDropDownErrorMessage': [{ type: 'required', message: '*Please Select Location.' }],\n    'numberOfPositionTxtErrorMessage': [{ type: 'required', message: '*Please Enter Number Of Position.' }],\n    'positionClosedTxtErrorMessage': [{ type: 'required', message: '*Please Enter Number Of Position Closed.' }],\n    'workExpFromTxtErrorMessage': [{ type: 'required', message: '*Please Select Work Experience From.' }],\n    'workExpFromToTxtErrorMessage': [{ type: 'required', message: '*Please Select Work Experience To.' }],\n    'ctcRangeFromTxtErrorMessage': [{ type: 'required', message: '*Please Select CTC Range From.' }],\n    'ctcRangeToTxtErrorMessage': [{ type: 'required', message: '*Please Select CTC Range To.' }],\n    'ageFromTxtErrorMessage': [{ type: 'required', message: '*Please Select Age Range From.' }],\n    'ageToTxtErrorMessage': [{ type: 'required', message: '*Please Select Age Range To.' }],\n    'jobListingDropDownErrorMessage': [{ type: 'required', message: '*Please Select Job Listing.' }],\n    'onCompanyRollChkErrorMessage': [{ type: 'required', message: '*Please Select Company Roll.' }],\n    'qualificationDropDownErrorMessage': [{ type: 'required', message: '*Please Select Qualification.' }],\n    'jobDescriptionTxtErrorMessage': [{ type: 'required', message: '*Please Select Job Description.' }],\n    'resourceRequirementDropDownErrorMessage': [{ type: 'required', message: '*Please Select Resource Requirement.' }],\n    'resourceDepartmentDropDownErrorMessage': [{ type: 'required', message: '*Please Select Resource Requirement.' }],\n    'resourceRequiredChkErrorMessage': [{ type: 'required', message: '*Please Select Resource Required.' }]\n  \n  }\n\n  constructor(private fb: FormBuilder,public commonfun: Commonfun,public msg: Message,\n              private MPRService: MprFormService,private loginService: LoginauthService,\n              private el: ElementRef,private route: ActivatedRoute,private router: Router,private alertCtrl: AlertController) {\n  \n    this.MPRForm = this.fb.group({\n      organizationDropDown: [, Validators.required],\n      reasonForMPRDropDown: [, Validators.required],\n      gradeDropDown: [, Validators.required],\n      jobTitleDropDown: [, Validators.required],\n      designationOrRoleDropDown: [, Validators.required],\n      departmentDropDown: [, Validators.required],\n      locationDropDown: [, Validators.required],\n      numberOfPositionTxt: [, Validators.required],\n      positionClosedTxt: [],\n      jobListingDropDown: [, Validators.required],\n      onCompanyRollChk: [],\n      qualificationDropDown: [],\n      jobDescriptionTxt:[],\n      resourceRequirementDropDown: [],\n      resourceDepartmentDropDown: [],\n      resourceRequiredChk:[],\n      \n    });\n   \n\n  }\n\n  async ngOnInit() {\n    try {\n          this.commonfun.loadingPresent();\n        \n         \n\n          this.organizationList = await this.MPRService.getOrganizationList().toPromise();\n          this.qualificationList = await this.MPRService.getQualificationList().toPromise();\n          this.reasonForMPRList = await this.MPRService.getReasonForMPRList().toPromise();\n          this.jobListingList = await this.MPRService.getJobListingList().toPromise();\n          this.resourceRequirementMasterList = await this.MPRService.getResourceRequirementMasterList().toPromise();\n          this.resourceDepartmentMasterList = await this.MPRService.getResourceDepartmentMasterList().toPromise();\n\n          if(this.selectedQualificationList == undefined || this.selectedQualificationList.length == 0){\n            let qualificationDropDownTemp = null;\n            qualificationDropDownTemp = this.MPRForm.get('qualificationDropDown');\n            qualificationDropDownTemp.setValidators(Validators.required);\n            qualificationDropDownTemp.updateValueAndValidity();\n          }\n          this.route.queryParams.subscribe(params => {\n            if (params && params.special) {\n              this.existingMPR = JSON.parse(params.special);\n              if(!!this.existingMPR){\n                this.existingMPRStatus = true;\n                this.bindExistingData();\n              }\n              console.log(this.TAG,JSON.parse(params.special));\n            }\n          });\n          \n          this.commonfun.loadingDismiss();\n    } catch (error) {\n      this.commonfun.loadingDismiss();\n      console.log(this.TAG,error);\n    }\n  }\n  ionViewWillEnter(){\n    try {\n         \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public refreshPage(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  private async bindExistingData(){\n    try {\n         // this.existingMPRStatus\n         this.organizationList.forEach((org=>{\n           if(org.id == this.existingMPR.org_id){\n             this.selectedOrganization = org;\n             this.onOrganizationChange();\n            }}));\n            this.reasonForMPRList.forEach((reason=>{\n             if(reason.code == this.existingMPR.mpr_reason.code){\n              this.MPRForm.controls.reasonForMPRDropDown.setValue(reason);\n             }\n            }))\n            this.MPRForm.controls.numberOfPositionTxt.setValue(this.existingMPR.number_of_position);\n            this.workExperienceModel = {lower:Number(this.existingMPR.work_rang_from),upper:Number(this.existingMPR.work_rang_to)};\n            this.CTCRangeModel = {lower:Number(this.existingMPR.ctc_rang_from),upper:Number(this.existingMPR.ctc_rang_to)};\n            this.AgeRangeModel = {lower:Number(this.existingMPR.age_rang_from),upper:Number(this.existingMPR.age_rang_to)};\n\n            this.jobListingList.forEach(jobList=>{\n             if(jobList.code = this.existingMPR.Job_list.code)\n              this.selectedJobListing = jobList;\n            })\n            \n            this.qualificationList.forEach(qualification=>{\n              if(qualification.qualification_id = this.existingMPR.Qualification_List[0].qualification_id){\n                this.selectedQualificationList = [qualification];\n                if(this.selectedQualificationList == undefined || this.selectedQualificationList.length == 0){\n                  let control1 = null;\n                  control1 = this.MPRForm.get('qualificationDropDown');\n                  control1.clearValidators();\n                  control1.updateValueAndValidity();\n                }\n              }\n            })\n\n\n            this.MPRForm.controls.onCompanyRollChk.setValue(this.existingMPR.on_company_roll);\n\n\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public async onOrganizationChange(){\n   try {\n          this.MPRMasterDataList = await this.MPRService.getMPRMasterDataList(this.selectedOrganization).toPromise();\n          console.log(this.TAG,this.MPRMasterDataList);\n\n          this.activityLbl = this.MPRService.activity_name;\n          this.organizationList.forEach((organization=>{\n          if(organization.hasOwnProperty('hrbranch')){\n              this.taggedHRBranchLbl =  organization.name;\n            }\n          }))\n          this.jobTitleList = this.MPRMasterDataList.jobtitlename.JobTitleList;\n          this.gradeList = this.MPRMasterDataList.Gradename.GradeList;\n          this.departmentList = this.MPRMasterDataList.Department.DepartmentList;\n          this.locationList = this.MPRMasterDataList.Locationname.LocationList;\n          this.designationOrRoleList = this.MPRMasterDataList.Rolename.RoleList;\n\n          if(!!this.existingMPR){\n            this.jobTitleList.forEach((job=>{if(job.Standardtemp_id == this.existingMPR.Standardtemp_id){this.selectedJOBTitle = job;}}))\n           \n            this.gradeList.forEach((grade=>{if(grade.grade_id == this.existingMPR.grade_id){this.selectedGrade = grade;}}))\n           \n            this.departmentList.forEach((department=>{\n              if(department.department_id==this.existingMPR.department_id){\n                this.selectedDepartment = department;\n              }\n            }))\n\n            this.locationList.forEach((location=>{\n              if(location.location_id==this.existingMPR.location_id){\n                this.selectedLocation = location;\n              }\n            }))\n            this.designationOrRoleList.forEach((role=>{\n              if(role.role_id == this.existingMPR.role_id){\n                this.selectedDesignation = role;\n              }\n            }))\n            \n          }\n\n           \n          \n   } catch (error) {\n     console.log(this.TAG,error);\n   }\n    \n\n\n\n  }\n  public onReasonForMPRChange(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onGradeChange(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onJobTitleChange(){\n    try {\n          console.log(this.TAG,this.MPRForm.controls['jobTitleDropDown'].value);\n          this.jobDescriptionList = this.MPRForm.controls['jobTitleDropDown'].value.Job_Description_List;\n         // this.resourceRequirementList = this.MPRForm.controls['jobTitleDropDown'].value.Resource_requirement_List;\n         this.resource_requirement_List = this.MPRForm.controls['jobTitleDropDown'].value.Resource_requirement_List;\n\n          if(this.resource_requirement_List == undefined || this.resource_requirement_List.length == 0){\n            let control1 = null;\n            control1 = this.MPRForm.get('resourceRequirementDropDown');\n            control1.setValidators(Validators.required);\n            control1.updateValueAndValidity();\n            let control2 = null;\n            control2 = this.MPRForm.get('resourceDepartmentDropDown');\n            control2.setValidators(Validators.required);\n            control2.updateValueAndValidity();\n          }\n        //  console.log(this.TAG, this.resource_requirement_List);\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onDesignationOrRoleChange(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onDepartmentChange(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onLocationChange(){\n    try {\n          const ionSelects = document.querySelectorAll('ion-select');\n          ionSelects.forEach((sel) => {\n            sel.shadowRoot.querySelectorAll('.select-text')\n              .forEach((elem) => {\n               //  console.log(\"HTML\",elem);\n\n\n                //  setTimeout(() => {\n                //   console.log(\"HTML\",elem.textContent);\n                //   let test = elem.textContent;\n                //   var split_str = test.split(\",\");\n                //   if(split_str.length > 1){\n                //     console.log(\"HTML DATA\",split_str);\n                //     let tags = split_str.map(skill => `<ion-badge style=\"background: #27AE60 !important;margin: 2px;padding: 5px;border-radius: 10px;\">${skill}</ion-badge>`).join('');\n                //     elem.innerHTML = tags;\n                //   }\n                //  }, 1000);\n\n                // var test = elem.toString();\n                //  var result = test.match(/<div>(.*?)<\\/div>/g).map(function(val){\n                //   return val.replace(/<\\/?div>/g,'');\n                //  });\n                //   console.log(\"TET \",test);\n\n               \n               \n                          \n                elem.setAttribute('style', 'white-space: break-spaces !important;');\n              \n              });\n          });\n\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onQualificationChange(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public removeSelectedQualification(selectedQualification){\n    try {\n          const result = this.selectedQualificationList.filter(item => item.id != selectedQualification.id);\n          this.selectedQualificationList = result;\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onAddQualification(){\n    try {\n          //console.log(this.TAG,\"onAddQualification\",this.MPRForm.controls['qualificationDropDown'].value);    \n          if(this.MPRForm.controls['qualificationDropDown'].value!=null){\n              if(this.selectedQualificationList.length > 0){\n                let sameQualificationCheck = this.selectedQualificationList.find(e => e.id === this.MPRForm.controls['qualificationDropDown'].value.id);\n                if(sameQualificationCheck!=null || sameQualificationCheck!=undefined){\n                  this.commonfun.presentAlert(\"MPR Form\",\"Validation\",\" This qualification is already added\");\n                } else {\n                  let temp1 = {\n                    \"code\":this.MPRForm.controls['qualificationDropDown'].value.code,\n                    \"qualification_id\":this.MPRForm.controls['qualificationDropDown'].value.id,\n                    \"name\":this.MPRForm.controls['qualificationDropDown'].value.name\n                  }\n                  this.selectedQualificationList.push(temp1);\n                }\n              } else {\n                let temp = {\n                  \"code\":this.MPRForm.controls['qualificationDropDown'].value.code,\n                  \"qualification_id\":this.MPRForm.controls['qualificationDropDown'].value.id,\n                  \"name\":this.MPRForm.controls['qualificationDropDown'].value.name\n                }\n                this.selectedQualificationList = [temp];\n              }\n          } else {\n            this.commonfun.presentAlert(\"MPR Form\",\"Validation\",\"Please select qualification\");\n          }\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onWorkExperienceChange(data) {\n   // console.log(data);\n    this.workExperienceModel_lower = data.lower;\n    this.workExperienceModel_upper = data.upper;\n  }\n  public onCTCRangeChange(selectedCTC){\n    this.CTCRangeModel_lower = selectedCTC.lower;\n    this.CTCRangeModel_upper = selectedCTC.upper;\n    if(this.CTCRangeModel_upper==100) {\n      this.maxCTCLbl = \" CR\";\n      this.CTCRangeModel_upper = 1;\n    } else {\n      this.maxCTCLbl = \" Lakh\";\n    }\n   \n\n\n  }\n  public onAgeRangeChange(selectedAgeRange){\n    this.AgeRangeModel_lower = selectedAgeRange.lower;\n    this.AgeRangeModel_upper = selectedAgeRange.upper;\n  }\n  public editSelectedJobDescription(selectedJD){\n    try {\n          this.disable_save_jd_btn = false;\n          this.MPRForm.controls.jobDescriptionTxt.setValue(selectedJD.job_description);\n          this.selectedJDForEdit = selectedJD;\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onSaveJD(){\n    try {\n          \n          let jdId = this.jobDescriptionList.findIndex(jd=> jd.job_des_id === this.selectedJDForEdit.job_des_id);\n          this.jobDescriptionList[jdId].job_description = this.MPRForm.get('jobDescriptionTxt').value;\n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public onAddResourceRequirement(){\n    try {\n          \n          let resource = {\n            \"Resource_requirement\":{\n              \"id\":    this.MPRForm.get('resourceRequirementDropDown').value.id,\n              \"name\":  this.MPRForm.get('resourceRequirementDropDown').value.name,\n              \"code\":  this.MPRForm.get('resourceRequirementDropDown').value.code\n            },\n            \"Department\":{\n              \"id\":    this.MPRForm.get('resourceDepartmentDropDown').value.id,\n              \"name\":  this.MPRForm.get('resourceDepartmentDropDown').value.name,\n              \"code\":  this.MPRForm.get('resourceDepartmentDropDown').value.code\n            },\n            \"Required\":{\n              \"isrequired\":this.MPRForm.get('resourceRequiredChk').value\n            }\n          }\n          //console.log(this.MPRForm.get('resourceRequirementDropDown').value);\n          if(!!this.resource_requirement_List){\n            this.resource_requirement_List.push(resource);\n          } else {\n            this.resource_requirement_List = [resource];\n           // console.log(this.resource_requirement_List);\n          }\n\n          \n    } catch (error) {\n      \n    }\n  }\n  public removeResourceRequirement(resourceRequirement){\n    console.log(this.TAG,resourceRequirement);\n    const result = this.resource_requirement_List.filter(item => item.Resource_requirement.id != resourceRequirement.Resource_requirement.id);\n    this.resource_requirement_List = result;\n  }\n  async presentAlert(Header: string, SubHeader: string, Message: string) {\n    const alert = await this.alertCtrl.create({\n      header: Header,\n      subHeader: SubHeader,\n      message: Message,\n      buttons: [{\n        text: \"OK\",\n        handler: (ok) => {\n          \n          this.router.navigateByUrl('/home');\n        }\n      }]\n    });\n    alert.dismiss(() => console.log('The alert has been closed.'));\n    await alert.present();\n  }\n  public async onMPRFormSubmit(MPRForm,status){\n    try {\n          console.log(this.TAG,\"Location\",this.MPRForm.get('locationDropDown').value);\n          if(this.CTCRangeModel != undefined && this.CTCRangeModel.upper != undefined && this.CTCRangeModel.upper !=0){\n            if(this.AgeRangeModel != undefined && this.AgeRangeModel.upper != undefined && this.AgeRangeModel.upper !=0){\n               \n                if(!!this.selectedQualificationList && this.selectedQualificationList.length > 0){\n                  if(!!this.jobDescriptionList && this.jobDescriptionList.length > 0){\n                  //  console.log(this.TAG,MPRForm);\n                    let mprPostData = {\n                      \"Standardtemp_id\": this.MPRForm.controls['jobTitleDropDown'].value.Standardtemp_id,\n                      \"org_id\": this.MPRForm.get('organizationDropDown').value.id,\n                      \"mpr_reason_code\": this.MPRForm.get('reasonForMPRDropDown').value.code,\n                      \"grade_id\": this.MPRForm.get('gradeDropDown').value.grade_id,\n                      \"role_id\": this.MPRForm.get('designationOrRoleDropDown').value.role_id,\n                      \"department_id\": this.MPRForm.get('departmentDropDown').value.department_id,\n                      \"location_id\": this.MPRForm.get('locationDropDown').value.location_id,\n                      \"number_of_position\": this.MPRForm.get('numberOfPositionTxt').value,\n                      \"position_closed\":\"\",\n                      \"work_rang_from\": this.workExperienceModel_lower,\n                      \"work_rang_to\": this.workExperienceModel_upper,\n                      \"ctc_rang_from\": this.CTCRangeModel.lower,\n                      \"ctc_rang_to\": this.CTCRangeModel.upper,\n                      \"age_rang_from\": this.AgeRangeModel.lower,\n                      \"age_rang_to\": this.AgeRangeModel.upper,\n                      \"job_list_code\": this.MPRForm.get('jobListingDropDown').value.code,\n                      \"on_company_roll\": this.MPRForm.get('onCompanyRollChk').value,\n                      \"qualification\": this.selectedQualificationList,\n                      \"Job_Description_List\": this.jobDescriptionList,\n                      \"Resource_requirement_List\": this.resource_requirement_List,\n                      \"is_update\":this.existingMPRStatus,\n                      \"is_approve\":status,\n                      \"mpr_id\": this.existingMPR.mpr_id ? this.existingMPR.mpr_id : '0'\n                      }\n                    let postMPRForm = await this.MPRService.postMPRForm(mprPostData).toPromise();\n                    console.log(this.TAG,\"Post Form\",mprPostData);\n                    if(!!postMPRForm &&postMPRForm.resposemsg == \"Success\")  {\n                       console.log(this.TAG,postMPRForm);\n                       this.presentAlert(\"MPR Form\",postMPRForm.resposemsg,postMPRForm.logmsg);\n                    } else {\n                      console.log(this.TAG,postMPRForm);\n                      this.commonfun.presentAlert(\"MPR Form\",\"Error\",\"Some things went wrong please try again.\");\n                    }\n\n\n                  } else {\n                    this.commonfun.presentAlert(\"MPR Form\",\"Validation\",\"Job Description Can Not Be Empty\");\n                  }\n                  \n                } else {\n                  this.commonfun.presentAlert(\"MPR Form\",\"Validation\",\"Please Add Qualification\");\n                }\n            } else {\n              this.commonfun.presentAlert(\"MPR Form\",\"Validation\",\"Please Select Age Range\");\n            } \n          } else {\n            this.commonfun.presentAlert(\"MPR Form\",\"Validation\",\"Please Select CTC Range\");\n          }\n    } catch (error) {\n      console.log(this.TAG,error);\n      this.commonfun.presentAlert(\"MPR Form\",\"Error\",error.message);\n    }\n  }\n  public approved(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n  public disApproved(){\n    try {\n      \n    } catch (error) {\n      console.log(this.TAG,error);\n    }\n  }\n}\n"],"sourceRoot":""}